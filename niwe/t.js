/* Generated by the Nim Compiler v0.16.0 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI49026 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI52137 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI52136 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI52120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50908 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI50907 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI50891 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50251 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI50250 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI50234 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI128 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI50212 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3456 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI65063 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI53063 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI53062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI53071 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI53068 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI53057 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI53056 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI53050 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI53044 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI29022 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI53042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI53074 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI29017 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI27211 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI27209 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI29015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI27231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI27229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI29011 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI29002 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI27235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI27233 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI29006 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3444 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3452 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI65034 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI65031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI65019 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI65018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI65009 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI65436 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3483 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3436 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
var NNI3436 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3436.node = NNI3436;
NTI3483.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3483, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3436.base = NTI3424;
NTI3440.base = NTI3436;
var NNI12409 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI12409.node = NNI12409;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3438.base = NTI3436;
NTI65018.base = NTI65019;
var NNI65009 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI65018, name: "Field1", sons: null}]};
NTI65009.node = NNI65009;
NTI65436.base = NTI65009;
NTI65034.base = NTI65009;
var NNI65031 = {kind: 1, offset: "s", len: 0, typ: NTI65034, name: "s", sons: null};
NTI65031.node = NNI65031;
var NNI3452 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3452.node = NNI3452;
NTI3452.base = NTI3424;
var NNI3444 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3444.node = NNI3444;
NTI3444.base = NTI3424;
var NNI3448 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3448.node = NNI3448;
var NNI3446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3446.node = NNI3446;
NTI3446.base = NTI3424;
NTI3448.base = NTI3446;
var NNI27235 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI27235.node = NNI27235;
NTI27235.base = NTI3408;
NTI27233.base = NTI27235;
var NNI29002 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: [{kind: 1, offset: 0, typ: NTI29002, name: "Fragment", len: 0, sons: null}, 
{kind: 1, offset: 1, typ: NTI29002, name: "Vertex", len: 0, sons: null}]};
NTI29002.node = NNI29002;
var NNI29006 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "source", len: 0, typ: NTI138, name: "source", sons: null}, 
{kind: 1, offset: "s", len: 0, typ: NTI27233, name: "s", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI29002, name: "kind", sons: null}]};
NTI29006.node = NNI29006;
var NNI27231 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI27231.node = NNI27231;
NTI27231.base = NTI3408;
NTI27229.base = NTI27231;
var NNI27211 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI27211.node = NNI27211;
NTI27211.base = NTI3408;
NTI27209.base = NTI27211;
NTI29015.base = NTI27209;
NTI29017.base = NTI114;
var NNI29011 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "p", len: 0, typ: NTI27229, name: "p", sons: null}, 
{kind: 1, offset: "vertex", len: 0, typ: NTI29006, name: "vertex", sons: null}, 
{kind: 1, offset: "fragment", len: 0, typ: NTI29006, name: "fragment", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI29015, name: "colors", sons: null}, 
{kind: 1, offset: "attributes", len: 0, typ: NTI29017, name: "attributes", sons: null}]};
NTI29011.node = NNI29011;
var NNI53074 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "sides", len: 0, typ: NTI104, name: "sides", sons: null}, 
{kind: 1, offset: "bcradius", len: 0, typ: NTI124, name: "bcradius", sons: null}, 
{kind: 1, offset: "filled", len: 0, typ: NTI130, name: "filled", sons: null}]};
NTI53074.node = NNI53074;
var NNI29022 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI124, name: "Field3", sons: null}]};
NTI29022.node = NNI29022;
var NNI53044 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI53044.node = NNI53044;
var NNI53050 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI53050.node = NNI53050;
var NNI53042 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "color", len: 0, typ: NTI29022, name: "color", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI53044, name: "pos", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI124, name: "scale", sons: null}, 
{kind: 1, offset: "rot", len: 0, typ: NTI124, name: "rot", sons: null}, 
{kind: 1, offset: "origin", len: 0, typ: NTI53050, name: "origin", sons: null}, 
{kind: 1, offset: "centered", len: 0, typ: NTI130, name: "centered", sons: null}]};
NTI53042.node = NNI53042;
NTI53042.base = NTI3408;
NTI53074.base = NTI53042;
var NNI53057 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI53057.node = NNI53057;
var NNI53056 = {kind: 1, offset: "size", len: 0, typ: NTI53057, name: "size", sons: null};
NTI53056.node = NNI53056;
NTI53056.base = NTI53042;
var NNI53068 = {kind: 1, offset: "radius", len: 0, typ: NTI124, name: "radius", sons: null};
NTI53068.node = NNI53068;
NTI53068.base = NTI53042;
var NNI53071 = {kind: 1, offset: "radius", len: 0, typ: NTI124, name: "radius", sons: null};
NTI53071.node = NNI53071;
NTI53071.base = NTI53042;
var NNI53063 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI53063.node = NNI53063;
var NNI53062 = {kind: 1, offset: "size", len: 0, typ: NTI53063, name: "size", sons: null};
NTI53062.node = NNI53062;
NTI53062.base = NTI53042;
NTI65063.base = NTI65019;
var NNI3456 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3456.node = NNI3456;
NTI3456.base = NTI3424;
NTI50212.base = NTI128;
NTI50251.base = NTI124;
NTI50250.base = NTI50251;
var NNI50234 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI50250, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI50234.node = NNI50234;
NTI50908.base = NTI124;
NTI50907.base = NTI50908;
var NNI50891 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI50907, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI50891.node = NNI50891;
NTI52137.base = NTI124;
NTI52136.base = NTI52137;
var NNI52120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI52136, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI52120.node = NNI52120;
NTI49026.base = NTI124;
function makeNimstrLit(c_13403) {

    var ln = c_13403.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_13403.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    }
function SetConstr() {

      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    }
function nimCopy(dest_18618, src_18619, ti_18620) {

var result_19029 = null;
switch (ti_18620.kind) {
case 21: case 22: case 23: case 5: if (!(isfatpointer_18601(ti_18620))) {
result_19029 = src_18619;
}
else {
result_19029 = [src_18619[0], src_18619[1]];}


break;
case 19:       if (dest_18618 === null || dest_18618 === undefined) {
        dest_18618 = {};
      }
      else {
        for (var key in dest_18618) { delete dest_18618[key]; }
      }
      for (var key in src_18619) { dest_18618[key] = src_18619[key]; }
      result_19029 = dest_18618;
    
break;
case 18: case 17: if (!((ti_18620.base == null))) {
result_19029 = nimCopy(dest_18618, src_18619, ti_18620.base);
}
else {
if ((ti_18620.kind == 17)) {
result_19029 = (dest_18618 === null || dest_18618 === undefined) ? {m_type: ti_18620} : dest_18618;}
else {
result_19029 = (dest_18618 === null || dest_18618 === undefined) ? {} : dest_18618;}
}
nimCopyAux(result_19029, src_18619, ti_18620.node);

break;
case 24: case 4: case 27: case 16:       if (src_18619 === null) {
        result_19029 = null;
      }
      else {
        if (dest_18618 === null || dest_18618 === undefined) {
          dest_18618 = new Array(src_18619.length);
        }
        else {
          dest_18618.length = src_18619.length;
        }
        result_19029 = dest_18618;
        for (var i = 0; i < src_18619.length; ++i) {
          result_19029[i] = nimCopy(result_19029[i], src_18619[i], ti_18620.base);
        }
      }
    
break;
case 28:       if (src_18619 !== null) {
        result_19029 = src_18619.slice(0);
      }
    
break;
default: 
result_19029 = src_18619;
break;
}
return result_19029;
}
function eqStrings(a_16003, b_16004) {

    if (a_16003 == b_16004) return true;
    if ((!a_16003) || (!b_16004)) return false;
    var alen = a_16003.length;
    if (alen != b_16004.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16003[i] != b_16004[i]) return false;
    return true;
  }
function arrayConstr(len_19203, value_19204, typ_19205) {

      var result = new Array(len_19203);
      for (var i = 0; i < len_19203; ++i) result[i] = nimCopy(null, value_19204, typ_19205);
      return result;
    }
function cstrToNimstr(c_13603) {

  var ln = c_13603.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_13603.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function toJSStr(s_13803) {

    var len = s_13803.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_13803[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_13803[i] < 128)
        asciiPart[i] = fcc(s_13803[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  }
function raiseException(e_12806, ename_12807) {

e_12806.name = ename_12807;
if ((excHandler == 0)) {
unhandledException(e_12806);
}

e_12806.trace = nimCopy(null, rawwritestacktrace_12628(), NTI138);
throw e_12806;}
function chckIndx(i_19209, a_19210, b_19211) {

var Tmp1;
var result_19212 = 0;
BeforeRet: do {
if (!(a_19210 <= i_19209)) Tmp1 = false; else {Tmp1 = (i_19209 <= b_19211); }if (Tmp1) {
result_19212 = i_19209;
break BeforeRet;
}
else {
raiseIndexError();
}

} while (false); 
return result_19212;
}
function addInt(a_16256, b_16257) {

      var result = a_16256 + b_16257;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function subInt(a_16403, b_16404) {

      var result = a_16403 - b_16404;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function mulInt(a_16603, b_16604) {

      var result = a_16603 * b_16604;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function chckRange(i_19215, a_19216, b_19217) {

var Tmp1;
var result_19218 = 0;
BeforeRet: do {
if (!(a_19216 <= i_19215)) Tmp1 = false; else {Tmp1 = (i_19215 <= b_19217); }if (Tmp1) {
result_19218 = i_19215;
break BeforeRet;
}
else {
raiseRangeError();
}

} while (false); 
return result_19218;
}
function negInt(a_18203) {

var result_18204 = 0;
result_18204 = (a_18203 * -1);
return result_18204;
}
function divInt(a_16803, b_16804) {

      if (b_16804 == 0) raiseDivByZero();
      if (b_16804 == -1 && a_16803 == 2147483647) raiseOverflow();
      return Math.floor(a_16803 / b_16804);
    }
var nimvm_5887 = false;
var nim_program_result = 0;
var globalraisehook_10414 = [null];
var localraisehook_10419 = [null];
var outofmemhook_10422 = [null];
function isfatpointer_18601(ti_18603) {

var result_18604 = false;
BeforeRet: do {
result_18604 = !((SetConstr(17, 16, 4, 18, 27, 19, 23, 22, 21)[ti_18603.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_18604;
}
function nimCopyAux(dest_18623, src_18624, n_18626) {

switch (n_18626.kind) {
case 0: 
break;
case 1:       dest_18623[n_18626.offset] = nimCopy(dest_18623[n_18626.offset], src_18624[n_18626.offset], n_18626.typ);
    
break;
case 2: L1: do {
var i_19015 = 0;
var HEX3Atmp_19017 = 0;
HEX3Atmp_19017 = (n_18626.len - 1);
var res_19020 = 0;
L2: do {
L3: while (true) {
if (!(res_19020 <= HEX3Atmp_19017)) break L3;
i_19015 = res_19020;
nimCopyAux(dest_18623, src_18624, n_18626.sons[i_19015]);
res_19020 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_18623[n_18626.offset] = nimCopy(dest_18623[n_18626.offset], src_18624[n_18626.offset], n_18626.typ);
      for (var i = 0; i < n_18626.sons.length; ++i) {
        nimCopyAux(dest_18623, src_18624, n_18626.sons[i][1]);
      }
    
break;
}
}
function add_10438(x_10441, x_10441_Idx, y_10442) {

        var len = x_10441[0].length-1;
        for (var i = 0; i < y_10442.length; ++i) {
          x_10441[0][len] = y_10442.charCodeAt(i);
          ++len;
        }
        x_10441[0][len] = 0
      }
function auxwritestacktrace_12404(f_12406) {

var Tmp3;
var result_12407 = [null];
var it_12415 = f_12406;
var i_12416 = 0;
var total_12417 = 0;
var tempframes_12421 = arrayConstr(64, {Field0: null, Field1: 0}, NTI12409);
L1: do {
L2: while (true) {
if (!!((it_12415 == null))) Tmp3 = false; else {Tmp3 = (i_12416 <= 63); }if (!Tmp3) break L2;
tempframes_12421[i_12416].Field0 = it_12415.procname;
tempframes_12421[i_12416].Field1 = it_12415.line;
i_12416 += 1;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
L4: do {
L5: while (true) {
if (!!((it_12415 == null))) break L5;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
result_12407[0] = nimCopy(null, makeNimstrLit(""), NTI138);
if (!((total_12417 == i_12416))) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_12407[0] = makeNimstrLit("(");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr(((total_12417 - i_12416))+"")); } else { result_12407[0] = cstrToNimstr(((total_12417 - i_12416))+"");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_12407[0] = makeNimstrLit(" calls omitted) ...\x0A");};
}

L6: do {
var j_12615 = 0;
var HEX3Atmp_12621 = 0;
HEX3Atmp_12621 = (i_12416 - 1);
var res_12624 = HEX3Atmp_12621;
L7: do {
L8: while (true) {
if (!(0 <= res_12624)) break L8;
j_12615 = res_12624;
add_10438(result_12407, 0, tempframes_12421[j_12615].Field0);
if ((0 < tempframes_12421[j_12615].Field1)) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_12407[0] = makeNimstrLit(", line: ");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr((tempframes_12421[j_12615].Field1)+"")); } else { result_12407[0] = cstrToNimstr((tempframes_12421[j_12615].Field1)+"");};
}

if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_12407[0] = makeNimstrLit("\x0A");};
res_12624 -= 1;
}
} while(false);
} while(false);
return result_12407[0];
}
function rawwritestacktrace_12628() {

var result_12630 = null;
if (!((framePtr == null))) {
result_12630 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxwritestacktrace_12404(framePtr)), NTI138);
}
else {
result_12630 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
}

return result_12630;
}
function unhandledException(e_12654) {

var Tmp1;
var buf_12655 = /**/[makeNimstrLit("")];
if (!!(eqStrings(e_12654.message, null))) Tmp1 = false; else {Tmp1 = !((e_12654.message[0] == 0)); }if (Tmp1) {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception: ");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(e_12654.message); } else { buf_12655[0] = e_12654.message;};
}
else {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception");};
}

if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_12655[0] = makeNimstrLit(" [");};
add_10438(buf_12655, 0, e_12654.name);
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_12655[0] = makeNimstrLit("]\x0A");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(rawwritestacktrace_12628()); } else { buf_12655[0] = rawwritestacktrace_12628();};
var cbuf_12801 = toJSStr(buf_12655[0]);
framePtr = null;
  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_12801);
  }
  else {
    throw cbuf_12801;
  }
  }
function raiseOverflow() {

var e_13236 = null;
e_13236 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_13236.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
raiseException(e_13236, "OverflowError");
}
function raiseDivByZero() {

var e_13252 = null;
e_13252 = {m_type: NTI3438, parent: null, name: null, message: null, trace: null};
e_13252.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
raiseException(e_13252, "DivByZeroError");
}
var objectid_56233 = /**/[0];
function initeventemitter_65418() {

var result_65420 = {s: null};
var F={procname:"events.initEventEmitter",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 120;
result_65420.s = nimCopy(null, [], NTI65436);
framePtr = F.prev;
return result_65420;
}
function raiseIndexError() {

var e_13284 = null;
e_13284 = {m_type: NTI3452, parent: null, name: null, message: null, trace: null};
e_13284.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
raiseException(e_13284, "IndexError");
}
function geteventhandler_65250(emitter_65253, event_65254) {

var result_65255 = 0;
var F={procname:"events.getEventHandler",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
BeforeRet: do {
L1: do {
F.line = 92;
var k_65265 = 0;
F.line = 1926;
var HEX3Atmp_65267 = 0;
F.line = 92;
HEX3Atmp_65267 = (emitter_65253.s != null ? (emitter_65253.s.length-1) : -1);
F.line = 1908;
var res_65270 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_65270 <= HEX3Atmp_65267)) break L3;
F.line = 1910;
k_65265 = res_65270;
if (eqStrings(emitter_65253.s[chckIndx(k_65265, 0, emitter_65253.s.length)-0].Field0, event_65254)) {
F.line = 93;
result_65255 = k_65265;
break BeforeRet;
}

res_65270 = addInt(res_65270, 1);
}
} while(false);
} while(false);
F.line = 94;
result_65255 = -1;
break BeforeRet;
} while (false); 
framePtr = F.prev;
return result_65255;
}
function sysfatal_21221(message_21227) {

var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 2578;
var e_21229 = null;
e_21229 = {m_type: NTI3444, parent: null, name: null, message: null, trace: null};
F.line = 2580;
e_21229.message = nimCopy(null, message_21227, NTI138);
F.line = 2581;
raiseException(e_21229, "AssertionError");
framePtr = F.prev;
}
function raiseassert_21216(msg_21218) {

var F={procname:"system.raiseAssert",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
sysfatal_21221(msg_21218);
framePtr = F.prev;
}
function failedassertimpl_21239(msg_21241) {

var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
raiseassert_21216(msg_21241);
framePtr = F.prev;
}
function emit_65297(emitter_65300, eventhandler_65302, args_65303) {

var F={procname:"events.emit",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
L1: do {
F.line = 110;
var fn_65402 = null;
F.line = 3495;
var HEX3Atmp_65404 = null;
F.line = 110;
HEX3Atmp_65404 = eventhandler_65302.Field1;
F.line = 3497;
var i_65407 = 0;
F.line = 3498;
var L_65409 = (HEX3Atmp_65404 != null ? HEX3Atmp_65404.length : 0);
L2: do {
F.line = 3499;
L3: while (true) {
if (!(i_65407 < L_65409)) break L3;
F.line = 3500;
fn_65402 = HEX3Atmp_65404[chckIndx(i_65407, 0, HEX3Atmp_65404.length)-0];
fn_65402(args_65303);
i_65407 = addInt(i_65407, 1);
if (!(((HEX3Atmp_65404 != null ? HEX3Atmp_65404.length : 0) == L_65409))) {
failedassertimpl_21239(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
framePtr = F.prev;
}
function emit_65410(emitter_65413, event_65414, args_65415) {

var F={procname:"events.emit",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 114;
var i_65416 = geteventhandler_65250(emitter_65413, event_65414);
if ((0 <= i_65416)) {
emit_65297(emitter_65413, emitter_65413.s[chckIndx(i_65416, 0, emitter_65413.s.length)-0], args_65415);
}

framePtr = F.prev;
}
function hash_56801(x_56803) {

var result_56804 = 0;
var F={procname:"hashes.hash",prev:framePtr,filename:"lib/pure/hashes.nim",line:0};
framePtr = F;
F.line = 109;
result_56804 = x_56803;
framePtr = F.prev;
return result_56804;
}
function isfilled_59465(hcode_59467) {

var result_59468 = false;
var F={procname:"tables.isFilled",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
F.line = 18;
result_59468 = !((hcode_59467 == 0));
framePtr = F.prev;
return result_59468;
}
function nexttry_59601(h_59603, maxhash_59604) {

var result_59605 = 0;
var F={procname:"tables.nextTry",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
F.line = 28;
result_59605 = (addInt(h_59603, 1) & maxhash_59604);
framePtr = F.prev;
return result_59605;
}
function rawget_63460(t_63465, key_63467, hc_63469, hc_63469_Idx) {

var Tmp3;
var result_63470 = 0;
var F={procname:"rawGet.rawGet",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 43;
hc_63469[hc_63469_Idx] = hash_56801(key_63467);
if ((hc_63469[hc_63469_Idx] == 0)) {
F.line = 45;
hc_63469[hc_63469_Idx] = 314159265;
}

F.line = 31;
var h_63472 = (hc_63469[hc_63469_Idx] & (t_63465.data != null ? (t_63465.data.length-1) : -1));
L1: do {
F.line = 32;
L2: while (true) {
if (!isfilled_59465(t_63465.data[chckIndx(h_63472, 0, t_63465.data.length)-0].Field0)) break L2;
if (!(t_63465.data[chckIndx(h_63472, 0, t_63465.data.length)-0].Field0 == hc_63469[hc_63469_Idx])) Tmp3 = false; else {Tmp3 = (t_63465.data[chckIndx(h_63472, 0, t_63465.data.length)-0].Field1 == key_63467); }if (Tmp3) {
F.line = 38;
result_63470 = h_63472;
break BeforeRet;
}

F.line = 39;
h_63472 = nexttry_59601(h_63472, (t_63465.data != null ? (t_63465.data.length-1) : -1));
}
} while(false);
F.line = 75;
result_63470 = subInt(-1, h_63472);
} while (false); 
framePtr = F.prev;
return result_63470;
}
function HEX5BHEX5D_63630(t_63636, key_63638) {

var result_63639 = 0;
var F={procname:"[].[]",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
framePtr = F;
F.line = 146;
var hc_63641 = [0];
F.line = 147;
var index_63643 = rawget_63460(t_63636, key_63638, hc_63641, 0);
if ((0 <= index_63643)) {
F.line = 148;
result_63639 = t_63636.data[chckIndx(index_63643, 0, t_63636.data.length)-0].Field2;
}
else {
F.line = 151;
F.line = 2559;
var e_63803 = null;
e_63803 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null};
F.line = 2561;
e_63803.message = nimCopy(null, (makeNimstrLit("key not found: ").slice(0,-1)).concat(cstrToNimstr((key_63638)+"")), NTI138);
raiseException(e_63803, "KeyError");
}

framePtr = F.prev;
return result_63639;
}
function tojskc_63625(k_63627) {

var result_63628 = 0;
var F={procname:"keymap.toJSKC",prev:framePtr,filename:"keymap.nim",line:0};
framePtr = F;
F.line = 231;
result_63628 = HEX5BHEX5D_63630({data: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 260, Field1: 260, Field2: 55}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 8, Field1: 8, Field2: 54}, {Field0: 9, Field1: 9, Field2: 53}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 13, Field1: 13, Field2: 52}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 16, Field1: 16, Field2: 112}, {Field0: 17, Field1: 17, Field2: 113}, {Field0: 18, Field1: 18, Field2: 114}, {Field0: 19, Field1: 19, Field2: 69}, {Field0: 20, Field1: 20, Field2: 65}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 27, Field1: 27, Field2: 51}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 32, Field1: 32, Field2: 1}, {Field0: 33, Field1: 33, Field2: 61}, {Field0: 34, Field1: 34, Field2: 62}, {Field0: 35, Field1: 35, Field2: 64}, {Field0: 36, Field1: 36, Field2: 63}, {Field0: 37, Field1: 37, Field2: 58}, {Field0: 38, Field1: 38, Field2: 60}, {Field0: 39, Field1: 39, Field2: 57}, {Field0: 40, Field1: 40, Field2: 59}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 44, Field1: 44, Field2: 68}, {Field0: 45, Field1: 45, Field2: 4}, {Field0: 46, Field1: 46, Field2: 56}, {Field0: 47, Field1: 47, Field2: 6}, {Field0: 48, Field1: 48, Field2: 7}, {Field0: 49, Field1: 49, Field2: 8}, {Field0: 50, Field1: 50, Field2: 9}, {Field0: 51, Field1: 51, Field2: 10}, {Field0: 52, Field1: 52, Field2: 11}, {Field0: 53, Field1: 53, Field2: 12}, {Field0: 54, Field1: 54, Field2: 13}, {Field0: 55, Field1: 55, Field2: 14}, {Field0: 56, Field1: 56, Field2: 15}, {Field0: 57, Field1: 57, Field2: 16}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 59, Field1: 59, Field2: 17}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 61, Field1: 61, Field2: 18}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 65, Field1: 65, Field2: 19}, {Field0: 66, Field1: 66, Field2: 20}, {Field0: 67, Field1: 67, Field2: 21}, {Field0: 68, Field1: 68, Field2: 22}, {Field0: 69, Field1: 69, Field2: 23}, {Field0: 70, Field1: 70, Field2: 24}, {Field0: 71, Field1: 71, Field2: 25}, {Field0: 72, Field1: 72, Field2: 26}, {Field0: 73, Field1: 73, Field2: 27}, {Field0: 74, Field1: 74, Field2: 28}, {Field0: 75, Field1: 75, Field2: 29}, {Field0: 76, Field1: 76, Field2: 30}, {Field0: 77, Field1: 77, Field2: 31}, {Field0: 78, Field1: 78, Field2: 32}, {Field0: 79, Field1: 79, Field2: 33}, {Field0: 80, Field1: 80, Field2: 34}, {Field0: 81, Field1: 81, Field2: 35}, {Field0: 82, Field1: 82, Field2: 36}, {Field0: 83, Field1: 83, Field2: 37}, {Field0: 84, Field1: 84, Field2: 38}, {Field0: 85, Field1: 85, Field2: 39}, {Field0: 86, Field1: 86, Field2: 40}, {Field0: 87, Field1: 87, Field2: 41}, {Field0: 88, Field1: 88, Field2: 42}, {Field0: 89, Field1: 89, Field2: 43}, {Field0: 90, Field1: 90, Field2: 44}, {Field0: 91, Field1: 91, Field2: 45}, {Field0: 92, Field1: 92, Field2: 46}, {Field0: 93, Field1: 93, Field2: 47}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 96, Field1: 96, Field2: 95}, {Field0: 97, Field1: 97, Field2: 96}, {Field0: 98, Field1: 98, Field2: 97}, {Field0: 99, Field1: 99, Field2: 98}, {Field0: 100, Field1: 100, Field2: 99}, {Field0: 101, Field1: 101, Field2: 100}, {Field0: 102, Field1: 102, Field2: 101}, {Field0: 103, Field1: 103, Field2: 102}, {Field0: 104, Field1: 104, Field2: 103}, {Field0: 105, Field1: 105, Field2: 104}, {Field0: 106, Field1: 106, Field2: 107}, {Field0: 107, Field1: 107, Field2: 109}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 109, Field1: 109, Field2: 108}, {Field0: 110, Field1: 110, Field2: 105}, {Field0: 111, Field1: 111, Field2: 106}, {Field0: 112, Field1: 112, Field2: 70}, {Field0: 113, Field1: 113, Field2: 71}, {Field0: 114, Field1: 114, Field2: 72}, {Field0: 115, Field1: 115, Field2: 73}, {Field0: 116, Field1: 116, Field2: 74}, {Field0: 117, Field1: 117, Field2: 75}, {Field0: 118, Field1: 118, Field2: 76}, {Field0: 119, Field1: 119, Field2: 77}, {Field0: 120, Field1: 120, Field2: 78}, {Field0: 121, Field1: 121, Field2: 79}, {Field0: 122, Field1: 122, Field2: 80}, {Field0: 123, Field1: 123, Field2: 81}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 144, Field1: 144, Field2: 67}, {Field0: 145, Field1: 145, Field2: 66}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 314159265, Field1: 0, Field2: 0}, {Field0: 161, Field1: 161, Field2: 49}, {Field0: 162, Field1: 162, Field2: 50}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], counter: 96}, k_63627);
framePtr = F.prev;
return result_63628;
}
function initevents_65601() {

function keyev_65604(e_65607) {

var F={procname:"initEvents.keyev",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
emit_65410(result_65603[0], makeNimstrLit("keyEv"), {kind: 0, key: tojskc_63625(e_65607.keyCode), mods: 0, button: 0, kmods: 0, dt: 0.0});
framePtr = F.prev;
}
function mouseev_65611(e_65614) {

var F={procname:"initEvents.mouseev",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
emit_65410(result_65603[0], makeNimstrLit("mouseEv"), {kind: 1, button: 0, key: 0, mods: 0, kmods: 0, dt: 0.0});
framePtr = F.prev;
}
var result_65603 = [{s: null}];
var F={procname:"events.initEvents",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 144;
nimCopy(result_65603[0], initeventemitter_65418(), NTI65031);
document.addEventListener("keypress", keyev_65604, true);
document.addEventListener("click", mouseev_65611, true);
framePtr = F.prev;
return result_65603[0];
}
function getcontextwebgl_28102(c_28104) {

var result_28105 = null;
var F={procname:"webgl.getContextWebGL",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 318;
result_28105 = c_28104.getContext('webgl') || c_28104.getContext('experimental-webgl');framePtr = F.prev;
return result_28105;
}
function initwindow_66011() {

var result_66024 = {ctx: null, width: 0, height: 0};
var F={procname:"windows.initWindow",prev:framePtr,filename:"windows.nim",line:0};
framePtr = F;
F.line = 15;
var canvas_66025 = document.getElementById("niwe-canvas");
F.line = 17;
result_66024.ctx = getcontextwebgl_28102(canvas_66025);
F.line = 18;
result_66024.width = canvas_66025.width;
F.line = 19;
result_66024.height = canvas_66025.height;
F.line = 20;
console.log(result_66024.width,result_66024.height);framePtr = F.prev;
return result_66024;
}
function resize_28122(canvas_28124) {

var Tmp1;
var F={procname:"webgl.resize",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
if (!((canvas_28124.width == canvas_28124.clientWidth))) Tmp1 = true; else {Tmp1 = !((canvas_28124.height == canvas_28124.clientHeight)); }if (Tmp1) {
F.line = 332;
canvas_28124.width = canvas_28124.clientWidth;
F.line = 333;
canvas_28124.height = canvas_28124.clientHeight;
}

framePtr = F.prev;
}
function getstatus_28112(gl_28114, what_28115) {

var result_28116 = false;
var F={procname:"webgl.getStatus",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 323;
result_28116 = gl_28114.getShaderParameter(what_28115, gl_28114.COMPILE_STATUS);framePtr = F.prev;
return result_28116;
}
function shader_49057(gl_49059, typ_49060, src_49061) {

var result_49062 = {source: null, s: null, kind: 0};
var F={procname:"gl.shader",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
if ((typ_49060 == 1)) {
F.line = 55;
result_49062.s = gl_49059.createShader(35633);
}
else {
if ((typ_49060 == 0)) {
F.line = 57;
result_49062.s = gl_49059.createShader(35632);
}
else {
console.log("Unknown Shader Type");
}
}
gl_49059.shaderSource(result_49062.s, toJSStr(src_49061));
gl_49059.compileShader(result_49062.s);
if (!(getstatus_28112(gl_49059, result_49062.s))) {
console.log(gl_49059.getShaderInfoLog(result_49062.s));
}

F.line = 62;
result_49062.kind = typ_49060;
F.line = 63;
result_49062.source = nimCopy(null, src_49061, NTI138);
framePtr = F.prev;
return result_49062;
}
function getstatus_28117(gl_28119, what_28120) {

var result_28121 = false;
var F={procname:"webgl.getStatus",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 325;
result_28121 = gl_28119.getProgramParameter(what_28120, gl_28119.LINK_STATUS);framePtr = F.prev;
return result_28121;
}
function program_49087(gl_49089, useit_49090, vertexsrc_49091, fragmentsrc_49092) {

var result_49093 = {p: null, vertex: {source: null, s: null, kind: 0}, fragment: {source: null, s: null, kind: 0}, colors: null, attributes: null};
var F={procname:"gl.program",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 68;
var program_49094 = gl_49089.createProgram();
F.line = 69;
var vs_49095 = shader_49057(gl_49089, 1, vertexsrc_49091);
F.line = 70;
var fs_49096 = shader_49057(gl_49089, 0, fragmentsrc_49092);
gl_49089.attachShader(program_49094, vs_49095.s);
gl_49089.attachShader(program_49094, fs_49096.s);
gl_49089.linkProgram(program_49094);
F.line = 75;
nimCopy(result_49093.vertex, vs_49095, NTI29006);
F.line = 76;
nimCopy(result_49093.fragment, fs_49096, NTI29006);
if (!(getstatus_28117(gl_49089, program_49094))) {
console.log(gl_49089.getProgramInfoLog(program_49094));
F.line = 80;
break BeforeRet;
}

if (useit_49090) {
gl_49089.useProgram(program_49094);
}

F.line = 82;
result_49093.p = program_49094;
} while (false); 
framePtr = F.prev;
return result_49093;
}
function clearwith_49053(gl_49055, color_49056) {

var F={procname:"gl.clearWith",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
gl_49055.clearColor(color_49056.Field0, color_49056.Field1, color_49056.Field2, color_49056.Field3);
gl_49055.clear(16384);
framePtr = F.prev;
}
function initrenderer_53009(gl_53011, clear_53012) {

var result_53013 = {context: null, program: {p: null, vertex: {source: null, s: null, kind: 0}, fragment: {source: null, s: null, kind: 0}, colors: null, attributes: null}, buff: null};
var F={procname:"renderer.initRenderer",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 35;
result_53013.context = gl_53011;
resize_28122(result_53013.context.canvas);
F.line = 37;
nimCopy(result_53013.program, program_49087(result_53013.context, true, makeNimstrLit("attribute vec4 aPosition;\x0Auniform mat4 uMatrix;\x0Avoid main() {\x0A  gl_Position = uMatrix*aPosition;\x0A}\x0A"), makeNimstrLit("#ifdef GL_ES\x0A  precision highp float;\x0A#endif\x0A\x0Auniform vec4 uColor;\x0Avoid main() {\x0A  gl_FragColor = uColor;\x0A}\x0A")), NTI29011);
clearwith_49053(result_53013.context, clear_53012);
F.line = 39;
result_53013.buff = result_53013.context.createBuffer();
gl_53011.viewport(0, 0, gl_53011.drawingBufferWidth, gl_53011.drawingBufferHeight);
framePtr = F.prev;
return result_53013;
}
function polygon_53116(x_53118, y_53119, sides_53120, boundingcircleradius_53121, filled_53122, color_53123) {

var result_53124 = {m_type: NTI53074, sides: 0, bcradius: 0.0, filled: false, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"renderer.polygon",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
if (!((3 <= sides_53120))) {
raiseassert_21216(makeNimstrLit("\x0A  3 <= sides "));
}

F.line = 131;
nimCopy(result_53124.color, color_53123, NTI29022);
F.line = 132;
nimCopy(result_53124.pos, {Field0: x_53118, Field1: y_53119}, NTI53044);
F.line = 133;
result_53124.sides = sides_53120;
F.line = 134;
result_53124.bcradius = boundingcircleradius_53121;
F.line = 135;
result_53124.filled = filled_53122;
F.line = 136;
result_53124.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_53124;
}
function rect_53078(x_53080, y_53081, w_53082, h_53083, color_53084, centered_53085) {

var result_53086 = {m_type: NTI53056, size: {Field0: 0.0, Field1: 0.0}, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"renderer.rect",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 95;
nimCopy(result_53086.color, color_53084, NTI29022);
F.line = 96;
nimCopy(result_53086.pos, {Field0: x_53080, Field1: y_53081}, NTI53044);
F.line = 97;
nimCopy(result_53086.size, {Field0: w_53082, Field1: h_53083}, NTI53057);
F.line = 99;
result_53086.scale = 1.0000000000000000e+00;
F.line = 100;
result_53086.centered = centered_53085;
framePtr = F.prev;
return result_53086;
}
function circle_53100(x_53102, y_53103, r_53104, color_53105) {

var result_53106 = {m_type: NTI53068, radius: 0.0, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"renderer.circle",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 111;
nimCopy(result_53106.color, color_53105, NTI29022);
F.line = 112;
nimCopy(result_53106.pos, {Field0: x_53102, Field1: y_53103}, NTI53044);
F.line = 113;
result_53106.radius = r_53104;
F.line = 114;
result_53106.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_53106;
}
function disk_53108(x_53110, y_53111, r_53112, color_53113) {

var result_53114 = {m_type: NTI53071, radius: 0.0, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"renderer.disk",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 117;
nimCopy(result_53114.color, color_53113, NTI29022);
F.line = 118;
nimCopy(result_53114.pos, {Field0: x_53110, Field1: y_53111}, NTI53044);
F.line = 119;
result_53114.radius = r_53112;
F.line = 120;
result_53114.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_53114;
}
function box_53089(x_53091, y_53092, w_53093, h_53094, color_53095, centered_53096) {

var result_53097 = {m_type: NTI53062, size: {Field0: 0.0, Field1: 0.0}, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"renderer.box",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 103;
nimCopy(result_53097.color, color_53095, NTI29022);
F.line = 104;
nimCopy(result_53097.pos, {Field0: x_53091, Field1: y_53092}, NTI53044);
F.line = 106;
nimCopy(result_53097.size, {Field0: w_53093, Field1: h_53094}, NTI53063);
F.line = 107;
result_53097.scale = 1.0000000000000000e+00;
F.line = 108;
result_53097.centered = centered_53096;
framePtr = F.prev;
return result_53097;
}
function initeventhandler_65044(name_65046) {

var result_65047 = {Field0: null, Field1: null};
var F={procname:"events.initEventHandler",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 68;
result_65047.Field1 = nimCopy(null, [], NTI65063);
F.line = 69;
result_65047.Field0 = nimCopy(null, name_65046, NTI138);
framePtr = F.prev;
return result_65047;
}
function addhandler_65064(handler_65067, fn_65071) {

var F={procname:"events.addHandler",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
if (handler_65067.Field1 != null) { handler_65067.Field1.push(fn_65071); } else { handler_65067.Field1 = [fn_65071]; };
framePtr = F.prev;
}
function on_65274(emitter_65277, event_65278, fn_65282) {

var F={procname:"events.on",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 99;
var i_65283 = geteventhandler_65250(emitter_65277, event_65278);
if ((i_65283 < 0)) {
F.line = 101;
var eh_65284 = /**/[initeventhandler_65044(event_65278)];
addhandler_65064(eh_65284[0], fn_65282);
if (emitter_65277.s != null) { emitter_65277.s.push(eh_65284[0]); } else { emitter_65277.s = [eh_65284[0]]; };
}
else {
addhandler_65064(emitter_65277.s[chckIndx(i_65283, 0, emitter_65277.s.length)-0], fn_65282);
}

framePtr = F.prev;
}
function HEX2BHEX3D_44704(x_44709, x_44709_Idx, y_44711) {

var F={procname:"+=.+=",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 3392;
x_44709[x_44709_Idx] = (x_44709[x_44709_Idx] + y_44711);
framePtr = F.prev;
}
function HEX2BHEX3D_55341(lf_55347, rg_55351) {

var F={procname:"renderer.+=",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
HEX2BHEX3D_44704(lf_55347, "Field0", rg_55351["Field0"]);
HEX2BHEX3D_44704(lf_55347, "Field1", rg_55351["Field1"]);
framePtr = F.prev;
}
function extractprogram_49041(program_49043) {

var result_49044 = null;
var F={procname:"gl.extractProgram",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
F.line = 38;
result_49044 = program_49043.p;
framePtr = F.prev;
return result_49044;
}
function HEX5BHEX5DHEX3D_51412(m_51449, i_51451, j_51453, val_51455) {

var F={procname:"[]=.[]=",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((i_51451 < 4))) {
failedassertimpl_21239(makeNimstrLit("i < N Row index out of bounds"));
}

if (!((j_51453 < 4))) {
failedassertimpl_21239(makeNimstrLit("j < M Column index out of bounds"));
}

F.line = 32;
m_51449.data[chckIndx(addInt(mulInt(i_51451, 4), j_51453), 0, m_51449.data.length)-0] = val_51455;
framePtr = F.prev;
}
function low_54602(v_54606) {

var result_54607 = 0;
var F={procname:"low.low",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 84;
result_54607 = 0;
framePtr = F.prev;
return result_54607;
}
function high_54616(v_54620) {

var result_54621 = 0;
var F={procname:"high.high",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 85;
result_54621 = 3;
framePtr = F.prev;
return result_54621;
}
function HEX5BHEX5D_54640(v_54646, i_54648) {

var result_54649 = 0.0;
var F={procname:"[].[]",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 49;
result_54649 = v_54646.data[chckIndx(i_54648, 0, v_54646.data.length)-0];
framePtr = F.prev;
return result_54649;
}
function HEX5BHEX5D_54651(v_54657, i_54659) {

var result_54660 = 0.0;
var F={procname:"[].[]",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 49;
result_54660 = v_54657.data[chckIndx(i_54659, 0, v_54657.data.length)-0];
framePtr = F.prev;
return result_54660;
}
function dot_54417(v_54454, w_54489) {

var result_54490 = [0.0];
var F={procname:"dot.dot",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
L1: do {
F.line = 121;
var i_54638 = 0;
F.line = 1926;
var HEX3Atmp_54672 = 0;
F.line = 1926;
var HEX3Atmp_54673 = 0;
F.line = 121;
HEX3Atmp_54672 = low_54602(v_54454);
F.line = 121;
HEX3Atmp_54673 = high_54616(v_54454);
F.line = 1908;
var res_54676 = HEX3Atmp_54672;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_54676 <= HEX3Atmp_54673)) break L3;
F.line = 1910;
i_54638 = res_54676;
HEX2BHEX3D_44704(result_54490, 0, (HEX5BHEX5D_54640(v_54454, i_54638) * HEX5BHEX5D_54651(w_54489, i_54638)));
res_54676 = addInt(res_54676, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_54490[0];
}
function row_53622(m_53658, r_53660) {

var result_53694 = {data: null, p: [null, 0]};
var F={procname:"row.row",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((r_53660 < 4))) {
failedassertimpl_21239(makeNimstrLit("r < N The matrix has less rows than the requested row index"));
}

result_53694.data = new Float64Array(4);
L1: do {
F.line = 94;
var i_54010 = 0;
F.line = 3689;
var i_54014 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_54014 < 4)) break L3;
F.line = 3691;
i_54010 = i_54014;
F.line = 94;
result_53694.data[chckIndx(i_54010, 0, result_53694.data.length)-0] = m_53658.data[chckIndx(addInt(mulInt(r_53660, 4), i_54010), 0, m_53658.data.length)-0];
i_54014 = addInt(i_54014, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_53694;
}
function col_54017(m_54053, c_54055) {

var result_54089 = {data: null, p: [null, 0]};
var F={procname:"col.col",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((c_54055 < 4))) {
failedassertimpl_21239(makeNimstrLit("c < M The matrix has less cols than the requested col index"));
}

result_54089.data = new Float64Array(4);
L1: do {
F.line = 107;
var i_54410 = 0;
F.line = 3689;
var i_54414 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_54414 < 4)) break L3;
F.line = 3691;
i_54410 = i_54414;
F.line = 107;
result_54089.data[chckIndx(i_54410, 0, result_54089.data.length)-0] = m_54053.data[chckIndx(addInt(mulInt(i_54410, 4), c_54055), 0, m_54053.data.length)-0];
i_54414 = addInt(i_54414, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_54089;
}
function matmul_53138(m_53175, w_53208) {

var result_53240 = [{data: null}];
var F={procname:"matMul.matMul",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
result_53240[0].data = new Float64Array(16);
L1: do {
F.line = 128;
var r_53610 = 0;
F.line = 3689;
var i_54734 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_54734 < 4)) break L3;
F.line = 3691;
r_53610 = i_54734;
L4: do {
F.line = 129;
var c_53620 = 0;
F.line = 3689;
var i_54730 = 0;
L5: do {
F.line = 3690;
L6: while (true) {
if (!(i_54730 < 4)) break L6;
F.line = 3691;
c_53620 = i_54730;
HEX5BHEX5DHEX3D_51412(result_53240[0], r_53610, c_53620, dot_54417(row_53622(m_53175, r_53610), col_54017(w_53208, c_53620)));
i_54730 = addInt(i_54730, 1);
}
} while(false);
} while(false);
i_54734 = addInt(i_54734, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_53240[0];
}
function raiseRangeError() {

var e_13268 = null;
e_13268 = {m_type: NTI3456, parent: null, name: null, message: null, trace: null};
e_13268.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
raiseException(e_13268, "RangeError");
}
function tomatrix_50205(arr_50225) {

var result_50263 = {data: null};
var F={procname:"toMatrix.toMatrix",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
result_50263.data = new Float64Array(16);
if (!(true)) {
failedassertimpl_21239(makeNimstrLit("\x0A  true "));
}

if (false) {
L1: do {
F.line = 63;
var i_50814 = 0;
F.line = 1908;
var res_50818 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_50818 <= 15)) break L3;
F.line = 1910;
i_50814 = chckRange(res_50818, 0, 15);
F.line = 63;
result_50263.data[chckIndx(i_50814, 0, result_50263.data.length)-0] = arr_50225[chckIndx(i_50814, 0, arr_50225.length)-0];
res_50818 = addInt(res_50818, 1);
}
} while(false);
} while(false);
}
else {
F.line = 65;
nimCopy(result_50263.data, arr_50225, NTI50212);
}

framePtr = F.prev;
return result_50263;
}
function translation_50876(x_50882, y_50884, z_50886) {

var Tmp1;
var result_50920 = {data: null};
var F={procname:"translation.translation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
if (!true) Tmp1 = false; else {Tmp1 = true; }if (!(Tmp1)) {
raiseassert_21216(makeNimstrLit("\x0A  true and true be careful with implicit conversions from int to float"));
}

F.line = 24;
var resarr_50923 = new Float64Array(16);
F.line = 25;
resarr_50923[0] = 1.0000000000000000e+00;
F.line = 26;
resarr_50923[5] = 1.0000000000000000e+00;
F.line = 27;
resarr_50923[10] = 1.0000000000000000e+00;
F.line = 33;
resarr_50923[12] = x_50882;
F.line = 34;
resarr_50923[13] = y_50884;
F.line = 35;
resarr_50923[14] = z_50886;
F.line = 36;
resarr_50923[15] = 1.0000000000000000e+00;
F.line = 38;
nimCopy(result_50920, tomatrix_50205(resarr_50923), NTI50234);
framePtr = F.prev;
return result_50920;
}
function translation_50865(x_50867, y_50868, z_50869) {

var result_50873 = {data: null};
var F={procname:"graphic.translation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
F.line = 42;
nimCopy(result_50873, translation_50876(x_50867, y_50868, z_50869), NTI50891);
framePtr = F.prev;
return result_50873;
}
function HEX2F_20407(x_20409, y_20410) {

var result_20411 = 0.0;
var F={procname:"system./",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 3241;
result_20411 = (x_20409 / y_20410);
framePtr = F.prev;
return result_20411;
}
function scaling_52107(w_52113, h_52115) {

var Tmp1;
var result_52149 = {data: null};
var F={procname:"scaling.scaling",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
if (!true) Tmp1 = false; else {Tmp1 = true; }if (!(Tmp1)) {
raiseassert_21216(makeNimstrLit("\x0A  true and true be careful with implicit conversions from int to float"));
}

F.line = 69;
var resarr_52152 = new Float64Array(16);
F.line = 70;
resarr_52152[0] = (1.0000000000000000e+00 / w_52113);
F.line = 71;
resarr_52152[5] = (1.0000000000000000e+00 / h_52115);
F.line = 72;
resarr_52152[10] = 0.0;
F.line = 74;
resarr_52152[10] = 1.0000000000000000e+00;
F.line = 75;
resarr_52152[15] = 1.0000000000000000e+00;
F.line = 77;
nimCopy(result_52149, tomatrix_50205(resarr_52152), NTI50234);
framePtr = F.prev;
return result_52149;
}
function scaling_52097(w_52099, h_52100) {

var result_52104 = {data: null};
var F={procname:"graphic.scaling",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
F.line = 81;
nimCopy(result_52104, scaling_52107(w_52099, h_52100), NTI52120);
framePtr = F.prev;
return result_52104;
}
function tof32a_49002(m_49038) {

var result_49039 = null;
var F={procname:"gl.toF32A",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
F.line = 36;
var am_49040 = nimCopy(null, m_49038.data, NTI49026);
F.line = 37;
result_49039 = new Float32Array(am_49040);
framePtr = F.prev;
return result_49039;
}
function setmatrixunif_53126(eng_53128, rend_53129, uniform_53130) {

var F={procname:"renderer.setMatrixUnif",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 139;
var w_53131 = eng_53128.context.drawingBufferWidth;
F.line = 140;
var h_53132 = eng_53128.context.drawingBufferHeight;
F.line = 142;
var umatloc_53133 = eng_53128.context.getUniformLocation(extractprogram_49041(eng_53128.program), toJSStr(uniform_53130));
F.line = 144;
var mat_54950 = matmul_53138(matmul_53138(matmul_53138(translation_50865(rend_53129.pos.Field0, rend_53129.pos.Field1, 0.0), translation_50865(rend_53129.origin.Field0, rend_53129.origin.Field1, 0.0)), translation_50865(HEX2F_20407(negInt(w_53131), 2), HEX2F_20407(negInt(h_53132), 2), 0.0)), scaling_52097(HEX2F_20407(w_53131, 2), HEX2F_20407(h_53132, 2)));
eng_53128.context.uniformMatrix4fv(umatloc_53133, false, tof32a_49002(mat_54950));
framePtr = F.prev;
}
function bufferdata_27918(gl_27920, target_27921, data_27922, usage_27923) {

var F={procname:"webgl.bufferData",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 240;
gl_27920.bufferData(target_27921,data_27922,usage_27923);framePtr = F.prev;
}
function tofloat32array_28087(a_28090) {

var result_28091 = null;
var F={procname:"webgl.toFloat32Array",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 304;
result_28091 = new Float32Array(a_28090);framePtr = F.prev;
return result_28091;
}
function uploadvertices_49133(gl_49135, buff_49136, vertices_49138, drawmode_49139) {

var F={procname:"gl.uploadVertices",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
gl_49135.bindBuffer(34962, buff_49136);
bufferdata_27918(gl_49135, 34962, tofloat32array_28087(vertices_49138), drawmode_49139);
gl_49135.bindBuffer(34962, buff_49136);
framePtr = F.prev;
}
function bindcolor_49106(gl_49108, program_49109, colorname_49110, color_49111) {

var F={procname:"gl.bindColor",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
F.line = 94;
var uloc_49112 = gl_49108.getUniformLocation(extractprogram_49041(program_49109), toJSStr(colorname_49110));
gl_49108.uniform4fv(uloc_49112, tofloat32array_28087([color_49111.Field0, color_49111.Field1, color_49111.Field2, color_49111.Field3]));
framePtr = F.prev;
}
function enableattribute_49126(gl_49128, program_49129, attribname_49130, itemsize_49131) {

var F={procname:"gl.enableAttribute",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
F.line = 99;
var aloc_49132 = gl_49128.getAttribLocation(extractprogram_49041(program_49129), toJSStr(attribname_49130));
gl_49128.enableVertexAttribArray(aloc_49132);
gl_49128.vertexAttribPointer(aloc_49132, itemsize_49131, 5126, false, 0, 0);
framePtr = F.prev;
}
function drawtriangles_49140(gl_49142, buff_49143, p_49144, vertices_49146, color_49147, drawmode_49148) {

var F={procname:"gl.drawTriangles",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
uploadvertices_49133(gl_49142, buff_49143, vertices_49146, drawmode_49148);
F.line = 116;
var numvertices_49157 = divInt((vertices_49146 != null ? vertices_49146.length : 0), 4);
bindcolor_49106(gl_49142, p_49144, makeNimstrLit("uColor"), color_49147);
enableattribute_49126(gl_49142, p_49144, makeNimstrLit("aPosition"), 4);
gl_49142.drawArrays(4, 0, numvertices_49157);
gl_49142.flush();
framePtr = F.prev;
}
function drawtriangles_53020(eng_53022, vertices_53024, color_53025, drawmode_53026) {

var F={procname:"renderer.drawTriangles",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
drawtriangles_49140(eng_53022.context, eng_53022.buff, eng_53022.program, vertices_53024, color_53025, drawmode_53026);
framePtr = F.prev;
}
function draw_54991(eng_54993, rect_54994) {

var F={procname:"renderer.draw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
setmatrixunif_53126(eng_54993, rect_54994, makeNimstrLit("uMatrix"));
if (rect_54994.centered) {
F.line = 179;
var hw_54996 = (rect_54994.size.Field0 / 2.0000000000000000e+00);
F.line = 180;
var hh_54998 = (rect_54994.size.Field1 / 2.0000000000000000e+00);
drawtriangles_53020(eng_54993, [-(hw_54996), -(hh_54998), 0.0, (1.0000000000000000e+00 / rect_54994.scale), hw_54996, -(hh_54998), 0.0, (1.0000000000000000e+00 / rect_54994.scale), -(hw_54996), hh_54998, 0.0, (1.0000000000000000e+00 / rect_54994.scale), -(hw_54996), hh_54998, 0.0, (1.0000000000000000e+00 / rect_54994.scale), hw_54996, hh_54998, 0.0, (1.0000000000000000e+00 / rect_54994.scale), hw_54996, -(hh_54998), 0.0, (1.0000000000000000e+00 / rect_54994.scale)], rect_54994.color, 35044);
}
else {
drawtriangles_53020(eng_54993, [0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_54994.scale), rect_54994.size.Field0, 0.0, 0.0, (1.0000000000000000e+00 / rect_54994.scale), rect_54994.size.Field0, rect_54994.size.Field1, 0.0, (1.0000000000000000e+00 / rect_54994.scale), rect_54994.size.Field0, rect_54994.size.Field1, 0.0, (1.0000000000000000e+00 / rect_54994.scale), 0.0, rect_54994.size.Field1, 0.0, (1.0000000000000000e+00 / rect_54994.scale), 0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_54994.scale)], rect_54994.color, 35044);
}

framePtr = F.prev;
}
function newseq_55046(len_55050) {

var result_55052 = null;
var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
result_55052 = new Array(len_55050); for (var i=0;i<len_55050;++i) {result_55052[i]=0.0;}framePtr = F.prev;
return result_55052;
}
function drawlineloop_49176(gl_49178, buff_49179, p_49180, vertices_49182, color_49183, drawmode_49184) {

var F={procname:"gl.drawLineLoop",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
uploadvertices_49133(gl_49178, buff_49179, vertices_49182, drawmode_49184);
F.line = 135;
var numvertices_49193 = divInt((vertices_49182 != null ? vertices_49182.length : 0), 4);
bindcolor_49106(gl_49178, p_49180, makeNimstrLit("uColor"), color_49183);
enableattribute_49126(gl_49178, p_49180, makeNimstrLit("aPosition"), 4);
gl_49178.drawArrays(2, 0, numvertices_49193);
gl_49178.flush();
framePtr = F.prev;
}
function drawlineloop_53034(eng_53036, vertices_53038, color_53039, drawmode_53040) {

var F={procname:"renderer.drawLineLoop",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
drawlineloop_49176(eng_53036.context, eng_53036.buff, eng_53036.program, vertices_53038, color_53039, drawmode_53040);
framePtr = F.prev;
}
function draw_55111(eng_55113, circle_55114, roughness_55115) {

var F={procname:"renderer.draw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
setmatrixunif_53126(eng_55113, circle_55114, makeNimstrLit("uMatrix"));
F.line = 223;
var verts_55144 = newseq_55046(chckRange(mulInt(roughness_55115, 4), 0, 2147483647));
L1: do {
F.line = 226;
var i_55164 = 0;
F.line = 1918;
var HEX3Atmp_55179 = 0;
F.line = 226;
HEX3Atmp_55179 = subInt((verts_55144 != null ? verts_55144.length : 0), 1);
F.line = 1908;
var res_55182 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_55182 <= HEX3Atmp_55179)) break L3;
F.line = 1910;
i_55164 = res_55182;
F.line = 227;
verts_55144[chckIndx(i_55164, 0, verts_55144.length)-0] = (circle_55114.radius * Math.cos(((i_55164 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * roughness_55115))));
F.line = 228;
verts_55144[chckIndx(addInt(i_55164, 1), 0, verts_55144.length)-0] = (circle_55114.radius * Math.sin(((i_55164 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * roughness_55115))));
F.line = 229;
verts_55144[chckIndx(addInt(i_55164, 2), 0, verts_55144.length)-0] = 0.0;
F.line = 230;
verts_55144[chckIndx(addInt(i_55164, 3), 0, verts_55144.length)-0] = (1.0000000000000000e+00 / circle_55114.scale);
res_55182 = addInt(res_55182, 4);
}
} while(false);
} while(false);
drawlineloop_53034(eng_55113, verts_55144, circle_55114.color, 35044);
framePtr = F.prev;
}
function drawtrianglefan_49158(gl_49160, buff_49161, p_49162, vertices_49164, color_49165, drawmode_49166) {

var F={procname:"gl.drawTriangleFan",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
uploadvertices_49133(gl_49160, buff_49161, vertices_49164, drawmode_49166);
F.line = 125;
var numvertices_49175 = divInt((vertices_49164 != null ? vertices_49164.length : 0), 4);
bindcolor_49106(gl_49160, p_49162, makeNimstrLit("uColor"), color_49165);
enableattribute_49126(gl_49160, p_49162, makeNimstrLit("aPosition"), 4);
gl_49160.drawArrays(6, 0, numvertices_49175);
gl_49160.flush();
framePtr = F.prev;
}
function drawtrianglefan_53027(eng_53029, vertices_53031, color_53032, drawmode_53033) {

var F={procname:"renderer.drawTriangleFan",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
drawtrianglefan_49158(eng_53029.context, eng_53029.buff, eng_53029.program, vertices_53031, color_53032, drawmode_53033);
framePtr = F.prev;
}
function draw_55028(eng_55030, circle_55031, roughness_55032) {

var F={procname:"renderer.draw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
setmatrixunif_53126(eng_55030, circle_55031, makeNimstrLit("uMatrix"));
F.line = 207;
var verts_55071 = newseq_55046(chckRange(addInt(4, mulInt(mulInt(roughness_55032, 4), 2)), 0, 2147483647));
F.line = 210;
verts_55071[3] = (1.0000000000000000e+00 / circle_55031.scale);
L1: do {
F.line = 212;
var i_55092 = 0;
F.line = 1918;
var HEX3Atmp_55104 = 0;
F.line = 212;
HEX3Atmp_55104 = subInt((verts_55071 != null ? verts_55071.length : 0), 1);
F.line = 1908;
var res_55107 = 4;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_55107 <= HEX3Atmp_55104)) break L3;
F.line = 1910;
i_55092 = res_55107;
F.line = 213;
verts_55071[chckIndx(i_55092, 0, verts_55071.length)-0] = (circle_55031.radius * Math.cos((((HEX2F_20407(i_55092, 4) * 2.0000000000000000e+00) * 3.1415926535897931e+00) / roughness_55032)));
F.line = 214;
verts_55071[chckIndx(addInt(i_55092, 1), 0, verts_55071.length)-0] = (circle_55031.radius * Math.sin((((HEX2F_20407(i_55092, 4) * 2.0000000000000000e+00) * 3.1415926535897931e+00) / roughness_55032)));
F.line = 215;
verts_55071[chckIndx(addInt(i_55092, 2), 0, verts_55071.length)-0] = 0.0;
F.line = 216;
verts_55071[chckIndx(addInt(i_55092, 3), 0, verts_55071.length)-0] = (1.0000000000000000e+00 / circle_55031.scale);
res_55107 = addInt(res_55107, 4);
}
} while(false);
} while(false);
drawtrianglefan_53027(eng_55030, verts_55071, circle_55031.color, 35044);
framePtr = F.prev;
}
function draw_55186(eng_55188, pol_55189) {

var F={procname:"renderer.draw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
setmatrixunif_53126(eng_55188, pol_55189, makeNimstrLit("uMatrix"));
if (pol_55189.filled) {
F.line = 240;
var verts_55218 = newseq_55046(chckRange(addInt(8, mulInt(pol_55189.sides, 4)), 0, 2147483647));
F.line = 243;
verts_55218[3] = (1.0000000000000000e+00 / pol_55189.scale);
L1: do {
F.line = 246;
var i_55239 = 0;
F.line = 1918;
var HEX3Atmp_55307 = 0;
F.line = 246;
HEX3Atmp_55307 = subInt((verts_55218 != null ? verts_55218.length : 0), 1);
F.line = 1908;
var res_55310 = 4;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_55310 <= HEX3Atmp_55307)) break L3;
F.line = 1910;
i_55239 = res_55310;
F.line = 247;
verts_55218[chckIndx(i_55239, 0, verts_55218.length)-0] = (pol_55189.bcradius * Math.cos(((i_55239 * 3.1415926535897931e+00) / (pol_55189.sides * 2.0000000000000000e+00))));
F.line = 249;
verts_55218[chckIndx(addInt(i_55239, 1), 0, verts_55218.length)-0] = (pol_55189.bcradius * Math.sin(((i_55239 * 3.1415926535897931e+00) / (pol_55189.sides * 2.0000000000000000e+00))));
F.line = 251;
verts_55218[chckIndx(addInt(i_55239, 2), 0, verts_55218.length)-0] = 0.0;
F.line = 252;
verts_55218[chckIndx(addInt(i_55239, 3), 0, verts_55218.length)-0] = (1.0000000000000000e+00 / pol_55189.scale);
res_55310 = addInt(res_55310, 4);
}
} while(false);
} while(false);
drawtrianglefan_53027(eng_55188, verts_55218, pol_55189.color, 35044);
}
else {
F.line = 257;
var verts_55271 = newseq_55046(chckRange(mulInt(pol_55189.sides, 4), 0, 2147483647));
L4: do {
F.line = 260;
var i_55291 = 0;
F.line = 1918;
var HEX3Atmp_55323 = 0;
F.line = 260;
HEX3Atmp_55323 = subInt((verts_55271 != null ? verts_55271.length : 0), 1);
F.line = 1908;
var res_55326 = 0;
L5: do {
F.line = 1909;
L6: while (true) {
if (!(res_55326 <= HEX3Atmp_55323)) break L6;
F.line = 1910;
i_55291 = res_55326;
F.line = 261;
verts_55271[chckIndx(i_55291, 0, verts_55271.length)-0] = (pol_55189.bcradius * Math.cos(((i_55291 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * pol_55189.sides))));
F.line = 262;
verts_55271[chckIndx(addInt(i_55291, 1), 0, verts_55271.length)-0] = (pol_55189.bcradius * Math.sin(((i_55291 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * pol_55189.sides))));
F.line = 263;
verts_55271[chckIndx(addInt(i_55291, 2), 0, verts_55271.length)-0] = 0.0;
F.line = 264;
verts_55271[chckIndx(addInt(i_55291, 3), 0, verts_55271.length)-0] = (1.0000000000000000e+00 / pol_55189.scale);
res_55326 = addInt(res_55326, 4);
}
} while(false);
} while(false);
drawlineloop_53034(eng_55188, verts_55271, pol_55189.color, 35044);
}

framePtr = F.prev;
}
function draw_54954(eng_54956, rect_54957) {

var F={procname:"renderer.draw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
setmatrixunif_53126(eng_54956, rect_54957, makeNimstrLit("uMatrix"));
if (rect_54957.centered) {
F.line = 155;
var hw_54959 = (rect_54957.size.Field0 / 2.0000000000000000e+00);
F.line = 156;
var hh_54961 = (rect_54957.size.Field1 / 2.0000000000000000e+00);
drawlineloop_53034(eng_54956, [-(hw_54959), -(hh_54961), 0.0, (1.0000000000000000e+00 / rect_54957.scale), hw_54959, -(hh_54961), 0.0, (1.0000000000000000e+00 / rect_54957.scale), hw_54959, hh_54961, 0.0, (1.0000000000000000e+00 / rect_54957.scale), -(hw_54959), hh_54961, 0.0, (1.0000000000000000e+00 / rect_54957.scale)], rect_54957.color, 35044);
}
else {
drawlineloop_53034(eng_54956, [0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_54957.scale), rect_54957.size.Field0, 0.0, 0.0, (1.0000000000000000e+00 / rect_54957.scale), rect_54957.size.Field0, rect_54957.size.Field1, 0.0, (1.0000000000000000e+00 / rect_54957.scale), 0.0, rect_54957.size.Field1, 0.0, (1.0000000000000000e+00 / rect_54957.scale)], rect_54957.color, 35044);
}

framePtr = F.prev;
}
function requestanimationframe_28106(fn_28111) {

var F={procname:"webgl.requestAnimationFrame",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 320;
window.requestAnimationFrame(fn_28111);framePtr = F.prev;
}
function innerframedraw_67036(now_67034) {

var F={procname:"renderer.innerframedraw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 279;
dt_67035[0] = (now_67034 - lastt_67032[0]);
emit_65410(evq_67001[0], makeNimstrLit("update"), {dt: dt_67035[0], kind: 0, key: 0, mods: 0, button: 0, kmods: 0});
resize_28122(en_67003[0].context.canvas);
en_67003[0].context.viewport(0, 0, en_67003[0].context.drawingBufferWidth, en_67003[0].context.drawingBufferHeight);
draw_54991(en_67003[0], b_67020[0]);
draw_55111(en_67003[0], c_67014[0], 32);
draw_55028(en_67003[0], d_67017[0], 32);
draw_55186(en_67003[0], p_67010[0]);
draw_54954(en_67003[0], r_67013[0]);
F.line = 281;
lastt_67032[0] = now_67034;
requestanimationframe_28106(innerframedraw_67036);
framePtr = F.prev;
}
function HEX3Aanonymous_67021(e_67023) {

var F={procname:"renderer.:anonymous",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
HEX2BHEX3D_55341(speed_67005[0], accel_67007[0]);
framePtr = F.prev;
}
function HEX3Aanonymous_67026(e_67028) {

var F={procname:"renderer.:anonymous",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
HEX2BHEX3D_55341(p_67010[0].pos, speed_67005[0]);
framePtr = F.prev;
}
var evq_67001 = /**/[initevents_65601()];
var w_67002 = /**/[initwindow_66011()];
var en_67003 = /**/[initrenderer_53009(w_67002[0].ctx, {Field0: 1.0000000000000000e+00, Field1: 1.0000000000000000e+00, Field2: 1.0000000000000000e+00, Field3: 1.0000000000000000e+00})];
var speed_67005 = /**/[{Field0: 0.0, Field1: 0.0}];
var accel_67007 = /**/[{Field0: 2.0000000000000000e+00, Field1: 2.0000000000000000e+00}];
var p_67010 = /**/[polygon_53116(1.0000000000000000e+02, 1.0000000000000000e+02, 5, 1.0000000000000000e+01, true, {Field0: 0.0, Field1: 1.0000000000000000e+00, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var r_67013 = /**/[rect_53078(2.0000000000000000e+02, 2.0000000000000000e+02, 1.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00}, true)];
var c_67014 = /**/[circle_53100(5.0000000000000000e+01, 5.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var d_67017 = /**/[disk_53108(1.5000000000000000e+02, 1.5000000000000000e+02, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var b_67020 = /**/[box_53089(2.5000000000000000e+02, 2.5000000000000000e+02, 1.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00}, true)];
on_65274(evq_67001[0], makeNimstrLit("mouseEv"), HEX3Aanonymous_67021);
on_65274(evq_67001[0], makeNimstrLit("update"), HEX3Aanonymous_67026);
var lastt_67032 = /**/[0.0];
var dt_67035 = /**/[0.0];
innerframedraw_67036(0.0);
