/* Generated by the Nim Compiler v0.16.0 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI53063 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI55137 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI55136 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI55120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI53908 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI53907 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI53891 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI53251 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI53250 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI53234 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI128 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI53212 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3456 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI68063 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI56083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI56077 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI29023 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI56075 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI56089 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI29018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI27211 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI27209 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI29016 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI27231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI27229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI29012 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI29003 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI27235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI27233 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI29007 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3444 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3452 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI68034 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI68031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI68019 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI68018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI68009 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI68436 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3483 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3436 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
var NNI3436 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3436.node = NNI3436;
NTI3483.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3483, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3436.base = NTI3424;
NTI3440.base = NTI3436;
var NNI12409 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI12409.node = NNI12409;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3438.base = NTI3436;
NTI68018.base = NTI68019;
var NNI68009 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI68018, name: "Field1", sons: null}]};
NTI68009.node = NNI68009;
NTI68436.base = NTI68009;
NTI68034.base = NTI68009;
var NNI68031 = {kind: 1, offset: "s", len: 0, typ: NTI68034, name: "s", sons: null};
NTI68031.node = NNI68031;
var NNI3452 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3452.node = NNI3452;
NTI3452.base = NTI3424;
var NNI3444 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3444.node = NNI3444;
NTI3444.base = NTI3424;
var NNI3448 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3448.node = NNI3448;
var NNI3446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3446.node = NNI3446;
NTI3446.base = NTI3424;
NTI3448.base = NTI3446;
var NNI27235 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI27235.node = NNI27235;
NTI27235.base = NTI3408;
NTI27233.base = NTI27235;
var NNI29003 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: [{kind: 1, offset: 0, typ: NTI29003, name: "Fragment", len: 0, sons: null}, 
{kind: 1, offset: 1, typ: NTI29003, name: "Vertex", len: 0, sons: null}]};
NTI29003.node = NNI29003;
var NNI29007 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "source", len: 0, typ: NTI138, name: "source", sons: null}, 
{kind: 1, offset: "s", len: 0, typ: NTI27233, name: "s", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI29003, name: "kind", sons: null}]};
NTI29007.node = NNI29007;
var NNI27231 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI27231.node = NNI27231;
NTI27231.base = NTI3408;
NTI27229.base = NTI27231;
var NNI27211 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI27211.node = NNI27211;
NTI27211.base = NTI3408;
NTI27209.base = NTI27211;
NTI29016.base = NTI27209;
NTI29018.base = NTI114;
var NNI29012 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "p", len: 0, typ: NTI27229, name: "p", sons: null}, 
{kind: 1, offset: "vertex", len: 0, typ: NTI29007, name: "vertex", sons: null}, 
{kind: 1, offset: "fragment", len: 0, typ: NTI29007, name: "fragment", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI29016, name: "colors", sons: null}, 
{kind: 1, offset: "attributes", len: 0, typ: NTI29018, name: "attributes", sons: null}]};
NTI29012.node = NNI29012;
var NNI56089 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "sides", len: 0, typ: NTI104, name: "sides", sons: null}, 
{kind: 1, offset: "bcradius", len: 0, typ: NTI124, name: "bcradius", sons: null}, 
{kind: 1, offset: "filled", len: 0, typ: NTI130, name: "filled", sons: null}]};
NTI56089.node = NNI56089;
var NNI29023 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI124, name: "Field3", sons: null}]};
NTI29023.node = NNI29023;
var NNI56077 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI56077.node = NNI56077;
var NNI56083 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI56083.node = NNI56083;
var NNI56075 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "color", len: 0, typ: NTI29023, name: "color", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI56077, name: "pos", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI124, name: "scale", sons: null}, 
{kind: 1, offset: "rot", len: 0, typ: NTI124, name: "rot", sons: null}, 
{kind: 1, offset: "origin", len: 0, typ: NTI56083, name: "origin", sons: null}, 
{kind: 1, offset: "centered", len: 0, typ: NTI130, name: "centered", sons: null}]};
NTI56075.node = NNI56075;
NTI56075.base = NTI3408;
NTI56089.base = NTI56075;
NTI68063.base = NTI68019;
var NNI3456 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3456.node = NNI3456;
NTI3456.base = NTI3424;
NTI53212.base = NTI128;
NTI53251.base = NTI124;
NTI53250.base = NTI53251;
var NNI53234 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI53250, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI53234.node = NNI53234;
NTI53908.base = NTI124;
NTI53907.base = NTI53908;
var NNI53891 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI53907, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI53891.node = NNI53891;
NTI55137.base = NTI124;
NTI55136.base = NTI55137;
var NNI55120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI55136, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI55120.node = NNI55120;
NTI53063.base = NTI124;
function makeNimstrLit(c_13403) {

    var ln = c_13403.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_13403.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    }
function SetConstr() {

      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    }
function nimCopy(dest_18618, src_18619, ti_18620) {

var result_19029 = null;
switch (ti_18620.kind) {
case 21: case 22: case 23: case 5: if (!(isfatpointer_18601(ti_18620))) {
result_19029 = src_18619;
}
else {
result_19029 = [src_18619[0], src_18619[1]];}


break;
case 19:       if (dest_18618 === null || dest_18618 === undefined) {
        dest_18618 = {};
      }
      else {
        for (var key in dest_18618) { delete dest_18618[key]; }
      }
      for (var key in src_18619) { dest_18618[key] = src_18619[key]; }
      result_19029 = dest_18618;
    
break;
case 18: case 17: if (!((ti_18620.base == null))) {
result_19029 = nimCopy(dest_18618, src_18619, ti_18620.base);
}
else {
if ((ti_18620.kind == 17)) {
result_19029 = (dest_18618 === null || dest_18618 === undefined) ? {m_type: ti_18620} : dest_18618;}
else {
result_19029 = (dest_18618 === null || dest_18618 === undefined) ? {} : dest_18618;}
}
nimCopyAux(result_19029, src_18619, ti_18620.node);

break;
case 24: case 4: case 27: case 16:       if (src_18619 === null) {
        result_19029 = null;
      }
      else {
        if (dest_18618 === null || dest_18618 === undefined) {
          dest_18618 = new Array(src_18619.length);
        }
        else {
          dest_18618.length = src_18619.length;
        }
        result_19029 = dest_18618;
        for (var i = 0; i < src_18619.length; ++i) {
          result_19029[i] = nimCopy(result_19029[i], src_18619[i], ti_18620.base);
        }
      }
    
break;
case 28:       if (src_18619 !== null) {
        result_19029 = src_18619.slice(0);
      }
    
break;
default: 
result_19029 = src_18619;
break;
}
return result_19029;
}
function eqStrings(a_16003, b_16004) {

    if (a_16003 == b_16004) return true;
    if ((!a_16003) || (!b_16004)) return false;
    var alen = a_16003.length;
    if (alen != b_16004.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16003[i] != b_16004[i]) return false;
    return true;
  }
function arrayConstr(len_19203, value_19204, typ_19205) {

      var result = new Array(len_19203);
      for (var i = 0; i < len_19203; ++i) result[i] = nimCopy(null, value_19204, typ_19205);
      return result;
    }
function cstrToNimstr(c_13603) {

  var ln = c_13603.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_13603.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function toJSStr(s_13803) {

    var len = s_13803.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_13803[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_13803[i] < 128)
        asciiPart[i] = fcc(s_13803[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  }
function raiseException(e_12806, ename_12807) {

e_12806.name = ename_12807;
if ((excHandler == 0)) {
unhandledException(e_12806);
}

e_12806.trace = nimCopy(null, rawwritestacktrace_12628(), NTI138);
throw e_12806;}
function chckIndx(i_19209, a_19210, b_19211) {

var Tmp1;
var result_19212 = 0;
BeforeRet: do {
if (!(a_19210 <= i_19209)) Tmp1 = false; else {Tmp1 = (i_19209 <= b_19211); }if (Tmp1) {
result_19212 = i_19209;
break BeforeRet;
}
else {
raiseIndexError();
}

} while (false); 
return result_19212;
}
function addInt(a_16256, b_16257) {

      var result = a_16256 + b_16257;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function subInt(a_16403, b_16404) {

      var result = a_16403 - b_16404;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function mulInt(a_16603, b_16604) {

      var result = a_16603 * b_16604;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function chckRange(i_19215, a_19216, b_19217) {

var Tmp1;
var result_19218 = 0;
BeforeRet: do {
if (!(a_19216 <= i_19215)) Tmp1 = false; else {Tmp1 = (i_19215 <= b_19217); }if (Tmp1) {
result_19218 = i_19215;
break BeforeRet;
}
else {
raiseRangeError();
}

} while (false); 
return result_19218;
}
function negInt(a_18203) {

var result_18204 = 0;
result_18204 = (a_18203 * -1);
return result_18204;
}
function divInt(a_16803, b_16804) {

      if (b_16804 == 0) raiseDivByZero();
      if (b_16804 == -1 && a_16803 == 2147483647) raiseOverflow();
      return Math.floor(a_16803 / b_16804);
    }
var nimvm_5887 = false;
var nim_program_result = 0;
var globalraisehook_10414 = [null];
var localraisehook_10419 = [null];
var outofmemhook_10422 = [null];
function isfatpointer_18601(ti_18603) {

var result_18604 = false;
BeforeRet: do {
result_18604 = !((SetConstr(17, 16, 4, 18, 27, 19, 23, 22, 21)[ti_18603.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_18604;
}
function nimCopyAux(dest_18623, src_18624, n_18626) {

switch (n_18626.kind) {
case 0: 
break;
case 1:       dest_18623[n_18626.offset] = nimCopy(dest_18623[n_18626.offset], src_18624[n_18626.offset], n_18626.typ);
    
break;
case 2: L1: do {
var i_19015 = 0;
var HEX3Atmp_19017 = 0;
HEX3Atmp_19017 = (n_18626.len - 1);
var res_19020 = 0;
L2: do {
L3: while (true) {
if (!(res_19020 <= HEX3Atmp_19017)) break L3;
i_19015 = res_19020;
nimCopyAux(dest_18623, src_18624, n_18626.sons[i_19015]);
res_19020 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_18623[n_18626.offset] = nimCopy(dest_18623[n_18626.offset], src_18624[n_18626.offset], n_18626.typ);
      for (var i = 0; i < n_18626.sons.length; ++i) {
        nimCopyAux(dest_18623, src_18624, n_18626.sons[i][1]);
      }
    
break;
}
}
function add_10438(x_10441, x_10441_Idx, y_10442) {

        var len = x_10441[0].length-1;
        for (var i = 0; i < y_10442.length; ++i) {
          x_10441[0][len] = y_10442.charCodeAt(i);
          ++len;
        }
        x_10441[0][len] = 0
      }
function auxwritestacktrace_12404(f_12406) {

var Tmp3;
var result_12407 = [null];
var it_12415 = f_12406;
var i_12416 = 0;
var total_12417 = 0;
var tempframes_12421 = arrayConstr(64, {Field0: null, Field1: 0}, NTI12409);
L1: do {
L2: while (true) {
if (!!((it_12415 == null))) Tmp3 = false; else {Tmp3 = (i_12416 <= 63); }if (!Tmp3) break L2;
tempframes_12421[i_12416].Field0 = it_12415.procname;
tempframes_12421[i_12416].Field1 = it_12415.line;
i_12416 += 1;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
L4: do {
L5: while (true) {
if (!!((it_12415 == null))) break L5;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
result_12407[0] = nimCopy(null, makeNimstrLit(""), NTI138);
if (!((total_12417 == i_12416))) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_12407[0] = makeNimstrLit("(");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr(((total_12417 - i_12416))+"")); } else { result_12407[0] = cstrToNimstr(((total_12417 - i_12416))+"");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_12407[0] = makeNimstrLit(" calls omitted) ...\x0A");};
}

L6: do {
var j_12615 = 0;
var HEX3Atmp_12621 = 0;
HEX3Atmp_12621 = (i_12416 - 1);
var res_12624 = HEX3Atmp_12621;
L7: do {
L8: while (true) {
if (!(0 <= res_12624)) break L8;
j_12615 = res_12624;
add_10438(result_12407, 0, tempframes_12421[j_12615].Field0);
if ((0 < tempframes_12421[j_12615].Field1)) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_12407[0] = makeNimstrLit(", line: ");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr((tempframes_12421[j_12615].Field1)+"")); } else { result_12407[0] = cstrToNimstr((tempframes_12421[j_12615].Field1)+"");};
}

if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_12407[0] = makeNimstrLit("\x0A");};
res_12624 -= 1;
}
} while(false);
} while(false);
return result_12407[0];
}
function rawwritestacktrace_12628() {

var result_12630 = null;
if (!((framePtr == null))) {
result_12630 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxwritestacktrace_12404(framePtr)), NTI138);
}
else {
result_12630 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
}

return result_12630;
}
function unhandledException(e_12654) {

var Tmp1;
var buf_12655 = /**/[makeNimstrLit("")];
if (!!(eqStrings(e_12654.message, null))) Tmp1 = false; else {Tmp1 = !((e_12654.message[0] == 0)); }if (Tmp1) {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception: ");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(e_12654.message); } else { buf_12655[0] = e_12654.message;};
}
else {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception");};
}

if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_12655[0] = makeNimstrLit(" [");};
add_10438(buf_12655, 0, e_12654.name);
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_12655[0] = makeNimstrLit("]\x0A");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(rawwritestacktrace_12628()); } else { buf_12655[0] = rawwritestacktrace_12628();};
var cbuf_12801 = toJSStr(buf_12655[0]);
framePtr = null;
  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_12801);
  }
  else {
    throw cbuf_12801;
  }
  }
function raiseOverflow() {

var e_13236 = null;
e_13236 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_13236.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
raiseException(e_13236, "OverflowError");
}
function raiseDivByZero() {

var e_13252 = null;
e_13252 = {m_type: NTI3438, parent: null, name: null, message: null, trace: null};
e_13252.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
raiseException(e_13252, "DivByZeroError");
}
var objectid_59233 = /**/[0];
function initeventemitter_68418() {

var result_68420 = {s: null};
var F={procname:"events.initEventEmitter",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 120;
result_68420.s = nimCopy(null, [], NTI68436);
framePtr = F.prev;
return result_68420;
}
function raiseIndexError() {

var e_13284 = null;
e_13284 = {m_type: NTI3452, parent: null, name: null, message: null, trace: null};
e_13284.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
raiseException(e_13284, "IndexError");
}
function geteventhandler_68250(emitter_68253, event_68254) {

var result_68255 = 0;
var F={procname:"events.getEventHandler",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
BeforeRet: do {
L1: do {
F.line = 92;
var k_68265 = 0;
F.line = 1926;
var HEX3Atmp_68267 = 0;
F.line = 92;
HEX3Atmp_68267 = (emitter_68253.s != null ? (emitter_68253.s.length-1) : -1);
F.line = 1908;
var res_68270 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_68270 <= HEX3Atmp_68267)) break L3;
F.line = 1910;
k_68265 = res_68270;
if (eqStrings(emitter_68253.s[chckIndx(k_68265, 0, emitter_68253.s.length)-0].Field0, event_68254)) {
F.line = 93;
result_68255 = k_68265;
break BeforeRet;
}

res_68270 = addInt(res_68270, 1);
}
} while(false);
} while(false);
F.line = 94;
result_68255 = -1;
break BeforeRet;
} while (false); 
framePtr = F.prev;
return result_68255;
}
function sysfatal_21221(message_21227) {

var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 2578;
var e_21229 = null;
e_21229 = {m_type: NTI3444, parent: null, name: null, message: null, trace: null};
F.line = 2580;
e_21229.message = nimCopy(null, message_21227, NTI138);
F.line = 2581;
raiseException(e_21229, "AssertionError");
framePtr = F.prev;
}
function raiseassert_21216(msg_21218) {

var F={procname:"system.raiseAssert",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
sysfatal_21221(msg_21218);
framePtr = F.prev;
}
function failedassertimpl_21239(msg_21241) {

var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
raiseassert_21216(msg_21241);
framePtr = F.prev;
}
function emit_68297(emitter_68300, eventhandler_68302, args_68303) {

var F={procname:"events.emit",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
L1: do {
F.line = 110;
var fn_68402 = null;
F.line = 3495;
var HEX3Atmp_68404 = null;
F.line = 110;
HEX3Atmp_68404 = eventhandler_68302.Field1;
F.line = 3497;
var i_68407 = 0;
F.line = 3498;
var L_68409 = (HEX3Atmp_68404 != null ? HEX3Atmp_68404.length : 0);
L2: do {
F.line = 3499;
L3: while (true) {
if (!(i_68407 < L_68409)) break L3;
F.line = 3500;
fn_68402 = HEX3Atmp_68404[chckIndx(i_68407, 0, HEX3Atmp_68404.length)-0];
fn_68402(args_68303);
i_68407 = addInt(i_68407, 1);
if (!(((HEX3Atmp_68404 != null ? HEX3Atmp_68404.length : 0) == L_68409))) {
failedassertimpl_21239(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
framePtr = F.prev;
}
function emit_68410(emitter_68413, event_68414, args_68415) {

var F={procname:"events.emit",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 114;
var i_68416 = geteventhandler_68250(emitter_68413, event_68414);
if ((0 <= i_68416)) {
emit_68297(emitter_68413, emitter_68413.s[chckIndx(i_68416, 0, emitter_68413.s.length)-0], args_68415);
}

framePtr = F.prev;
}
function hash_59801(x_59803) {

var result_59804 = 0;
var F={procname:"hashes.hash",prev:framePtr,filename:"lib/pure/hashes.nim",line:0};
framePtr = F;
F.line = 109;
result_59804 = x_59803;
framePtr = F.prev;
return result_59804;
}
function isfilled_62465(hcode_62467) {

var result_62468 = false;
var F={procname:"tables.isFilled",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
F.line = 18;
result_62468 = !((hcode_62467 == 0));
framePtr = F.prev;
return result_62468;
}
function nexttry_62601(h_62603, maxhash_62604) {

var result_62605 = 0;
var F={procname:"tables.nextTry",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
F.line = 28;
result_62605 = (addInt(h_62603, 1) & maxhash_62604);
framePtr = F.prev;
return result_62605;
}
function rawget_66460(t_66465, key_66467, hc_66469, hc_66469_Idx) {

var Tmp3;
var result_66470 = 0;
var F={procname:"rawGet.rawGet",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 43;
hc_66469[hc_66469_Idx] = hash_59801(key_66467);
if ((hc_66469[hc_66469_Idx] == 0)) {
F.line = 45;
hc_66469[hc_66469_Idx] = 314159265;
}

F.line = 31;
var h_66472 = (hc_66469[hc_66469_Idx] & (t_66465.data != null ? (t_66465.data.length-1) : -1));
L1: do {
F.line = 32;
L2: while (true) {
if (!isfilled_62465(t_66465.data[chckIndx(h_66472, 0, t_66465.data.length)-0].Field0)) break L2;
if (!(t_66465.data[chckIndx(h_66472, 0, t_66465.data.length)-0].Field0 == hc_66469[hc_66469_Idx])) Tmp3 = false; else {Tmp3 = (t_66465.data[chckIndx(h_66472, 0, t_66465.data.length)-0].Field1 == key_66467); }if (Tmp3) {
F.line = 38;
result_66470 = h_66472;
break BeforeRet;
}

F.line = 39;
h_66472 = nexttry_62601(h_66472, (t_66465.data != null ? (t_66465.data.length-1) : -1));
}
} while(false);
F.line = 75;
result_66470 = subInt(-1, h_66472);
} while (false); 
framePtr = F.prev;
return result_66470;
}
function HEX5BHEX5D_66630(t_66636, key_66638) {

var result_66639 = 0;
var F={procname:"[].[]",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
framePtr = F;
F.line = 146;
var hc_66641 = [0];
F.line = 147;
var index_66643 = rawget_66460(t_66636, key_66638, hc_66641, 0);
if ((0 <= index_66643)) {
F.line = 148;
result_66639 = t_66636.data[chckIndx(index_66643, 0, t_66636.data.length)-0].Field2;
}
else {
F.line = 151;
F.line = 2559;
var e_66803 = null;
e_66803 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null};
F.line = 2561;
e_66803.message = nimCopy(null, (makeNimstrLit("key not found: ").slice(0,-1)).concat(cstrToNimstr((key_66638)+"")), NTI138);
raiseException(e_66803, "KeyError");
}

framePtr = F.prev;
return result_66639;
}
function tojskc_66625(k_66627) {

var result_66628 = 0;
var F={procname:"keymap.toJSKC",prev:framePtr,filename:"keymap.nim",line:0};
framePtr = F;
F.line = 231;
result_66628 = HEX5BHEX5D_66630({data: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 260, Field1: 260, Field2: 55}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 8, Field1: 8, Field2: 54}, {Field0: 9, Field1: 9, Field2: 53}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 13, Field1: 13, Field2: 52}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 16, Field1: 16, Field2: 112}, {Field0: 17, Field1: 17, Field2: 113}, {Field0: 18, Field1: 18, Field2: 114}, {Field0: 19, Field1: 19, Field2: 69}, {Field0: 20, Field1: 20, Field2: 65}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 27, Field1: 27, Field2: 51}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 32, Field1: 32, Field2: 1}, {Field0: 33, Field1: 33, Field2: 61}, {Field0: 34, Field1: 34, Field2: 62}, {Field0: 35, Field1: 35, Field2: 64}, {Field0: 36, Field1: 36, Field2: 63}, {Field0: 37, Field1: 37, Field2: 58}, {Field0: 38, Field1: 38, Field2: 60}, {Field0: 39, Field1: 39, Field2: 57}, {Field0: 40, Field1: 40, Field2: 59}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 44, Field1: 44, Field2: 68}, {Field0: 45, Field1: 45, Field2: 4}, {Field0: 46, Field1: 46, Field2: 56}, {Field0: 47, Field1: 47, Field2: 6}, {Field0: 48, Field1: 48, Field2: 7}, {Field0: 49, Field1: 49, Field2: 8}, {Field0: 50, Field1: 50, Field2: 9}, {Field0: 51, Field1: 51, Field2: 10}, {Field0: 52, Field1: 52, Field2: 11}, {Field0: 53, Field1: 53, Field2: 12}, {Field0: 54, Field1: 54, Field2: 13}, {Field0: 55, Field1: 55, Field2: 14}, {Field0: 56, Field1: 56, Field2: 15}, {Field0: 57, Field1: 57, Field2: 16}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 59, Field1: 59, Field2: 17}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 61, Field1: 61, Field2: 18}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 65, Field1: 65, Field2: 19}, {Field0: 66, Field1: 66, Field2: 20}, {Field0: 67, Field1: 67, Field2: 21}, {Field0: 68, Field1: 68, Field2: 22}, {Field0: 69, Field1: 69, Field2: 23}, {Field0: 70, Field1: 70, Field2: 24}, {Field0: 71, Field1: 71, Field2: 25}, {Field0: 72, Field1: 72, Field2: 26}, {Field0: 73, Field1: 73, Field2: 27}, {Field0: 74, Field1: 74, Field2: 28}, {Field0: 75, Field1: 75, Field2: 29}, {Field0: 76, Field1: 76, Field2: 30}, {Field0: 77, Field1: 77, Field2: 31}, {Field0: 78, Field1: 78, Field2: 32}, {Field0: 79, Field1: 79, Field2: 33}, {Field0: 80, Field1: 80, Field2: 34}, {Field0: 81, Field1: 81, Field2: 35}, {Field0: 82, Field1: 82, Field2: 36}, {Field0: 83, Field1: 83, Field2: 37}, {Field0: 84, Field1: 84, Field2: 38}, {Field0: 85, Field1: 85, Field2: 39}, {Field0: 86, Field1: 86, Field2: 40}, {Field0: 87, Field1: 87, Field2: 41}, {Field0: 88, Field1: 88, Field2: 42}, {Field0: 89, Field1: 89, Field2: 43}, {Field0: 90, Field1: 90, Field2: 44}, {Field0: 91, Field1: 91, Field2: 45}, {Field0: 92, Field1: 92, Field2: 46}, {Field0: 93, Field1: 93, Field2: 47}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 96, Field1: 96, Field2: 95}, {Field0: 97, Field1: 97, Field2: 96}, {Field0: 98, Field1: 98, Field2: 97}, {Field0: 99, Field1: 99, Field2: 98}, {Field0: 100, Field1: 100, Field2: 99}, {Field0: 101, Field1: 101, Field2: 100}, {Field0: 102, Field1: 102, Field2: 101}, {Field0: 103, Field1: 103, Field2: 102}, {Field0: 104, Field1: 104, Field2: 103}, {Field0: 105, Field1: 105, Field2: 104}, {Field0: 106, Field1: 106, Field2: 107}, {Field0: 107, Field1: 107, Field2: 109}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 109, Field1: 109, Field2: 108}, {Field0: 110, Field1: 110, Field2: 105}, {Field0: 111, Field1: 111, Field2: 106}, {Field0: 112, Field1: 112, Field2: 70}, {Field0: 113, Field1: 113, Field2: 71}, {Field0: 114, Field1: 114, Field2: 72}, {Field0: 115, Field1: 115, Field2: 73}, {Field0: 116, Field1: 116, Field2: 74}, {Field0: 117, Field1: 117, Field2: 75}, {Field0: 118, Field1: 118, Field2: 76}, {Field0: 119, Field1: 119, Field2: 77}, {Field0: 120, Field1: 120, Field2: 78}, {Field0: 121, Field1: 121, Field2: 79}, {Field0: 122, Field1: 122, Field2: 80}, {Field0: 123, Field1: 123, Field2: 81}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 144, Field1: 144, Field2: 67}, {Field0: 145, Field1: 145, Field2: 66}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 314159265, Field1: 0, Field2: 0}, {Field0: 161, Field1: 161, Field2: 49}, {Field0: 162, Field1: 162, Field2: 50}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], counter: 96}, k_66627);
framePtr = F.prev;
return result_66628;
}
function initevents_68601() {

function keyev_68604(e_68607) {

var F={procname:"initEvents.keyev",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
emit_68410(result_68603[0], makeNimstrLit("keyEv"), {kind: 0, key: tojskc_66625(e_68607.keyCode), mods: 0, button: 0, kmods: 0, dt: 0.0});
framePtr = F.prev;
}
function mouseev_68611(e_68614) {

var F={procname:"initEvents.mouseev",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
emit_68410(result_68603[0], makeNimstrLit("mouseEv"), {kind: 1, button: 0, key: 0, mods: 0, kmods: 0, dt: 0.0});
framePtr = F.prev;
}
var result_68603 = [{s: null}];
var F={procname:"events.initEvents",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 144;
nimCopy(result_68603[0], initeventemitter_68418(), NTI68031);
document.addEventListener("keypress", keyev_68604, true);
document.addEventListener("click", mouseev_68611, true);
framePtr = F.prev;
return result_68603[0];
}
function getcontextwebgl_28102(c_28104) {

var result_28105 = null;
var F={procname:"webgl.getContextWebGL",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 318;
result_28105 = c_28104.getContext('webgl') || c_28104.getContext('experimental-webgl');framePtr = F.prev;
return result_28105;
}
function initwindow_69011() {

var result_69024 = {ctx: null, width: 0, height: 0};
var F={procname:"windows.initWindow",prev:framePtr,filename:"windows.nim",line:0};
framePtr = F;
F.line = 15;
var canvas_69025 = document.getElementById("niwe-canvas");
F.line = 17;
result_69024.ctx = getcontextwebgl_28102(canvas_69025);
F.line = 18;
result_69024.width = canvas_69025.width;
F.line = 19;
result_69024.height = canvas_69025.height;
F.line = 20;
console.log(result_69024.width,result_69024.height);framePtr = F.prev;
return result_69024;
}
function resize_28122(canvas_28124) {

var Tmp1;
var F={procname:"webgl.resize",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
if (!((canvas_28124.width == canvas_28124.clientWidth))) Tmp1 = true; else {Tmp1 = !((canvas_28124.height == canvas_28124.clientHeight)); }if (Tmp1) {
F.line = 332;
canvas_28124.width = canvas_28124.clientWidth;
F.line = 333;
canvas_28124.height = canvas_28124.clientHeight;
}

framePtr = F.prev;
}
function getstatus_28112(gl_28114, what_28115) {

var result_28116 = false;
var F={procname:"webgl.getStatus",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 323;
result_28116 = gl_28114.getShaderParameter(what_28115, gl_28114.COMPILE_STATUS);framePtr = F.prev;
return result_28116;
}
function shader_36018(gl_36020, typ_36021, src_36022) {

var result_36023 = {source: null, s: null, kind: 0};
var F={procname:"gl.shader",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
if ((typ_36021 == 1)) {
F.line = 52;
result_36023.s = gl_36020.createShader(35633);
}
else {
if ((typ_36021 == 0)) {
F.line = 54;
result_36023.s = gl_36020.createShader(35632);
}
else {
console.log("Unknown Shader Type");
}
}
gl_36020.shaderSource(result_36023.s, toJSStr(src_36022));
gl_36020.compileShader(result_36023.s);
if (!(getstatus_28112(gl_36020, result_36023.s))) {
console.log(gl_36020.getShaderInfoLog(result_36023.s));
}

F.line = 59;
result_36023.kind = typ_36021;
F.line = 60;
result_36023.source = nimCopy(null, src_36022, NTI138);
framePtr = F.prev;
return result_36023;
}
function getstatus_28117(gl_28119, what_28120) {

var result_28121 = false;
var F={procname:"webgl.getStatus",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 325;
result_28121 = gl_28119.getProgramParameter(what_28120, gl_28119.LINK_STATUS);framePtr = F.prev;
return result_28121;
}
function program_36048(gl_36050, useit_36051, vertexsrc_36052, fragmentsrc_36053) {

var result_36054 = {p: null, vertex: {source: null, s: null, kind: 0}, fragment: {source: null, s: null, kind: 0}, colors: null, attributes: null};
var F={procname:"gl.program",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 65;
var program_36055 = gl_36050.createProgram();
F.line = 66;
var vs_36056 = shader_36018(gl_36050, 1, vertexsrc_36052);
F.line = 67;
var fs_36057 = shader_36018(gl_36050, 0, fragmentsrc_36053);
gl_36050.attachShader(program_36055, vs_36056.s);
gl_36050.attachShader(program_36055, fs_36057.s);
gl_36050.linkProgram(program_36055);
F.line = 72;
nimCopy(result_36054.vertex, vs_36056, NTI29007);
F.line = 73;
nimCopy(result_36054.fragment, fs_36057, NTI29007);
if (!(getstatus_28117(gl_36050, program_36055))) {
console.log(gl_36050.getProgramInfoLog(program_36055));
F.line = 77;
break BeforeRet;
}

if (useit_36051) {
gl_36050.useProgram(program_36055);
}

F.line = 79;
result_36054.p = program_36055;
} while (false); 
framePtr = F.prev;
return result_36054;
}
function clearwith_36014(gl_36016, color_36017) {

var F={procname:"gl.clearWith",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
gl_36016.clearColor(color_36017.Field0, color_36017.Field1, color_36017.Field2, color_36017.Field3);
gl_36016.clear(16384);
framePtr = F.prev;
}
function initrenderer_56015(gl_56017, clear_56018) {

var result_56019 = {context: null, program: {p: null, vertex: {source: null, s: null, kind: 0}, fragment: {source: null, s: null, kind: 0}, colors: null, attributes: null}, buff: null};
var F={procname:"renderer.initRenderer",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 41;
result_56019.context = gl_56017;
resize_28122(result_56019.context.canvas);
F.line = 43;
nimCopy(result_56019.program, program_36048(result_56019.context, true, makeNimstrLit("attribute vec4 aPosition;\x0Auniform mat4 uMatrix;\x0Avoid main() {\x0A  gl_Position = uMatrix*aPosition;\x0A}\x0A"), makeNimstrLit("#ifdef GL_ES\x0A  precision highp float;\x0A#endif\x0A\x0Auniform vec4 uColor;\x0Avoid main() {\x0A  gl_FragColor = uColor;\x0A}\x0A")), NTI29012);
clearwith_36014(result_56019.context, clear_56018);
F.line = 45;
result_56019.buff = result_56019.context.createBuffer();
gl_56017.viewport(0, 0, gl_56017.drawingBufferWidth, gl_56017.drawingBufferHeight);
framePtr = F.prev;
return result_56019;
}
function polygon_56093(x_56095, y_56096, sides_56097, boundingcircleradius_56098, filled_56099, color_56100) {

var result_56101 = {m_type: NTI56089, sides: 0, bcradius: 0.0, filled: false, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"renderer.polygon",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
if (!((3 <= sides_56097))) {
raiseassert_21216(makeNimstrLit("\x0A  3 <= sides "));
}

F.line = 109;
nimCopy(result_56101.color, color_56100, NTI29023);
F.line = 110;
nimCopy(result_56101.pos, {Field0: x_56095, Field1: y_56096}, NTI56077);
F.line = 111;
result_56101.sides = sides_56097;
F.line = 112;
result_56101.bcradius = boundingcircleradius_56098;
F.line = 113;
result_56101.filled = filled_56099;
F.line = 114;
result_56101.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_56101;
}
function initeventhandler_68044(name_68046) {

var result_68047 = {Field0: null, Field1: null};
var F={procname:"events.initEventHandler",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 68;
result_68047.Field1 = nimCopy(null, [], NTI68063);
F.line = 69;
result_68047.Field0 = nimCopy(null, name_68046, NTI138);
framePtr = F.prev;
return result_68047;
}
function addhandler_68064(handler_68067, fn_68071) {

var F={procname:"events.addHandler",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
if (handler_68067.Field1 != null) { handler_68067.Field1.push(fn_68071); } else { handler_68067.Field1 = [fn_68071]; };
framePtr = F.prev;
}
function on_68274(emitter_68277, event_68278, fn_68282) {

var F={procname:"events.on",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 99;
var i_68283 = geteventhandler_68250(emitter_68277, event_68278);
if ((i_68283 < 0)) {
F.line = 101;
var eh_68284 = /**/[initeventhandler_68044(event_68278)];
addhandler_68064(eh_68284[0], fn_68282);
if (emitter_68277.s != null) { emitter_68277.s.push(eh_68284[0]); } else { emitter_68277.s = [eh_68284[0]]; };
}
else {
addhandler_68064(emitter_68277.s[chckIndx(i_68283, 0, emitter_68277.s.length)-0], fn_68282);
}

framePtr = F.prev;
}
function HEX2BHEX3D_48704(x_48709, x_48709_Idx, y_48711) {

var F={procname:"+=.+=",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 3392;
x_48709[x_48709_Idx] = (x_48709[x_48709_Idx] + y_48711);
framePtr = F.prev;
}
function HEX2BHEX3D_58119(lf_58125, rg_58129) {

var F={procname:"renderer.+=",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
HEX2BHEX3D_48704(lf_58125, "Field0", rg_58129["Field0"]);
HEX2BHEX3D_48704(lf_58125, "Field1", rg_58129["Field1"]);
framePtr = F.prev;
}
function extractprogram_36002(program_36004) {

var result_36005 = null;
var F={procname:"gl.extractProgram",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
F.line = 35;
result_36005 = program_36004.p;
framePtr = F.prev;
return result_36005;
}
function HEX5BHEX5DHEX3D_54412(m_54449, i_54451, j_54453, val_54455) {

var F={procname:"[]=.[]=",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((i_54451 < 4))) {
failedassertimpl_21239(makeNimstrLit("i < N Row index out of bounds"));
}

if (!((j_54453 < 4))) {
failedassertimpl_21239(makeNimstrLit("j < M Column index out of bounds"));
}

F.line = 32;
m_54449.data[chckIndx(addInt(mulInt(i_54451, 4), j_54453), 0, m_54449.data.length)-0] = val_54455;
framePtr = F.prev;
}
function low_57602(v_57606) {

var result_57607 = 0;
var F={procname:"low.low",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 84;
result_57607 = 0;
framePtr = F.prev;
return result_57607;
}
function high_57616(v_57620) {

var result_57621 = 0;
var F={procname:"high.high",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 85;
result_57621 = 3;
framePtr = F.prev;
return result_57621;
}
function HEX5BHEX5D_57640(v_57646, i_57648) {

var result_57649 = 0.0;
var F={procname:"[].[]",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 49;
result_57649 = v_57646.data[chckIndx(i_57648, 0, v_57646.data.length)-0];
framePtr = F.prev;
return result_57649;
}
function HEX5BHEX5D_57651(v_57657, i_57659) {

var result_57660 = 0.0;
var F={procname:"[].[]",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 49;
result_57660 = v_57657.data[chckIndx(i_57659, 0, v_57657.data.length)-0];
framePtr = F.prev;
return result_57660;
}
function dot_57417(v_57454, w_57489) {

var result_57490 = [0.0];
var F={procname:"dot.dot",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
L1: do {
F.line = 121;
var i_57638 = 0;
F.line = 1926;
var HEX3Atmp_57672 = 0;
F.line = 1926;
var HEX3Atmp_57673 = 0;
F.line = 121;
HEX3Atmp_57672 = low_57602(v_57454);
F.line = 121;
HEX3Atmp_57673 = high_57616(v_57454);
F.line = 1908;
var res_57676 = HEX3Atmp_57672;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_57676 <= HEX3Atmp_57673)) break L3;
F.line = 1910;
i_57638 = res_57676;
HEX2BHEX3D_48704(result_57490, 0, (HEX5BHEX5D_57640(v_57454, i_57638) * HEX5BHEX5D_57651(w_57489, i_57638)));
res_57676 = addInt(res_57676, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_57490[0];
}
function row_56622(m_56658, r_56660) {

var result_56694 = {data: null, p: [null, 0]};
var F={procname:"row.row",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((r_56660 < 4))) {
failedassertimpl_21239(makeNimstrLit("r < N The matrix has less rows than the requested row index"));
}

result_56694.data = new Float64Array(4);
L1: do {
F.line = 94;
var i_57010 = 0;
F.line = 3689;
var i_57014 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_57014 < 4)) break L3;
F.line = 3691;
i_57010 = i_57014;
F.line = 94;
result_56694.data[chckIndx(i_57010, 0, result_56694.data.length)-0] = m_56658.data[chckIndx(addInt(mulInt(r_56660, 4), i_57010), 0, m_56658.data.length)-0];
i_57014 = addInt(i_57014, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_56694;
}
function col_57017(m_57053, c_57055) {

var result_57089 = {data: null, p: [null, 0]};
var F={procname:"col.col",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((c_57055 < 4))) {
failedassertimpl_21239(makeNimstrLit("c < M The matrix has less cols than the requested col index"));
}

result_57089.data = new Float64Array(4);
L1: do {
F.line = 107;
var i_57410 = 0;
F.line = 3689;
var i_57414 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_57414 < 4)) break L3;
F.line = 3691;
i_57410 = i_57414;
F.line = 107;
result_57089.data[chckIndx(i_57410, 0, result_57089.data.length)-0] = m_57053.data[chckIndx(addInt(mulInt(i_57410, 4), c_57055), 0, m_57053.data.length)-0];
i_57414 = addInt(i_57414, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_57089;
}
function matmul_56115(m_56152, w_56185) {

var result_56217 = [{data: null}];
var F={procname:"matMul.matMul",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
result_56217[0].data = new Float64Array(16);
L1: do {
F.line = 128;
var r_56610 = 0;
F.line = 3689;
var i_57734 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_57734 < 4)) break L3;
F.line = 3691;
r_56610 = i_57734;
L4: do {
F.line = 129;
var c_56620 = 0;
F.line = 3689;
var i_57730 = 0;
L5: do {
F.line = 3690;
L6: while (true) {
if (!(i_57730 < 4)) break L6;
F.line = 3691;
c_56620 = i_57730;
HEX5BHEX5DHEX3D_54412(result_56217[0], r_56610, c_56620, dot_57417(row_56622(m_56152, r_56610), col_57017(w_56185, c_56620)));
i_57730 = addInt(i_57730, 1);
}
} while(false);
} while(false);
i_57734 = addInt(i_57734, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_56217[0];
}
function raiseRangeError() {

var e_13268 = null;
e_13268 = {m_type: NTI3456, parent: null, name: null, message: null, trace: null};
e_13268.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
raiseException(e_13268, "RangeError");
}
function tomatrix_53205(arr_53225) {

var result_53263 = {data: null};
var F={procname:"toMatrix.toMatrix",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
result_53263.data = new Float64Array(16);
if (!(true)) {
failedassertimpl_21239(makeNimstrLit("\x0A  true "));
}

if (false) {
L1: do {
F.line = 63;
var i_53814 = 0;
F.line = 1908;
var res_53818 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_53818 <= 15)) break L3;
F.line = 1910;
i_53814 = chckRange(res_53818, 0, 15);
F.line = 63;
result_53263.data[chckIndx(i_53814, 0, result_53263.data.length)-0] = arr_53225[chckIndx(i_53814, 0, arr_53225.length)-0];
res_53818 = addInt(res_53818, 1);
}
} while(false);
} while(false);
}
else {
F.line = 65;
nimCopy(result_53263.data, arr_53225, NTI53212);
}

framePtr = F.prev;
return result_53263;
}
function translation_53876(x_53882, y_53884, z_53886) {

var Tmp1;
var result_53920 = {data: null};
var F={procname:"translation.translation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
if (!true) Tmp1 = false; else {Tmp1 = true; }if (!(Tmp1)) {
raiseassert_21216(makeNimstrLit("\x0A  true and true be careful with implicit conversions from int to float"));
}

F.line = 24;
var resarr_53923 = new Float64Array(16);
F.line = 25;
resarr_53923[0] = 1.0000000000000000e+00;
F.line = 26;
resarr_53923[5] = 1.0000000000000000e+00;
F.line = 27;
resarr_53923[10] = 1.0000000000000000e+00;
F.line = 33;
resarr_53923[12] = x_53882;
F.line = 34;
resarr_53923[13] = y_53884;
F.line = 35;
resarr_53923[14] = z_53886;
F.line = 36;
resarr_53923[15] = 1.0000000000000000e+00;
F.line = 38;
nimCopy(result_53920, tomatrix_53205(resarr_53923), NTI53234);
framePtr = F.prev;
return result_53920;
}
function translation_53865(x_53867, y_53868, z_53869) {

var result_53873 = {data: null};
var F={procname:"graphic.translation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
F.line = 42;
nimCopy(result_53873, translation_53876(x_53867, y_53868, z_53869), NTI53891);
framePtr = F.prev;
return result_53873;
}
function HEX2F_20407(x_20409, y_20410) {

var result_20411 = 0.0;
var F={procname:"system./",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 3241;
result_20411 = (x_20409 / y_20410);
framePtr = F.prev;
return result_20411;
}
function scaling_55107(w_55113, h_55115) {

var Tmp1;
var result_55149 = {data: null};
var F={procname:"scaling.scaling",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
if (!true) Tmp1 = false; else {Tmp1 = true; }if (!(Tmp1)) {
raiseassert_21216(makeNimstrLit("\x0A  true and true be careful with implicit conversions from int to float"));
}

F.line = 69;
var resarr_55152 = new Float64Array(16);
F.line = 70;
resarr_55152[0] = (1.0000000000000000e+00 / w_55113);
F.line = 71;
resarr_55152[5] = (1.0000000000000000e+00 / h_55115);
F.line = 72;
resarr_55152[10] = 0.0;
F.line = 74;
resarr_55152[10] = 1.0000000000000000e+00;
F.line = 75;
resarr_55152[15] = 1.0000000000000000e+00;
F.line = 77;
nimCopy(result_55149, tomatrix_53205(resarr_55152), NTI53234);
framePtr = F.prev;
return result_55149;
}
function scaling_55097(w_55099, h_55100) {

var result_55104 = {data: null};
var F={procname:"graphic.scaling",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
F.line = 81;
nimCopy(result_55104, scaling_55107(w_55099, h_55100), NTI55120);
framePtr = F.prev;
return result_55104;
}
function tof32a_56002(m_56007) {

var result_56008 = null;
var F={procname:"renderer.toF32A",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 31;
var am_56009 = nimCopy(null, m_56007.data, NTI53063);
F.line = 32;
result_56008 = new Float32Array(am_56009);
framePtr = F.prev;
return result_56008;
}
function setmatrixunif_56103(eng_56105, rend_56106, uniform_56107) {

var F={procname:"renderer.setMatrixUnif",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 117;
var w_56108 = eng_56105.context.drawingBufferWidth;
F.line = 118;
var h_56109 = eng_56105.context.drawingBufferHeight;
F.line = 120;
var umatloc_56110 = eng_56105.context.getUniformLocation(extractprogram_36002(eng_56105.program), toJSStr(uniform_56107));
F.line = 122;
var mat_57950 = matmul_56115(matmul_56115(matmul_56115(translation_53865(rend_56106.pos.Field0, rend_56106.pos.Field1, 0.0), translation_53865(rend_56106.origin.Field0, rend_56106.origin.Field1, 0.0)), translation_53865(HEX2F_20407(negInt(w_56108), 2), HEX2F_20407(negInt(h_56109), 2), 0.0)), scaling_55097(HEX2F_20407(w_56108, 2), HEX2F_20407(h_56109, 2)));
eng_56105.context.uniformMatrix4fv(umatloc_56110, false, tof32a_56002(mat_57950));
framePtr = F.prev;
}
function newseq_57961(len_57965) {

var result_57967 = null;
var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
result_57967 = new Array(len_57965); for (var i=0;i<len_57965;++i) {result_57967[i]=0.0;}framePtr = F.prev;
return result_57967;
}
function bufferdata_27918(gl_27920, target_27921, data_27922, usage_27923) {

var F={procname:"webgl.bufferData",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 240;
gl_27920.bufferData(target_27921,data_27922,usage_27923);framePtr = F.prev;
}
function tofloat32array_28087(a_28090) {

var result_28091 = null;
var F={procname:"webgl.toFloat32Array",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 304;
result_28091 = new Float32Array(a_28090);framePtr = F.prev;
return result_28091;
}
function uploadvertices_56020(eng_56022, vertices_56024, drawmode_56025) {

var F={procname:"renderer.uploadVertices",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
eng_56022.context.bindBuffer(34962, eng_56022.buff);
bufferdata_27918(eng_56022.context, 34962, tofloat32array_28087(vertices_56024), drawmode_56025);
eng_56022.context.bindBuffer(34962, eng_56022.buff);
framePtr = F.prev;
}
function bindcolor_36067(gl_36069, program_36070, colorname_36071, color_36072) {

var F={procname:"gl.bindColor",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
F.line = 91;
var uloc_36073 = gl_36069.getUniformLocation(extractprogram_36002(program_36070), toJSStr(colorname_36071));
gl_36069.uniform4fv(uloc_36073, tofloat32array_28087([color_36072.Field0, color_36072.Field1, color_36072.Field2, color_36072.Field3]));
framePtr = F.prev;
}
function enableattribute_36087(gl_36089, program_36090, attribname_36091, itemsize_36092) {

var F={procname:"gl.enableAttribute",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
F.line = 96;
var aloc_36093 = gl_36089.getAttribLocation(extractprogram_36002(program_36090), toJSStr(attribname_36091));
gl_36089.enableVertexAttribArray(aloc_36093);
gl_36089.vertexAttribPointer(aloc_36093, itemsize_36092, 5126, false, 0, 0);
framePtr = F.prev;
}
function drawtrianglefan_56042(eng_56044, vertices_56046, color_56047, drawmode_56048) {

var F={procname:"renderer.drawTriangleFan",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
uploadvertices_56020(eng_56044, vertices_56046, drawmode_56048);
F.line = 70;
var numvertices_56057 = divInt((vertices_56046 != null ? vertices_56046.length : 0), 4);
bindcolor_36067(eng_56044.context, eng_56044.program, makeNimstrLit("uColor"), color_56047);
enableattribute_36087(eng_56044.context, eng_56044.program, makeNimstrLit("aPosition"), 4);
eng_56044.context.drawArrays(6, 0, numvertices_56057);
eng_56044.context.flush();
framePtr = F.prev;
}
function drawlineloop_56058(eng_56060, vertices_56062, color_56063, drawmode_56064) {

var F={procname:"renderer.drawLineLoop",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
uploadvertices_56020(eng_56060, vertices_56062, drawmode_56064);
F.line = 79;
var numvertices_56073 = divInt((vertices_56062 != null ? vertices_56062.length : 0), 4);
bindcolor_36067(eng_56060.context, eng_56060.program, makeNimstrLit("uColor"), color_56063);
enableattribute_36087(eng_56060.context, eng_56060.program, makeNimstrLit("aPosition"), 4);
eng_56060.context.drawArrays(2, 0, numvertices_56073);
eng_56060.context.flush();
framePtr = F.prev;
}
function draw_57954(eng_57956, pol_57957) {

var F={procname:"renderer.draw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
setmatrixunif_56103(eng_57956, pol_57957, makeNimstrLit("uMatrix"));
if (pol_57957.filled) {
F.line = 136;
var verts_57996 = newseq_57961(chckRange(addInt(8, mulInt(pol_57957.sides, 4)), 0, 2147483647));
F.line = 139;
verts_57996[3] = (1.0000000000000000e+00 / pol_57957.scale);
L1: do {
F.line = 142;
var i_58017 = 0;
F.line = 1918;
var HEX3Atmp_58085 = 0;
F.line = 142;
HEX3Atmp_58085 = subInt((verts_57996 != null ? verts_57996.length : 0), 1);
F.line = 1908;
var res_58088 = 4;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_58088 <= HEX3Atmp_58085)) break L3;
F.line = 1910;
i_58017 = res_58088;
F.line = 143;
verts_57996[chckIndx(i_58017, 0, verts_57996.length)-0] = (pol_57957.bcradius * Math.cos(((i_58017 * 3.1415926535897931e+00) / (pol_57957.sides * 2.0000000000000000e+00))));
F.line = 145;
verts_57996[chckIndx(addInt(i_58017, 1), 0, verts_57996.length)-0] = (pol_57957.bcradius * Math.sin(((i_58017 * 3.1415926535897931e+00) / (pol_57957.sides * 2.0000000000000000e+00))));
F.line = 147;
verts_57996[chckIndx(addInt(i_58017, 2), 0, verts_57996.length)-0] = 0.0;
F.line = 148;
verts_57996[chckIndx(addInt(i_58017, 3), 0, verts_57996.length)-0] = (1.0000000000000000e+00 / pol_57957.scale);
res_58088 = addInt(res_58088, 4);
}
} while(false);
} while(false);
drawtrianglefan_56042(eng_57956, verts_57996, pol_57957.color, 35044);
}
else {
F.line = 153;
var verts_58049 = newseq_57961(chckRange(mulInt(pol_57957.sides, 4), 0, 2147483647));
L4: do {
F.line = 156;
var i_58069 = 0;
F.line = 1918;
var HEX3Atmp_58101 = 0;
F.line = 156;
HEX3Atmp_58101 = subInt((verts_58049 != null ? verts_58049.length : 0), 1);
F.line = 1908;
var res_58104 = 0;
L5: do {
F.line = 1909;
L6: while (true) {
if (!(res_58104 <= HEX3Atmp_58101)) break L6;
F.line = 1910;
i_58069 = res_58104;
F.line = 157;
verts_58049[chckIndx(i_58069, 0, verts_58049.length)-0] = (pol_57957.bcradius * Math.cos(((i_58069 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * pol_57957.sides))));
F.line = 158;
verts_58049[chckIndx(addInt(i_58069, 1), 0, verts_58049.length)-0] = (pol_57957.bcradius * Math.sin(((i_58069 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * pol_57957.sides))));
F.line = 159;
verts_58049[chckIndx(addInt(i_58069, 2), 0, verts_58049.length)-0] = 0.0;
F.line = 160;
verts_58049[chckIndx(addInt(i_58069, 3), 0, verts_58049.length)-0] = (1.0000000000000000e+00 / pol_57957.scale);
res_58104 = addInt(res_58104, 4);
}
} while(false);
} while(false);
drawlineloop_56058(eng_57956, verts_58049, pol_57957.color, 35044);
}

framePtr = F.prev;
}
function requestanimationframe_28106(fn_28111) {

var F={procname:"webgl.requestAnimationFrame",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 320;
window.requestAnimationFrame(fn_28111);framePtr = F.prev;
}
function innerframedraw_70027(now_70025) {

var F={procname:"renderer.innerframedraw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 175;
dt_70026[0] = (now_70025 - lastt_70023[0]);
emit_68410(evq_70001[0], makeNimstrLit("update"), {dt: dt_70026[0], kind: 0, key: 0, mods: 0, button: 0, kmods: 0});
resize_28122(en_70003[0].context.canvas);
en_70003[0].context.viewport(0, 0, en_70003[0].context.drawingBufferWidth, en_70003[0].context.drawingBufferHeight);
draw_57954(en_70003[0], b_70011[0]);
F.line = 177;
lastt_70023[0] = now_70025;
requestanimationframe_28106(innerframedraw_70027);
framePtr = F.prev;
}
function HEX3Aanonymous_70012(e_70014) {

var F={procname:"renderer.:anonymous",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
HEX2BHEX3D_58119(speed_70005[0], accel_70007[0]);
framePtr = F.prev;
}
function HEX3Aanonymous_70017(e_70019) {

var F={procname:"renderer.:anonymous",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
HEX2BHEX3D_58119(b_70011[0].pos, speed_70005[0]);
framePtr = F.prev;
}
var evq_70001 = /**/[initevents_68601()];
var w_70002 = /**/[initwindow_69011()];
var en_70003 = /**/[initrenderer_56015(w_70002[0].ctx, {Field0: 1.0000000000000000e+00, Field1: 1.0000000000000000e+00, Field2: 1.0000000000000000e+00, Field3: 1.0000000000000000e+00})];
var speed_70005 = /**/[{Field0: 0.0, Field1: 0.0}];
var accel_70007 = /**/[{Field0: 2.0000000000000000e+00, Field1: 2.0000000000000000e+00}];
var b_70011 = /**/[polygon_56093(1.0000000000000000e+02, 1.0000000000000000e+02, 32, 1.0000000000000000e+02, true, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00})];
on_68274(evq_70001[0], makeNimstrLit("mouseEv"), HEX3Aanonymous_70012);
on_68274(evq_70001[0], makeNimstrLit("update"), HEX3Aanonymous_70017);
var lastt_70023 = /**/[0.0];
var dt_70026 = /**/[0.0];
innerframedraw_70027(0.0);
