/* Generated by the Nim Compiler v0.16.0 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI50046 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI53137 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI53136 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI53120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51908 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI51907 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI51891 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51251 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI51250 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI51234 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI128 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI51212 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3456 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI67063 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI54024 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI54023 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI54032 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI54029 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI54018 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI54017 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI54011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI54005 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI29003 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI54003 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI54035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI50017 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI27211 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI27209 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI50015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI27231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI27229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI50011 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50002 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI27235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI27233 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI50006 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3444 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3452 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI67034 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI67031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI67019 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI67018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI67009 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI67436 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3483 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3436 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
var NNI3436 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3436.node = NNI3436;
NTI3483.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3483, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3436.base = NTI3424;
NTI3440.base = NTI3436;
var NNI12409 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI12409.node = NNI12409;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3438.base = NTI3436;
NTI67018.base = NTI67019;
var NNI67009 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI67018, name: "Field1", sons: null}]};
NTI67009.node = NNI67009;
NTI67436.base = NTI67009;
NTI67034.base = NTI67009;
var NNI67031 = {kind: 1, offset: "s", len: 0, typ: NTI67034, name: "s", sons: null};
NTI67031.node = NNI67031;
var NNI3452 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3452.node = NNI3452;
NTI3452.base = NTI3424;
var NNI3444 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3444.node = NNI3444;
NTI3444.base = NTI3424;
var NNI3448 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3448.node = NNI3448;
var NNI3446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3446.node = NNI3446;
NTI3446.base = NTI3424;
NTI3448.base = NTI3446;
var NNI27235 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI27235.node = NNI27235;
NTI27235.base = NTI3408;
NTI27233.base = NTI27235;
var NNI50002 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: [{kind: 1, offset: 0, typ: NTI50002, name: "Fragment", len: 0, sons: null}, 
{kind: 1, offset: 1, typ: NTI50002, name: "Vertex", len: 0, sons: null}]};
NTI50002.node = NNI50002;
var NNI50006 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "source", len: 0, typ: NTI138, name: "source", sons: null}, 
{kind: 1, offset: "s", len: 0, typ: NTI27233, name: "s", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI50002, name: "kind", sons: null}]};
NTI50006.node = NNI50006;
var NNI27231 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI27231.node = NNI27231;
NTI27231.base = NTI3408;
NTI27229.base = NTI27231;
var NNI27211 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI27211.node = NNI27211;
NTI27211.base = NTI3408;
NTI27209.base = NTI27211;
NTI50015.base = NTI27209;
NTI50017.base = NTI114;
var NNI50011 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "p", len: 0, typ: NTI27229, name: "p", sons: null}, 
{kind: 1, offset: "vertex", len: 0, typ: NTI50006, name: "vertex", sons: null}, 
{kind: 1, offset: "fragment", len: 0, typ: NTI50006, name: "fragment", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI50015, name: "colors", sons: null}, 
{kind: 1, offset: "attributes", len: 0, typ: NTI50017, name: "attributes", sons: null}]};
NTI50011.node = NNI50011;
var NNI54035 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "sides", len: 0, typ: NTI104, name: "sides", sons: null}, 
{kind: 1, offset: "bcradius", len: 0, typ: NTI124, name: "bcradius", sons: null}, 
{kind: 1, offset: "filled", len: 0, typ: NTI130, name: "filled", sons: null}]};
NTI54035.node = NNI54035;
var NNI29003 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI124, name: "Field3", sons: null}]};
NTI29003.node = NNI29003;
var NNI54005 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI54005.node = NNI54005;
var NNI54011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI54011.node = NNI54011;
var NNI54003 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "color", len: 0, typ: NTI29003, name: "color", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI54005, name: "pos", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI124, name: "scale", sons: null}, 
{kind: 1, offset: "rot", len: 0, typ: NTI124, name: "rot", sons: null}, 
{kind: 1, offset: "origin", len: 0, typ: NTI54011, name: "origin", sons: null}, 
{kind: 1, offset: "centered", len: 0, typ: NTI130, name: "centered", sons: null}]};
NTI54003.node = NNI54003;
NTI54003.base = NTI3408;
NTI54035.base = NTI54003;
var NNI54018 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI54018.node = NNI54018;
var NNI54017 = {kind: 1, offset: "size", len: 0, typ: NTI54018, name: "size", sons: null};
NTI54017.node = NNI54017;
NTI54017.base = NTI54003;
var NNI54029 = {kind: 1, offset: "radius", len: 0, typ: NTI124, name: "radius", sons: null};
NTI54029.node = NNI54029;
NTI54029.base = NTI54003;
var NNI54032 = {kind: 1, offset: "radius", len: 0, typ: NTI124, name: "radius", sons: null};
NTI54032.node = NNI54032;
NTI54032.base = NTI54003;
var NNI54024 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI54024.node = NNI54024;
var NNI54023 = {kind: 1, offset: "size", len: 0, typ: NTI54024, name: "size", sons: null};
NTI54023.node = NNI54023;
NTI54023.base = NTI54003;
NTI67063.base = NTI67019;
var NNI3456 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3456.node = NNI3456;
NTI3456.base = NTI3424;
NTI51212.base = NTI128;
NTI51251.base = NTI124;
NTI51250.base = NTI51251;
var NNI51234 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI51250, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI51234.node = NNI51234;
NTI51908.base = NTI124;
NTI51907.base = NTI51908;
var NNI51891 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI51907, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI51891.node = NNI51891;
NTI53137.base = NTI124;
NTI53136.base = NTI53137;
var NNI53120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI53136, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI53120.node = NNI53120;
NTI50046.base = NTI124;
function makeNimstrLit(c_13403) {

    var ln = c_13403.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_13403.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    }
function SetConstr() {

      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    }
function nimCopy(dest_18618, src_18619, ti_18620) {

var result_19029 = null;
switch (ti_18620.kind) {
case 21: case 22: case 23: case 5: if (!(isfatpointer_18601(ti_18620))) {
result_19029 = src_18619;
}
else {
result_19029 = [src_18619[0], src_18619[1]];}


break;
case 19:       if (dest_18618 === null || dest_18618 === undefined) {
        dest_18618 = {};
      }
      else {
        for (var key in dest_18618) { delete dest_18618[key]; }
      }
      for (var key in src_18619) { dest_18618[key] = src_18619[key]; }
      result_19029 = dest_18618;
    
break;
case 18: case 17: if (!((ti_18620.base == null))) {
result_19029 = nimCopy(dest_18618, src_18619, ti_18620.base);
}
else {
if ((ti_18620.kind == 17)) {
result_19029 = (dest_18618 === null || dest_18618 === undefined) ? {m_type: ti_18620} : dest_18618;}
else {
result_19029 = (dest_18618 === null || dest_18618 === undefined) ? {} : dest_18618;}
}
nimCopyAux(result_19029, src_18619, ti_18620.node);

break;
case 24: case 4: case 27: case 16:       if (src_18619 === null) {
        result_19029 = null;
      }
      else {
        if (dest_18618 === null || dest_18618 === undefined) {
          dest_18618 = new Array(src_18619.length);
        }
        else {
          dest_18618.length = src_18619.length;
        }
        result_19029 = dest_18618;
        for (var i = 0; i < src_18619.length; ++i) {
          result_19029[i] = nimCopy(result_19029[i], src_18619[i], ti_18620.base);
        }
      }
    
break;
case 28:       if (src_18619 !== null) {
        result_19029 = src_18619.slice(0);
      }
    
break;
default: 
result_19029 = src_18619;
break;
}
return result_19029;
}
function eqStrings(a_16003, b_16004) {

    if (a_16003 == b_16004) return true;
    if ((!a_16003) || (!b_16004)) return false;
    var alen = a_16003.length;
    if (alen != b_16004.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16003[i] != b_16004[i]) return false;
    return true;
  }
function arrayConstr(len_19203, value_19204, typ_19205) {

      var result = new Array(len_19203);
      for (var i = 0; i < len_19203; ++i) result[i] = nimCopy(null, value_19204, typ_19205);
      return result;
    }
function cstrToNimstr(c_13603) {

  var ln = c_13603.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_13603.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function toJSStr(s_13803) {

    var len = s_13803.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_13803[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_13803[i] < 128)
        asciiPart[i] = fcc(s_13803[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  }
function raiseException(e_12806, ename_12807) {

e_12806.name = ename_12807;
if ((excHandler == 0)) {
unhandledException(e_12806);
}

e_12806.trace = nimCopy(null, rawwritestacktrace_12628(), NTI138);
throw e_12806;}
function chckIndx(i_19209, a_19210, b_19211) {

var Tmp1;
var result_19212 = 0;
BeforeRet: do {
if (!(a_19210 <= i_19209)) Tmp1 = false; else {Tmp1 = (i_19209 <= b_19211); }if (Tmp1) {
result_19212 = i_19209;
break BeforeRet;
}
else {
raiseIndexError();
}

} while (false); 
return result_19212;
}
function addInt(a_16256, b_16257) {

      var result = a_16256 + b_16257;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function subInt(a_16403, b_16404) {

      var result = a_16403 - b_16404;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function mulInt(a_16603, b_16604) {

      var result = a_16603 * b_16604;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function chckRange(i_19215, a_19216, b_19217) {

var Tmp1;
var result_19218 = 0;
BeforeRet: do {
if (!(a_19216 <= i_19215)) Tmp1 = false; else {Tmp1 = (i_19215 <= b_19217); }if (Tmp1) {
result_19218 = i_19215;
break BeforeRet;
}
else {
raiseRangeError();
}

} while (false); 
return result_19218;
}
function negInt(a_18203) {

var result_18204 = 0;
result_18204 = (a_18203 * -1);
return result_18204;
}
function divInt(a_16803, b_16804) {

      if (b_16804 == 0) raiseDivByZero();
      if (b_16804 == -1 && a_16803 == 2147483647) raiseOverflow();
      return Math.floor(a_16803 / b_16804);
    }
var nimvm_5887 = false;
var nim_program_result = 0;
var globalraisehook_10414 = [null];
var localraisehook_10419 = [null];
var outofmemhook_10422 = [null];
function isfatpointer_18601(ti_18603) {

var result_18604 = false;
BeforeRet: do {
result_18604 = !((SetConstr(17, 16, 4, 18, 27, 19, 23, 22, 21)[ti_18603.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_18604;
}
function nimCopyAux(dest_18623, src_18624, n_18626) {

switch (n_18626.kind) {
case 0: 
break;
case 1:       dest_18623[n_18626.offset] = nimCopy(dest_18623[n_18626.offset], src_18624[n_18626.offset], n_18626.typ);
    
break;
case 2: L1: do {
var i_19015 = 0;
var HEX3Atmp_19017 = 0;
HEX3Atmp_19017 = (n_18626.len - 1);
var res_19020 = 0;
L2: do {
L3: while (true) {
if (!(res_19020 <= HEX3Atmp_19017)) break L3;
i_19015 = res_19020;
nimCopyAux(dest_18623, src_18624, n_18626.sons[i_19015]);
res_19020 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_18623[n_18626.offset] = nimCopy(dest_18623[n_18626.offset], src_18624[n_18626.offset], n_18626.typ);
      for (var i = 0; i < n_18626.sons.length; ++i) {
        nimCopyAux(dest_18623, src_18624, n_18626.sons[i][1]);
      }
    
break;
}
}
function add_10438(x_10441, x_10441_Idx, y_10442) {

        var len = x_10441[0].length-1;
        for (var i = 0; i < y_10442.length; ++i) {
          x_10441[0][len] = y_10442.charCodeAt(i);
          ++len;
        }
        x_10441[0][len] = 0
      }
function auxwritestacktrace_12404(f_12406) {

var Tmp3;
var result_12407 = [null];
var it_12415 = f_12406;
var i_12416 = 0;
var total_12417 = 0;
var tempframes_12421 = arrayConstr(64, {Field0: null, Field1: 0}, NTI12409);
L1: do {
L2: while (true) {
if (!!((it_12415 == null))) Tmp3 = false; else {Tmp3 = (i_12416 <= 63); }if (!Tmp3) break L2;
tempframes_12421[i_12416].Field0 = it_12415.procname;
tempframes_12421[i_12416].Field1 = it_12415.line;
i_12416 += 1;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
L4: do {
L5: while (true) {
if (!!((it_12415 == null))) break L5;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
result_12407[0] = nimCopy(null, makeNimstrLit(""), NTI138);
if (!((total_12417 == i_12416))) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_12407[0] = makeNimstrLit("(");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr(((total_12417 - i_12416))+"")); } else { result_12407[0] = cstrToNimstr(((total_12417 - i_12416))+"");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_12407[0] = makeNimstrLit(" calls omitted) ...\x0A");};
}

L6: do {
var j_12615 = 0;
var HEX3Atmp_12621 = 0;
HEX3Atmp_12621 = (i_12416 - 1);
var res_12624 = HEX3Atmp_12621;
L7: do {
L8: while (true) {
if (!(0 <= res_12624)) break L8;
j_12615 = res_12624;
add_10438(result_12407, 0, tempframes_12421[j_12615].Field0);
if ((0 < tempframes_12421[j_12615].Field1)) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_12407[0] = makeNimstrLit(", line: ");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr((tempframes_12421[j_12615].Field1)+"")); } else { result_12407[0] = cstrToNimstr((tempframes_12421[j_12615].Field1)+"");};
}

if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_12407[0] = makeNimstrLit("\x0A");};
res_12624 -= 1;
}
} while(false);
} while(false);
return result_12407[0];
}
function rawwritestacktrace_12628() {

var result_12630 = null;
if (!((framePtr == null))) {
result_12630 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxwritestacktrace_12404(framePtr)), NTI138);
}
else {
result_12630 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
}

return result_12630;
}
function unhandledException(e_12654) {

var Tmp1;
var buf_12655 = /**/[makeNimstrLit("")];
if (!!(eqStrings(e_12654.message, null))) Tmp1 = false; else {Tmp1 = !((e_12654.message[0] == 0)); }if (Tmp1) {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception: ");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(e_12654.message); } else { buf_12655[0] = e_12654.message;};
}
else {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception");};
}

if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_12655[0] = makeNimstrLit(" [");};
add_10438(buf_12655, 0, e_12654.name);
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_12655[0] = makeNimstrLit("]\x0A");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(rawwritestacktrace_12628()); } else { buf_12655[0] = rawwritestacktrace_12628();};
var cbuf_12801 = toJSStr(buf_12655[0]);
framePtr = null;
  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_12801);
  }
  else {
    throw cbuf_12801;
  }
  }
function raiseOverflow() {

var e_13236 = null;
e_13236 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_13236.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
raiseException(e_13236, "OverflowError");
}
function raiseDivByZero() {

var e_13252 = null;
e_13252 = {m_type: NTI3438, parent: null, name: null, message: null, trace: null};
e_13252.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
raiseException(e_13252, "DivByZeroError");
}
var objectid_58233 = /**/[0];
function initeventemitter_67418() {

var result_67420 = {s: null};
var F={procname:"events.initEventEmitter",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 120;
result_67420.s = nimCopy(null, [], NTI67436);
framePtr = F.prev;
return result_67420;
}
function raiseIndexError() {

var e_13284 = null;
e_13284 = {m_type: NTI3452, parent: null, name: null, message: null, trace: null};
e_13284.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
raiseException(e_13284, "IndexError");
}
function geteventhandler_67250(emitter_67253, event_67254) {

var result_67255 = 0;
var F={procname:"events.getEventHandler",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
BeforeRet: do {
L1: do {
F.line = 92;
var k_67265 = 0;
F.line = 1926;
var HEX3Atmp_67267 = 0;
F.line = 92;
HEX3Atmp_67267 = (emitter_67253.s != null ? (emitter_67253.s.length-1) : -1);
F.line = 1908;
var res_67270 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_67270 <= HEX3Atmp_67267)) break L3;
F.line = 1910;
k_67265 = res_67270;
if (eqStrings(emitter_67253.s[chckIndx(k_67265, 0, emitter_67253.s.length)-0].Field0, event_67254)) {
F.line = 93;
result_67255 = k_67265;
break BeforeRet;
}

res_67270 = addInt(res_67270, 1);
}
} while(false);
} while(false);
F.line = 94;
result_67255 = -1;
break BeforeRet;
} while (false); 
framePtr = F.prev;
return result_67255;
}
function sysfatal_21221(message_21227) {

var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 2578;
var e_21229 = null;
e_21229 = {m_type: NTI3444, parent: null, name: null, message: null, trace: null};
F.line = 2580;
e_21229.message = nimCopy(null, message_21227, NTI138);
F.line = 2581;
raiseException(e_21229, "AssertionError");
framePtr = F.prev;
}
function raiseassert_21216(msg_21218) {

var F={procname:"system.raiseAssert",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
sysfatal_21221(msg_21218);
framePtr = F.prev;
}
function failedassertimpl_21239(msg_21241) {

var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
raiseassert_21216(msg_21241);
framePtr = F.prev;
}
function emit_67297(emitter_67300, eventhandler_67302, args_67303) {

var F={procname:"events.emit",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
L1: do {
F.line = 110;
var fn_67402 = null;
F.line = 3495;
var HEX3Atmp_67404 = null;
F.line = 110;
HEX3Atmp_67404 = eventhandler_67302.Field1;
F.line = 3497;
var i_67407 = 0;
F.line = 3498;
var L_67409 = (HEX3Atmp_67404 != null ? HEX3Atmp_67404.length : 0);
L2: do {
F.line = 3499;
L3: while (true) {
if (!(i_67407 < L_67409)) break L3;
F.line = 3500;
fn_67402 = HEX3Atmp_67404[chckIndx(i_67407, 0, HEX3Atmp_67404.length)-0];
fn_67402(args_67303);
i_67407 = addInt(i_67407, 1);
if (!(((HEX3Atmp_67404 != null ? HEX3Atmp_67404.length : 0) == L_67409))) {
failedassertimpl_21239(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
framePtr = F.prev;
}
function emit_67410(emitter_67413, event_67414, args_67415) {

var F={procname:"events.emit",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 114;
var i_67416 = geteventhandler_67250(emitter_67413, event_67414);
if ((0 <= i_67416)) {
emit_67297(emitter_67413, emitter_67413.s[chckIndx(i_67416, 0, emitter_67413.s.length)-0], args_67415);
}

framePtr = F.prev;
}
function hash_58801(x_58803) {

var result_58804 = 0;
var F={procname:"hashes.hash",prev:framePtr,filename:"lib/pure/hashes.nim",line:0};
framePtr = F;
F.line = 109;
result_58804 = x_58803;
framePtr = F.prev;
return result_58804;
}
function isfilled_61465(hcode_61467) {

var result_61468 = false;
var F={procname:"tables.isFilled",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
F.line = 18;
result_61468 = !((hcode_61467 == 0));
framePtr = F.prev;
return result_61468;
}
function nexttry_61601(h_61603, maxhash_61604) {

var result_61605 = 0;
var F={procname:"tables.nextTry",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
F.line = 28;
result_61605 = (addInt(h_61603, 1) & maxhash_61604);
framePtr = F.prev;
return result_61605;
}
function rawget_65460(t_65465, key_65467, hc_65469, hc_65469_Idx) {

var Tmp3;
var result_65470 = 0;
var F={procname:"rawGet.rawGet",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 43;
hc_65469[hc_65469_Idx] = hash_58801(key_65467);
if ((hc_65469[hc_65469_Idx] == 0)) {
F.line = 45;
hc_65469[hc_65469_Idx] = 314159265;
}

F.line = 31;
var h_65472 = (hc_65469[hc_65469_Idx] & (t_65465.data != null ? (t_65465.data.length-1) : -1));
L1: do {
F.line = 32;
L2: while (true) {
if (!isfilled_61465(t_65465.data[chckIndx(h_65472, 0, t_65465.data.length)-0].Field0)) break L2;
if (!(t_65465.data[chckIndx(h_65472, 0, t_65465.data.length)-0].Field0 == hc_65469[hc_65469_Idx])) Tmp3 = false; else {Tmp3 = (t_65465.data[chckIndx(h_65472, 0, t_65465.data.length)-0].Field1 == key_65467); }if (Tmp3) {
F.line = 38;
result_65470 = h_65472;
break BeforeRet;
}

F.line = 39;
h_65472 = nexttry_61601(h_65472, (t_65465.data != null ? (t_65465.data.length-1) : -1));
}
} while(false);
F.line = 75;
result_65470 = subInt(-1, h_65472);
} while (false); 
framePtr = F.prev;
return result_65470;
}
function HEX5BHEX5D_65630(t_65636, key_65638) {

var result_65639 = 0;
var F={procname:"[].[]",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
framePtr = F;
F.line = 146;
var hc_65641 = [0];
F.line = 147;
var index_65643 = rawget_65460(t_65636, key_65638, hc_65641, 0);
if ((0 <= index_65643)) {
F.line = 148;
result_65639 = t_65636.data[chckIndx(index_65643, 0, t_65636.data.length)-0].Field2;
}
else {
F.line = 151;
F.line = 2559;
var e_65803 = null;
e_65803 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null};
F.line = 2561;
e_65803.message = nimCopy(null, (makeNimstrLit("key not found: ").slice(0,-1)).concat(cstrToNimstr((key_65638)+"")), NTI138);
raiseException(e_65803, "KeyError");
}

framePtr = F.prev;
return result_65639;
}
function tojskc_65625(k_65627) {

var result_65628 = 0;
var F={procname:"keymap.toJSKC",prev:framePtr,filename:"keymap.nim",line:0};
framePtr = F;
F.line = 231;
result_65628 = HEX5BHEX5D_65630({data: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 260, Field1: 260, Field2: 55}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 8, Field1: 8, Field2: 54}, {Field0: 9, Field1: 9, Field2: 53}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 13, Field1: 13, Field2: 52}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 16, Field1: 16, Field2: 112}, {Field0: 17, Field1: 17, Field2: 113}, {Field0: 18, Field1: 18, Field2: 114}, {Field0: 19, Field1: 19, Field2: 69}, {Field0: 20, Field1: 20, Field2: 65}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 27, Field1: 27, Field2: 51}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 32, Field1: 32, Field2: 1}, {Field0: 33, Field1: 33, Field2: 61}, {Field0: 34, Field1: 34, Field2: 62}, {Field0: 35, Field1: 35, Field2: 64}, {Field0: 36, Field1: 36, Field2: 63}, {Field0: 37, Field1: 37, Field2: 58}, {Field0: 38, Field1: 38, Field2: 60}, {Field0: 39, Field1: 39, Field2: 57}, {Field0: 40, Field1: 40, Field2: 59}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 44, Field1: 44, Field2: 68}, {Field0: 45, Field1: 45, Field2: 4}, {Field0: 46, Field1: 46, Field2: 56}, {Field0: 47, Field1: 47, Field2: 6}, {Field0: 48, Field1: 48, Field2: 7}, {Field0: 49, Field1: 49, Field2: 8}, {Field0: 50, Field1: 50, Field2: 9}, {Field0: 51, Field1: 51, Field2: 10}, {Field0: 52, Field1: 52, Field2: 11}, {Field0: 53, Field1: 53, Field2: 12}, {Field0: 54, Field1: 54, Field2: 13}, {Field0: 55, Field1: 55, Field2: 14}, {Field0: 56, Field1: 56, Field2: 15}, {Field0: 57, Field1: 57, Field2: 16}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 59, Field1: 59, Field2: 17}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 61, Field1: 61, Field2: 18}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 65, Field1: 65, Field2: 19}, {Field0: 66, Field1: 66, Field2: 20}, {Field0: 67, Field1: 67, Field2: 21}, {Field0: 68, Field1: 68, Field2: 22}, {Field0: 69, Field1: 69, Field2: 23}, {Field0: 70, Field1: 70, Field2: 24}, {Field0: 71, Field1: 71, Field2: 25}, {Field0: 72, Field1: 72, Field2: 26}, {Field0: 73, Field1: 73, Field2: 27}, {Field0: 74, Field1: 74, Field2: 28}, {Field0: 75, Field1: 75, Field2: 29}, {Field0: 76, Field1: 76, Field2: 30}, {Field0: 77, Field1: 77, Field2: 31}, {Field0: 78, Field1: 78, Field2: 32}, {Field0: 79, Field1: 79, Field2: 33}, {Field0: 80, Field1: 80, Field2: 34}, {Field0: 81, Field1: 81, Field2: 35}, {Field0: 82, Field1: 82, Field2: 36}, {Field0: 83, Field1: 83, Field2: 37}, {Field0: 84, Field1: 84, Field2: 38}, {Field0: 85, Field1: 85, Field2: 39}, {Field0: 86, Field1: 86, Field2: 40}, {Field0: 87, Field1: 87, Field2: 41}, {Field0: 88, Field1: 88, Field2: 42}, {Field0: 89, Field1: 89, Field2: 43}, {Field0: 90, Field1: 90, Field2: 44}, {Field0: 91, Field1: 91, Field2: 45}, {Field0: 92, Field1: 92, Field2: 46}, {Field0: 93, Field1: 93, Field2: 47}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 96, Field1: 96, Field2: 95}, {Field0: 97, Field1: 97, Field2: 96}, {Field0: 98, Field1: 98, Field2: 97}, {Field0: 99, Field1: 99, Field2: 98}, {Field0: 100, Field1: 100, Field2: 99}, {Field0: 101, Field1: 101, Field2: 100}, {Field0: 102, Field1: 102, Field2: 101}, {Field0: 103, Field1: 103, Field2: 102}, {Field0: 104, Field1: 104, Field2: 103}, {Field0: 105, Field1: 105, Field2: 104}, {Field0: 106, Field1: 106, Field2: 107}, {Field0: 107, Field1: 107, Field2: 109}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 109, Field1: 109, Field2: 108}, {Field0: 110, Field1: 110, Field2: 105}, {Field0: 111, Field1: 111, Field2: 106}, {Field0: 112, Field1: 112, Field2: 70}, {Field0: 113, Field1: 113, Field2: 71}, {Field0: 114, Field1: 114, Field2: 72}, {Field0: 115, Field1: 115, Field2: 73}, {Field0: 116, Field1: 116, Field2: 74}, {Field0: 117, Field1: 117, Field2: 75}, {Field0: 118, Field1: 118, Field2: 76}, {Field0: 119, Field1: 119, Field2: 77}, {Field0: 120, Field1: 120, Field2: 78}, {Field0: 121, Field1: 121, Field2: 79}, {Field0: 122, Field1: 122, Field2: 80}, {Field0: 123, Field1: 123, Field2: 81}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 144, Field1: 144, Field2: 67}, {Field0: 145, Field1: 145, Field2: 66}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 314159265, Field1: 0, Field2: 0}, {Field0: 161, Field1: 161, Field2: 49}, {Field0: 162, Field1: 162, Field2: 50}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], counter: 96}, k_65627);
framePtr = F.prev;
return result_65628;
}
function initevents_67601() {

function keyev_67604(e_67607) {

var F={procname:"initEvents.keyev",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
emit_67410(result_67603[0], makeNimstrLit("keyEv"), {kind: 0, key: tojskc_65625(e_67607.keyCode), mods: 0, button: 0, kmods: 0, dt: 0.0});
framePtr = F.prev;
}
function mouseev_67611(e_67614) {

var F={procname:"initEvents.mouseev",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
emit_67410(result_67603[0], makeNimstrLit("mouseEv"), {kind: 1, button: 0, key: 0, mods: 0, kmods: 0, dt: 0.0});
framePtr = F.prev;
}
var result_67603 = [{s: null}];
var F={procname:"events.initEvents",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 144;
nimCopy(result_67603[0], initeventemitter_67418(), NTI67031);
document.addEventListener("keypress", keyev_67604, true);
document.addEventListener("click", mouseev_67611, true);
framePtr = F.prev;
return result_67603[0];
}
function getcontextwebgl_28102(c_28104) {

var result_28105 = null;
var F={procname:"webgl.getContextWebGL",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 318;
result_28105 = c_28104.getContext('webgl') || c_28104.getContext('experimental-webgl');framePtr = F.prev;
return result_28105;
}
function initwindow_68206() {

var result_68208 = {ctx: null, width: 0, height: 0};
var F={procname:"windows.initWindow",prev:framePtr,filename:"windows.nim",line:0};
framePtr = F;
F.line = 18;
var canvas_68209 = document.getElementById("niwe-canvas");
F.line = 20;
result_68208.ctx = getcontextwebgl_28102(canvas_68209);
F.line = 21;
result_68208.width = canvas_68209.width;
F.line = 22;
result_68208.height = canvas_68209.height;
F.line = 23;
console.log(result_68208.width,result_68208.height);framePtr = F.prev;
return result_68208;
}
function resize_28122(canvas_28124) {

var Tmp1;
var F={procname:"webgl.resize",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
if (!((canvas_28124.width == canvas_28124.clientWidth))) Tmp1 = true; else {Tmp1 = !((canvas_28124.height == canvas_28124.clientHeight)); }if (Tmp1) {
F.line = 332;
canvas_28124.width = canvas_28124.clientWidth;
F.line = 333;
canvas_28124.height = canvas_28124.clientHeight;
}

framePtr = F.prev;
}
function getstatus_28112(gl_28114, what_28115) {

var result_28116 = false;
var F={procname:"webgl.getStatus",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 323;
result_28116 = gl_28114.getShaderParameter(what_28115, gl_28114.COMPILE_STATUS);framePtr = F.prev;
return result_28116;
}
function shader_50077(gl_50079, typ_50080, src_50081) {

var result_50082 = {source: null, s: null, kind: 0};
var F={procname:"gl.shader",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
if ((typ_50080 == 1)) {
F.line = 43;
result_50082.s = gl_50079.createShader(35633);
}
else {
if ((typ_50080 == 0)) {
F.line = 45;
result_50082.s = gl_50079.createShader(35632);
}
else {
console.log("Unknown Shader Type");
}
}
gl_50079.shaderSource(result_50082.s, toJSStr(src_50081));
gl_50079.compileShader(result_50082.s);
if (!(getstatus_28112(gl_50079, result_50082.s))) {
console.log(gl_50079.getShaderInfoLog(result_50082.s));
}

F.line = 50;
result_50082.kind = typ_50080;
F.line = 51;
result_50082.source = nimCopy(null, src_50081, NTI138);
framePtr = F.prev;
return result_50082;
}
function getstatus_28117(gl_28119, what_28120) {

var result_28121 = false;
var F={procname:"webgl.getStatus",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 325;
result_28121 = gl_28119.getProgramParameter(what_28120, gl_28119.LINK_STATUS);framePtr = F.prev;
return result_28121;
}
function program_50107(gl_50109, useit_50110, vertexsrc_50111, fragmentsrc_50112) {

var result_50113 = {p: null, vertex: {source: null, s: null, kind: 0}, fragment: {source: null, s: null, kind: 0}, colors: null, attributes: null};
var F={procname:"gl.program",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 56;
var program_50114 = gl_50109.createProgram();
F.line = 57;
var vs_50115 = shader_50077(gl_50109, 1, vertexsrc_50111);
F.line = 58;
var fs_50116 = shader_50077(gl_50109, 0, fragmentsrc_50112);
gl_50109.attachShader(program_50114, vs_50115.s);
gl_50109.attachShader(program_50114, fs_50116.s);
gl_50109.linkProgram(program_50114);
F.line = 63;
nimCopy(result_50113.vertex, vs_50115, NTI50006);
F.line = 64;
nimCopy(result_50113.fragment, fs_50116, NTI50006);
if (!(getstatus_28117(gl_50109, program_50114))) {
console.log(gl_50109.getProgramInfoLog(program_50114));
F.line = 68;
break BeforeRet;
}

if (useit_50110) {
gl_50109.useProgram(program_50114);
}

F.line = 70;
result_50113.p = program_50114;
} while (false); 
framePtr = F.prev;
return result_50113;
}
function clearwith_50073(gl_50075, color_50076) {

var F={procname:"gl.clearWith",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
gl_50075.clearColor(color_50076.Field0, color_50076.Field1, color_50076.Field2, color_50076.Field3);
gl_50075.clear(16384);
framePtr = F.prev;
}
function initrenderer_55009(gl_55011, clear_55012) {

var result_55013 = {context: null, program: {p: null, vertex: {source: null, s: null, kind: 0}, fragment: {source: null, s: null, kind: 0}, colors: null, attributes: null}, buff: null};
var F={procname:"renderer.initRenderer",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 35;
result_55013.context = gl_55011;
resize_28122(result_55013.context.canvas);
F.line = 37;
nimCopy(result_55013.program, program_50107(result_55013.context, true, makeNimstrLit("attribute vec4 aPosition;\x0Auniform mat4 uMatrix;\x0Avoid main() {\x0A  gl_Position = uMatrix*aPosition;\x0A}\x0A"), makeNimstrLit("#ifdef GL_ES\x0A  precision highp float;\x0A#endif\x0A\x0Auniform vec4 uColor;\x0Avoid main() {\x0A  gl_FragColor = uColor;\x0A}\x0A")), NTI50011);
clearwith_50073(result_55013.context, clear_55012);
F.line = 39;
result_55013.buff = result_55013.context.createBuffer();
gl_55011.viewport(0, 0, gl_55011.drawingBufferWidth, gl_55011.drawingBufferHeight);
framePtr = F.prev;
return result_55013;
}
function polygon_54077(x_54079, y_54080, sides_54081, boundingcircleradius_54082, filled_54083, color_54084) {

var result_54085 = {m_type: NTI54035, sides: 0, bcradius: 0.0, filled: false, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"primitives.polygon",prev:framePtr,filename:"primitives.nim",line:0};
framePtr = F;
if (!((3 <= sides_54081))) {
raiseassert_21216(makeNimstrLit("\x0A  3 <= sides "));
}

F.line = 76;
nimCopy(result_54085.color, color_54084, NTI29003);
F.line = 77;
nimCopy(result_54085.pos, {Field0: x_54079, Field1: y_54080}, NTI54005);
F.line = 78;
result_54085.sides = sides_54081;
F.line = 79;
result_54085.bcradius = boundingcircleradius_54082;
F.line = 80;
result_54085.filled = filled_54083;
F.line = 81;
result_54085.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_54085;
}
function rect_54039(x_54041, y_54042, w_54043, h_54044, color_54045, centered_54046) {

var result_54047 = {m_type: NTI54017, size: {Field0: 0.0, Field1: 0.0}, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"primitives.rect",prev:framePtr,filename:"primitives.nim",line:0};
framePtr = F;
F.line = 40;
nimCopy(result_54047.color, color_54045, NTI29003);
F.line = 41;
nimCopy(result_54047.pos, {Field0: x_54041, Field1: y_54042}, NTI54005);
F.line = 42;
nimCopy(result_54047.size, {Field0: w_54043, Field1: h_54044}, NTI54018);
F.line = 44;
result_54047.scale = 1.0000000000000000e+00;
F.line = 45;
result_54047.centered = centered_54046;
framePtr = F.prev;
return result_54047;
}
function circle_54061(x_54063, y_54064, r_54065, color_54066) {

var result_54067 = {m_type: NTI54029, radius: 0.0, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"primitives.circle",prev:framePtr,filename:"primitives.nim",line:0};
framePtr = F;
F.line = 56;
nimCopy(result_54067.color, color_54066, NTI29003);
F.line = 57;
nimCopy(result_54067.pos, {Field0: x_54063, Field1: y_54064}, NTI54005);
F.line = 58;
result_54067.radius = r_54065;
F.line = 59;
result_54067.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_54067;
}
function disk_54069(x_54071, y_54072, r_54073, color_54074) {

var result_54075 = {m_type: NTI54032, radius: 0.0, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"primitives.disk",prev:framePtr,filename:"primitives.nim",line:0};
framePtr = F;
F.line = 62;
nimCopy(result_54075.color, color_54074, NTI29003);
F.line = 63;
nimCopy(result_54075.pos, {Field0: x_54071, Field1: y_54072}, NTI54005);
F.line = 64;
result_54075.radius = r_54073;
F.line = 65;
result_54075.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_54075;
}
function box_54050(x_54052, y_54053, w_54054, h_54055, color_54056, centered_54057) {

var result_54058 = {m_type: NTI54023, size: {Field0: 0.0, Field1: 0.0}, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"primitives.box",prev:framePtr,filename:"primitives.nim",line:0};
framePtr = F;
F.line = 48;
nimCopy(result_54058.color, color_54056, NTI29003);
F.line = 49;
nimCopy(result_54058.pos, {Field0: x_54052, Field1: y_54053}, NTI54005);
F.line = 51;
nimCopy(result_54058.size, {Field0: w_54054, Field1: h_54055}, NTI54024);
F.line = 52;
result_54058.scale = 1.0000000000000000e+00;
F.line = 53;
result_54058.centered = centered_54057;
framePtr = F.prev;
return result_54058;
}
function initeventhandler_67044(name_67046) {

var result_67047 = {Field0: null, Field1: null};
var F={procname:"events.initEventHandler",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 68;
result_67047.Field1 = nimCopy(null, [], NTI67063);
F.line = 69;
result_67047.Field0 = nimCopy(null, name_67046, NTI138);
framePtr = F.prev;
return result_67047;
}
function addhandler_67064(handler_67067, fn_67071) {

var F={procname:"events.addHandler",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
if (handler_67067.Field1 != null) { handler_67067.Field1.push(fn_67071); } else { handler_67067.Field1 = [fn_67071]; };
framePtr = F.prev;
}
function on_67274(emitter_67277, event_67278, fn_67282) {

var F={procname:"events.on",prev:framePtr,filename:"events.nim",line:0};
framePtr = F;
F.line = 99;
var i_67283 = geteventhandler_67250(emitter_67277, event_67278);
if ((i_67283 < 0)) {
F.line = 101;
var eh_67284 = /**/[initeventhandler_67044(event_67278)];
addhandler_67064(eh_67284[0], fn_67282);
if (emitter_67277.s != null) { emitter_67277.s.push(eh_67284[0]); } else { emitter_67277.s = [eh_67284[0]]; };
}
else {
addhandler_67064(emitter_67277.s[chckIndx(i_67283, 0, emitter_67277.s.length)-0], fn_67282);
}

framePtr = F.prev;
}
function HEX2BHEX3D_45704(x_45709, x_45709_Idx, y_45711) {

var F={procname:"+=.+=",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 3392;
x_45709[x_45709_Idx] = (x_45709[x_45709_Idx] + y_45711);
framePtr = F.prev;
}
function HEX2BHEX3D_57141(lf_57147, rg_57151) {

var F={procname:"renderer.+=",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
HEX2BHEX3D_45704(lf_57147, "Field0", rg_57151["Field0"]);
HEX2BHEX3D_45704(lf_57147, "Field1", rg_57151["Field1"]);
framePtr = F.prev;
}
function extractprogram_50061(program_50063) {

var result_50064 = null;
var F={procname:"gl.extractProgram",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
F.line = 26;
result_50064 = program_50063.p;
framePtr = F.prev;
return result_50064;
}
function HEX5BHEX5DHEX3D_52412(m_52449, i_52451, j_52453, val_52455) {

var F={procname:"[]=.[]=",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((i_52451 < 4))) {
failedassertimpl_21239(makeNimstrLit("i < N Row index out of bounds"));
}

if (!((j_52453 < 4))) {
failedassertimpl_21239(makeNimstrLit("j < M Column index out of bounds"));
}

F.line = 32;
m_52449.data[chckIndx(addInt(mulInt(i_52451, 4), j_52453), 0, m_52449.data.length)-0] = val_52455;
framePtr = F.prev;
}
function low_56402(v_56406) {

var result_56407 = 0;
var F={procname:"low.low",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 84;
result_56407 = 0;
framePtr = F.prev;
return result_56407;
}
function high_56416(v_56420) {

var result_56421 = 0;
var F={procname:"high.high",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 85;
result_56421 = 3;
framePtr = F.prev;
return result_56421;
}
function HEX5BHEX5D_56440(v_56446, i_56448) {

var result_56449 = 0.0;
var F={procname:"[].[]",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 49;
result_56449 = v_56446.data[chckIndx(i_56448, 0, v_56446.data.length)-0];
framePtr = F.prev;
return result_56449;
}
function HEX5BHEX5D_56451(v_56457, i_56459) {

var result_56460 = 0.0;
var F={procname:"[].[]",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 49;
result_56460 = v_56457.data[chckIndx(i_56459, 0, v_56457.data.length)-0];
framePtr = F.prev;
return result_56460;
}
function dot_56217(v_56254, w_56289) {

var result_56290 = [0.0];
var F={procname:"dot.dot",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
L1: do {
F.line = 121;
var i_56438 = 0;
F.line = 1926;
var HEX3Atmp_56472 = 0;
F.line = 1926;
var HEX3Atmp_56473 = 0;
F.line = 121;
HEX3Atmp_56472 = low_56402(v_56254);
F.line = 121;
HEX3Atmp_56473 = high_56416(v_56254);
F.line = 1908;
var res_56476 = HEX3Atmp_56472;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_56476 <= HEX3Atmp_56473)) break L3;
F.line = 1910;
i_56438 = res_56476;
HEX2BHEX3D_45704(result_56290, 0, (HEX5BHEX5D_56440(v_56254, i_56438) * HEX5BHEX5D_56451(w_56289, i_56438)));
res_56476 = addInt(res_56476, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_56290[0];
}
function row_55422(m_55458, r_55460) {

var result_55494 = {data: null, p: [null, 0]};
var F={procname:"row.row",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((r_55460 < 4))) {
failedassertimpl_21239(makeNimstrLit("r < N The matrix has less rows than the requested row index"));
}

result_55494.data = new Float64Array(4);
L1: do {
F.line = 94;
var i_55810 = 0;
F.line = 3689;
var i_55814 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_55814 < 4)) break L3;
F.line = 3691;
i_55810 = i_55814;
F.line = 94;
result_55494.data[chckIndx(i_55810, 0, result_55494.data.length)-0] = m_55458.data[chckIndx(addInt(mulInt(r_55460, 4), i_55810), 0, m_55458.data.length)-0];
i_55814 = addInt(i_55814, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_55494;
}
function col_55817(m_55853, c_55855) {

var result_55889 = {data: null, p: [null, 0]};
var F={procname:"col.col",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((c_55855 < 4))) {
failedassertimpl_21239(makeNimstrLit("c < M The matrix has less cols than the requested col index"));
}

result_55889.data = new Float64Array(4);
L1: do {
F.line = 107;
var i_56210 = 0;
F.line = 3689;
var i_56214 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_56214 < 4)) break L3;
F.line = 3691;
i_56210 = i_56214;
F.line = 107;
result_55889.data[chckIndx(i_56210, 0, result_55889.data.length)-0] = m_55853.data[chckIndx(addInt(mulInt(i_56210, 4), c_55855), 0, m_55853.data.length)-0];
i_56214 = addInt(i_56214, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_55889;
}
function matmul_55053(m_55090, w_55123) {

var result_55155 = [{data: null}];
var F={procname:"matMul.matMul",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
result_55155[0].data = new Float64Array(16);
L1: do {
F.line = 128;
var r_55410 = 0;
F.line = 3689;
var i_56534 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_56534 < 4)) break L3;
F.line = 3691;
r_55410 = i_56534;
L4: do {
F.line = 129;
var c_55420 = 0;
F.line = 3689;
var i_56530 = 0;
L5: do {
F.line = 3690;
L6: while (true) {
if (!(i_56530 < 4)) break L6;
F.line = 3691;
c_55420 = i_56530;
HEX5BHEX5DHEX3D_52412(result_55155[0], r_55410, c_55420, dot_56217(row_55422(m_55090, r_55410), col_55817(w_55123, c_55420)));
i_56530 = addInt(i_56530, 1);
}
} while(false);
} while(false);
i_56534 = addInt(i_56534, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_55155[0];
}
function raiseRangeError() {

var e_13268 = null;
e_13268 = {m_type: NTI3456, parent: null, name: null, message: null, trace: null};
e_13268.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
raiseException(e_13268, "RangeError");
}
function tomatrix_51205(arr_51225) {

var result_51263 = {data: null};
var F={procname:"toMatrix.toMatrix",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
result_51263.data = new Float64Array(16);
if (!(true)) {
failedassertimpl_21239(makeNimstrLit("\x0A  true "));
}

if (false) {
L1: do {
F.line = 63;
var i_51814 = 0;
F.line = 1908;
var res_51818 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_51818 <= 15)) break L3;
F.line = 1910;
i_51814 = chckRange(res_51818, 0, 15);
F.line = 63;
result_51263.data[chckIndx(i_51814, 0, result_51263.data.length)-0] = arr_51225[chckIndx(i_51814, 0, arr_51225.length)-0];
res_51818 = addInt(res_51818, 1);
}
} while(false);
} while(false);
}
else {
F.line = 65;
nimCopy(result_51263.data, arr_51225, NTI51212);
}

framePtr = F.prev;
return result_51263;
}
function translation_51876(x_51882, y_51884, z_51886) {

var Tmp1;
var result_51920 = {data: null};
var F={procname:"translation.translation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
if (!true) Tmp1 = false; else {Tmp1 = true; }if (!(Tmp1)) {
raiseassert_21216(makeNimstrLit("\x0A  true and true be careful with implicit conversions from int to float"));
}

F.line = 24;
var resarr_51923 = new Float64Array(16);
F.line = 25;
resarr_51923[0] = 1.0000000000000000e+00;
F.line = 26;
resarr_51923[5] = 1.0000000000000000e+00;
F.line = 27;
resarr_51923[10] = 1.0000000000000000e+00;
F.line = 33;
resarr_51923[12] = x_51882;
F.line = 34;
resarr_51923[13] = y_51884;
F.line = 35;
resarr_51923[14] = z_51886;
F.line = 36;
resarr_51923[15] = 1.0000000000000000e+00;
F.line = 38;
nimCopy(result_51920, tomatrix_51205(resarr_51923), NTI51234);
framePtr = F.prev;
return result_51920;
}
function translation_51865(x_51867, y_51868, z_51869) {

var result_51873 = {data: null};
var F={procname:"graphic.translation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
F.line = 42;
nimCopy(result_51873, translation_51876(x_51867, y_51868, z_51869), NTI51891);
framePtr = F.prev;
return result_51873;
}
function HEX2F_20407(x_20409, y_20410) {

var result_20411 = 0.0;
var F={procname:"system./",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 3241;
result_20411 = (x_20409 / y_20410);
framePtr = F.prev;
return result_20411;
}
function scaling_53107(w_53113, h_53115) {

var Tmp1;
var result_53149 = {data: null};
var F={procname:"scaling.scaling",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
if (!true) Tmp1 = false; else {Tmp1 = true; }if (!(Tmp1)) {
raiseassert_21216(makeNimstrLit("\x0A  true and true be careful with implicit conversions from int to float"));
}

F.line = 69;
var resarr_53152 = new Float64Array(16);
F.line = 70;
resarr_53152[0] = (1.0000000000000000e+00 / w_53113);
F.line = 71;
resarr_53152[5] = (1.0000000000000000e+00 / h_53115);
F.line = 72;
resarr_53152[10] = 0.0;
F.line = 74;
resarr_53152[10] = 1.0000000000000000e+00;
F.line = 75;
resarr_53152[15] = 1.0000000000000000e+00;
F.line = 77;
nimCopy(result_53149, tomatrix_51205(resarr_53152), NTI51234);
framePtr = F.prev;
return result_53149;
}
function scaling_53097(w_53099, h_53100) {

var result_53104 = {data: null};
var F={procname:"graphic.scaling",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
F.line = 81;
nimCopy(result_53104, scaling_53107(w_53099, h_53100), NTI53120);
framePtr = F.prev;
return result_53104;
}
function tof32a_50022(m_50058) {

var result_50059 = null;
var F={procname:"gl.toF32A",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
F.line = 24;
var am_50060 = nimCopy(null, m_50058.data, NTI50046);
F.line = 25;
result_50059 = new Float32Array(am_50060);
framePtr = F.prev;
return result_50059;
}
function setmatrixunif_55041(eng_55043, rend_55044, uniform_55045) {

var F={procname:"renderer.setMatrixUnif",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 59;
var w_55046 = eng_55043.context.drawingBufferWidth;
F.line = 60;
var h_55047 = eng_55043.context.drawingBufferHeight;
F.line = 62;
var umatloc_55048 = eng_55043.context.getUniformLocation(extractprogram_50061(eng_55043.program), toJSStr(uniform_55045));
F.line = 64;
var mat_56750 = matmul_55053(matmul_55053(matmul_55053(translation_51865(rend_55044.pos.Field0, rend_55044.pos.Field1, 0.0), translation_51865(rend_55044.origin.Field0, rend_55044.origin.Field1, 0.0)), translation_51865(HEX2F_20407(negInt(w_55046), 2), HEX2F_20407(negInt(h_55047), 2), 0.0)), scaling_53097(HEX2F_20407(w_55046, 2), HEX2F_20407(h_55047, 2)));
eng_55043.context.uniformMatrix4fv(umatloc_55048, false, tof32a_50022(mat_56750));
framePtr = F.prev;
}
function bufferdata_27918(gl_27920, target_27921, data_27922, usage_27923) {

var F={procname:"webgl.bufferData",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 240;
gl_27920.bufferData(target_27921,data_27922,usage_27923);framePtr = F.prev;
}
function tofloat32array_28087(a_28090) {

var result_28091 = null;
var F={procname:"webgl.toFloat32Array",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 304;
result_28091 = new Float32Array(a_28090);framePtr = F.prev;
return result_28091;
}
function uploadvertices_50153(gl_50155, buff_50156, vertices_50158, drawmode_50159) {

var F={procname:"gl.uploadVertices",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
gl_50155.bindBuffer(34962, buff_50156);
bufferdata_27918(gl_50155, 34962, tofloat32array_28087(vertices_50158), drawmode_50159);
gl_50155.bindBuffer(34962, buff_50156);
framePtr = F.prev;
}
function bindcolor_50126(gl_50128, program_50129, colorname_50130, color_50131) {

var F={procname:"gl.bindColor",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
F.line = 82;
var uloc_50132 = gl_50128.getUniformLocation(extractprogram_50061(program_50129), toJSStr(colorname_50130));
gl_50128.uniform4fv(uloc_50132, tofloat32array_28087([color_50131.Field0, color_50131.Field1, color_50131.Field2, color_50131.Field3]));
framePtr = F.prev;
}
function enableattribute_50146(gl_50148, program_50149, attribname_50150, itemsize_50151) {

var F={procname:"gl.enableAttribute",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
F.line = 87;
var aloc_50152 = gl_50148.getAttribLocation(extractprogram_50061(program_50149), toJSStr(attribname_50150));
gl_50148.enableVertexAttribArray(aloc_50152);
gl_50148.vertexAttribPointer(aloc_50152, itemsize_50151, 5126, false, 0, 0);
framePtr = F.prev;
}
function drawtriangles_50160(gl_50162, buff_50163, p_50164, vertices_50166, color_50167, drawmode_50168) {

var F={procname:"gl.drawTriangles",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
uploadvertices_50153(gl_50162, buff_50163, vertices_50166, drawmode_50168);
F.line = 104;
var numvertices_50177 = divInt((vertices_50166 != null ? vertices_50166.length : 0), 4);
bindcolor_50126(gl_50162, p_50164, makeNimstrLit("uColor"), color_50167);
enableattribute_50146(gl_50162, p_50164, makeNimstrLit("aPosition"), 4);
gl_50162.drawArrays(4, 0, numvertices_50177);
gl_50162.flush();
framePtr = F.prev;
}
function drawtriangles_55020(eng_55022, vertices_55024, color_55025, drawmode_55026) {

var F={procname:"renderer.drawTriangles",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
drawtriangles_50160(eng_55022.context, eng_55022.buff, eng_55022.program, vertices_55024, color_55025, drawmode_55026);
framePtr = F.prev;
}
function draw_56791(eng_56793, rect_56794) {

var F={procname:"renderer.draw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
setmatrixunif_55041(eng_56793, rect_56794, makeNimstrLit("uMatrix"));
if (rect_56794.centered) {
F.line = 99;
var hw_56796 = (rect_56794.size.Field0 / 2.0000000000000000e+00);
F.line = 100;
var hh_56798 = (rect_56794.size.Field1 / 2.0000000000000000e+00);
drawtriangles_55020(eng_56793, [-(hw_56796), -(hh_56798), 0.0, (1.0000000000000000e+00 / rect_56794.scale), hw_56796, -(hh_56798), 0.0, (1.0000000000000000e+00 / rect_56794.scale), -(hw_56796), hh_56798, 0.0, (1.0000000000000000e+00 / rect_56794.scale), -(hw_56796), hh_56798, 0.0, (1.0000000000000000e+00 / rect_56794.scale), hw_56796, hh_56798, 0.0, (1.0000000000000000e+00 / rect_56794.scale), hw_56796, -(hh_56798), 0.0, (1.0000000000000000e+00 / rect_56794.scale)], rect_56794.color, 35044);
}
else {
drawtriangles_55020(eng_56793, [0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_56794.scale), rect_56794.size.Field0, 0.0, 0.0, (1.0000000000000000e+00 / rect_56794.scale), rect_56794.size.Field0, rect_56794.size.Field1, 0.0, (1.0000000000000000e+00 / rect_56794.scale), rect_56794.size.Field0, rect_56794.size.Field1, 0.0, (1.0000000000000000e+00 / rect_56794.scale), 0.0, rect_56794.size.Field1, 0.0, (1.0000000000000000e+00 / rect_56794.scale), 0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_56794.scale)], rect_56794.color, 35044);
}

framePtr = F.prev;
}
function newseq_56846(len_56850) {

var result_56852 = null;
var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
result_56852 = new Array(len_56850); for (var i=0;i<len_56850;++i) {result_56852[i]=0.0;}framePtr = F.prev;
return result_56852;
}
function drawlineloop_50196(gl_50198, buff_50199, p_50200, vertices_50202, color_50203, drawmode_50204) {

var F={procname:"gl.drawLineLoop",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
uploadvertices_50153(gl_50198, buff_50199, vertices_50202, drawmode_50204);
F.line = 123;
var numvertices_50213 = divInt((vertices_50202 != null ? vertices_50202.length : 0), 4);
bindcolor_50126(gl_50198, p_50200, makeNimstrLit("uColor"), color_50203);
enableattribute_50146(gl_50198, p_50200, makeNimstrLit("aPosition"), 4);
gl_50198.drawArrays(2, 0, numvertices_50213);
gl_50198.flush();
framePtr = F.prev;
}
function drawlineloop_55034(eng_55036, vertices_55038, color_55039, drawmode_55040) {

var F={procname:"renderer.drawLineLoop",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
drawlineloop_50196(eng_55036.context, eng_55036.buff, eng_55036.program, vertices_55038, color_55039, drawmode_55040);
framePtr = F.prev;
}
function draw_56911(eng_56913, circle_56914, roughness_56915) {

var F={procname:"renderer.draw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
setmatrixunif_55041(eng_56913, circle_56914, makeNimstrLit("uMatrix"));
F.line = 143;
var verts_56944 = newseq_56846(chckRange(mulInt(roughness_56915, 4), 0, 2147483647));
L1: do {
F.line = 146;
var i_56964 = 0;
F.line = 1918;
var HEX3Atmp_56979 = 0;
F.line = 146;
HEX3Atmp_56979 = subInt((verts_56944 != null ? verts_56944.length : 0), 1);
F.line = 1908;
var res_56982 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_56982 <= HEX3Atmp_56979)) break L3;
F.line = 1910;
i_56964 = res_56982;
F.line = 147;
verts_56944[chckIndx(i_56964, 0, verts_56944.length)-0] = (circle_56914.radius * Math.cos(((i_56964 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * roughness_56915))));
F.line = 148;
verts_56944[chckIndx(addInt(i_56964, 1), 0, verts_56944.length)-0] = (circle_56914.radius * Math.sin(((i_56964 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * roughness_56915))));
F.line = 149;
verts_56944[chckIndx(addInt(i_56964, 2), 0, verts_56944.length)-0] = 0.0;
F.line = 150;
verts_56944[chckIndx(addInt(i_56964, 3), 0, verts_56944.length)-0] = (1.0000000000000000e+00 / circle_56914.scale);
res_56982 = addInt(res_56982, 4);
}
} while(false);
} while(false);
drawlineloop_55034(eng_56913, verts_56944, circle_56914.color, 35044);
framePtr = F.prev;
}
function drawtrianglefan_50178(gl_50180, buff_50181, p_50182, vertices_50184, color_50185, drawmode_50186) {

var F={procname:"gl.drawTriangleFan",prev:framePtr,filename:"gl.nim",line:0};
framePtr = F;
uploadvertices_50153(gl_50180, buff_50181, vertices_50184, drawmode_50186);
F.line = 113;
var numvertices_50195 = divInt((vertices_50184 != null ? vertices_50184.length : 0), 4);
bindcolor_50126(gl_50180, p_50182, makeNimstrLit("uColor"), color_50185);
enableattribute_50146(gl_50180, p_50182, makeNimstrLit("aPosition"), 4);
gl_50180.drawArrays(6, 0, numvertices_50195);
gl_50180.flush();
framePtr = F.prev;
}
function drawtrianglefan_55027(eng_55029, vertices_55031, color_55032, drawmode_55033) {

var F={procname:"renderer.drawTriangleFan",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
drawtrianglefan_50178(eng_55029.context, eng_55029.buff, eng_55029.program, vertices_55031, color_55032, drawmode_55033);
framePtr = F.prev;
}
function draw_56828(eng_56830, circle_56831, roughness_56832) {

var F={procname:"renderer.draw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
setmatrixunif_55041(eng_56830, circle_56831, makeNimstrLit("uMatrix"));
F.line = 127;
var verts_56871 = newseq_56846(chckRange(addInt(4, mulInt(mulInt(roughness_56832, 4), 2)), 0, 2147483647));
F.line = 130;
verts_56871[3] = (1.0000000000000000e+00 / circle_56831.scale);
L1: do {
F.line = 132;
var i_56892 = 0;
F.line = 1918;
var HEX3Atmp_56904 = 0;
F.line = 132;
HEX3Atmp_56904 = subInt((verts_56871 != null ? verts_56871.length : 0), 1);
F.line = 1908;
var res_56907 = 4;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_56907 <= HEX3Atmp_56904)) break L3;
F.line = 1910;
i_56892 = res_56907;
F.line = 133;
verts_56871[chckIndx(i_56892, 0, verts_56871.length)-0] = (circle_56831.radius * Math.cos((((HEX2F_20407(i_56892, 4) * 2.0000000000000000e+00) * 3.1415926535897931e+00) / roughness_56832)));
F.line = 134;
verts_56871[chckIndx(addInt(i_56892, 1), 0, verts_56871.length)-0] = (circle_56831.radius * Math.sin((((HEX2F_20407(i_56892, 4) * 2.0000000000000000e+00) * 3.1415926535897931e+00) / roughness_56832)));
F.line = 135;
verts_56871[chckIndx(addInt(i_56892, 2), 0, verts_56871.length)-0] = 0.0;
F.line = 136;
verts_56871[chckIndx(addInt(i_56892, 3), 0, verts_56871.length)-0] = (1.0000000000000000e+00 / circle_56831.scale);
res_56907 = addInt(res_56907, 4);
}
} while(false);
} while(false);
drawtrianglefan_55027(eng_56830, verts_56871, circle_56831.color, 35044);
framePtr = F.prev;
}
function draw_56986(eng_56988, pol_56989) {

var F={procname:"renderer.draw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
setmatrixunif_55041(eng_56988, pol_56989, makeNimstrLit("uMatrix"));
if (pol_56989.filled) {
F.line = 160;
var verts_57018 = newseq_56846(chckRange(addInt(8, mulInt(pol_56989.sides, 4)), 0, 2147483647));
F.line = 163;
verts_57018[3] = (1.0000000000000000e+00 / pol_56989.scale);
L1: do {
F.line = 166;
var i_57039 = 0;
F.line = 1918;
var HEX3Atmp_57107 = 0;
F.line = 166;
HEX3Atmp_57107 = subInt((verts_57018 != null ? verts_57018.length : 0), 1);
F.line = 1908;
var res_57110 = 4;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_57110 <= HEX3Atmp_57107)) break L3;
F.line = 1910;
i_57039 = res_57110;
F.line = 167;
verts_57018[chckIndx(i_57039, 0, verts_57018.length)-0] = (pol_56989.bcradius * Math.cos(((i_57039 * 3.1415926535897931e+00) / (pol_56989.sides * 2.0000000000000000e+00))));
F.line = 169;
verts_57018[chckIndx(addInt(i_57039, 1), 0, verts_57018.length)-0] = (pol_56989.bcradius * Math.sin(((i_57039 * 3.1415926535897931e+00) / (pol_56989.sides * 2.0000000000000000e+00))));
F.line = 171;
verts_57018[chckIndx(addInt(i_57039, 2), 0, verts_57018.length)-0] = 0.0;
F.line = 172;
verts_57018[chckIndx(addInt(i_57039, 3), 0, verts_57018.length)-0] = (1.0000000000000000e+00 / pol_56989.scale);
res_57110 = addInt(res_57110, 4);
}
} while(false);
} while(false);
drawtrianglefan_55027(eng_56988, verts_57018, pol_56989.color, 35044);
}
else {
F.line = 177;
var verts_57071 = newseq_56846(chckRange(mulInt(pol_56989.sides, 4), 0, 2147483647));
L4: do {
F.line = 180;
var i_57091 = 0;
F.line = 1918;
var HEX3Atmp_57123 = 0;
F.line = 180;
HEX3Atmp_57123 = subInt((verts_57071 != null ? verts_57071.length : 0), 1);
F.line = 1908;
var res_57126 = 0;
L5: do {
F.line = 1909;
L6: while (true) {
if (!(res_57126 <= HEX3Atmp_57123)) break L6;
F.line = 1910;
i_57091 = res_57126;
F.line = 181;
verts_57071[chckIndx(i_57091, 0, verts_57071.length)-0] = (pol_56989.bcradius * Math.cos(((i_57091 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * pol_56989.sides))));
F.line = 182;
verts_57071[chckIndx(addInt(i_57091, 1), 0, verts_57071.length)-0] = (pol_56989.bcradius * Math.sin(((i_57091 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * pol_56989.sides))));
F.line = 183;
verts_57071[chckIndx(addInt(i_57091, 2), 0, verts_57071.length)-0] = 0.0;
F.line = 184;
verts_57071[chckIndx(addInt(i_57091, 3), 0, verts_57071.length)-0] = (1.0000000000000000e+00 / pol_56989.scale);
res_57126 = addInt(res_57126, 4);
}
} while(false);
} while(false);
drawlineloop_55034(eng_56988, verts_57071, pol_56989.color, 35044);
}

framePtr = F.prev;
}
function draw_56754(eng_56756, rect_56757) {

var F={procname:"renderer.draw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
setmatrixunif_55041(eng_56756, rect_56757, makeNimstrLit("uMatrix"));
if (rect_56757.centered) {
F.line = 75;
var hw_56759 = (rect_56757.size.Field0 / 2.0000000000000000e+00);
F.line = 76;
var hh_56761 = (rect_56757.size.Field1 / 2.0000000000000000e+00);
drawlineloop_55034(eng_56756, [-(hw_56759), -(hh_56761), 0.0, (1.0000000000000000e+00 / rect_56757.scale), hw_56759, -(hh_56761), 0.0, (1.0000000000000000e+00 / rect_56757.scale), hw_56759, hh_56761, 0.0, (1.0000000000000000e+00 / rect_56757.scale), -(hw_56759), hh_56761, 0.0, (1.0000000000000000e+00 / rect_56757.scale)], rect_56757.color, 35044);
}
else {
drawlineloop_55034(eng_56756, [0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_56757.scale), rect_56757.size.Field0, 0.0, 0.0, (1.0000000000000000e+00 / rect_56757.scale), rect_56757.size.Field0, rect_56757.size.Field1, 0.0, (1.0000000000000000e+00 / rect_56757.scale), 0.0, rect_56757.size.Field1, 0.0, (1.0000000000000000e+00 / rect_56757.scale)], rect_56757.color, 35044);
}

framePtr = F.prev;
}
function requestanimationframe_28106(fn_28111) {

var F={procname:"webgl.requestAnimationFrame",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 320;
window.requestAnimationFrame(fn_28111);framePtr = F.prev;
}
function innerframedraw_69036(now_69034) {

var F={procname:"renderer.innerframedraw",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
F.line = 199;
dt_69035[0] = (now_69034 - lastt_69032[0]);
emit_67410(evq_69001[0], makeNimstrLit("update"), {dt: dt_69035[0], kind: 0, key: 0, mods: 0, button: 0, kmods: 0});
resize_28122(en_69003[0].context.canvas);
en_69003[0].context.viewport(0, 0, en_69003[0].context.drawingBufferWidth, en_69003[0].context.drawingBufferHeight);
draw_56791(en_69003[0], b_69020[0]);
draw_56911(en_69003[0], c_69014[0], 32);
draw_56828(en_69003[0], d_69017[0], 32);
draw_56986(en_69003[0], p_69010[0]);
draw_56754(en_69003[0], r_69013[0]);
F.line = 201;
lastt_69032[0] = now_69034;
requestanimationframe_28106(innerframedraw_69036);
framePtr = F.prev;
}
function HEX3Aanonymous_69021(e_69023) {

var F={procname:"renderer.:anonymous",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
HEX2BHEX3D_57141(speed_69005[0], accel_69007[0]);
framePtr = F.prev;
}
function HEX3Aanonymous_69026(e_69028) {

var F={procname:"renderer.:anonymous",prev:framePtr,filename:"renderer.nim",line:0};
framePtr = F;
HEX2BHEX3D_57141(p_69010[0].pos, speed_69005[0]);
framePtr = F.prev;
}
var evq_69001 = /**/[initevents_67601()];
var w_69002 = /**/[initwindow_68206()];
var en_69003 = /**/[initrenderer_55009(w_69002[0].ctx, {Field0: 1.0000000000000000e+00, Field1: 1.0000000000000000e+00, Field2: 1.0000000000000000e+00, Field3: 1.0000000000000000e+00})];
var speed_69005 = /**/[{Field0: 0.0, Field1: 0.0}];
var accel_69007 = /**/[{Field0: 2.0000000000000000e+00, Field1: 2.0000000000000000e+00}];
var p_69010 = /**/[polygon_54077(1.0000000000000000e+02, 1.0000000000000000e+02, 5, 1.0000000000000000e+01, true, {Field0: 0.0, Field1: 1.0000000000000000e+00, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var r_69013 = /**/[rect_54039(2.0000000000000000e+02, 2.0000000000000000e+02, 1.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00}, true)];
var c_69014 = /**/[circle_54061(5.0000000000000000e+01, 5.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var d_69017 = /**/[disk_54069(1.5000000000000000e+02, 1.5000000000000000e+02, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var b_69020 = /**/[box_54050(2.5000000000000000e+02, 2.5000000000000000e+02, 1.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00}, true)];
on_67274(evq_69001[0], makeNimstrLit("mouseEv"), HEX3Aanonymous_69021);
on_67274(evq_69001[0], makeNimstrLit("update"), HEX3Aanonymous_69026);
var lastt_69032 = /**/[0.0];
var dt_69035 = /**/[0.0];
innerframedraw_69036(0.0);
