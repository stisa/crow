/* Generated by the Nim Compiler v0.17.1 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI28078 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI28076 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI30402 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI31402 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3458 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI118 = {size: 0,kind: 42,base: null,node: null,finalizer: null};
var NTI67008 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI126 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI67002 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI60002 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI53002 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI60336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI60333 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3450 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3454 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI65024 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI65023 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI65010 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI65624 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3487 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3446.node = NNI3446;
NTI3487.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3487, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3446.base = NTI3424;
var NNI13409 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI13409.node = NNI13409;
NTI65023.base = NTI65024;
var NNI65010 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI65023, name: "Field1", sons: null}]};
NTI65010.node = NNI65010;
NTI65624.base = NTI65010;
var NNI3454 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3454.node = NNI3454;
NTI3454.base = NTI3424;
var NNI3442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3442.node = NNI3442;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3438.base = NTI3424;
NTI3442.base = NTI3438;
var NNI3450 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3450.node = NNI3450;
var NNI3448 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3448.node = NNI3448;
NTI3448.base = NTI3424;
NTI3450.base = NTI3448;
var NNI60002 = {kind: 2, offset: 0, typ: null, name: null, len: 121, sons: {"0": {kind: 1, offset: 0, typ: NTI60002, name: "kUNKNOWN", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI60002, name: "kSPACE", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI60002, name: "kAPOSTROPHE", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI60002, name: "kCOMMA", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI60002, name: "kMINUS", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI60002, name: "kPERIOD", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI60002, name: "kSLASH", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI60002, name: "k0", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI60002, name: "k1", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI60002, name: "k2", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI60002, name: "k3", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI60002, name: "k4", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI60002, name: "k5", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI60002, name: "k6", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI60002, name: "k7", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI60002, name: "k8", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI60002, name: "k9", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI60002, name: "kSEMICOLON", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI60002, name: "kEQUAL", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI60002, name: "kA", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI60002, name: "kB", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI60002, name: "kC", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI60002, name: "kD", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI60002, name: "kE", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI60002, name: "kF", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI60002, name: "kG", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI60002, name: "kH", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI60002, name: "kI", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI60002, name: "kJ", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI60002, name: "kK", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI60002, name: "kL", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI60002, name: "kM", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI60002, name: "kN", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI60002, name: "kO", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI60002, name: "kP", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI60002, name: "kQ", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI60002, name: "kR", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI60002, name: "kS", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI60002, name: "kT", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI60002, name: "kU", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI60002, name: "kV", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI60002, name: "kW", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI60002, name: "kX", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI60002, name: "kY", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI60002, name: "kZ", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI60002, name: "kLEFT_BRACKET", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI60002, name: "kBACKSLASH", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI60002, name: "kRIGHT_BRACKET", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI60002, name: "kGRAVE_ACCENT", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI60002, name: "kWORLD_1", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI60002, name: "kWORLD_2", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI60002, name: "kESCAPE", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI60002, name: "kENTER", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI60002, name: "kTAB", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI60002, name: "kBACKSPACE", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI60002, name: "kINSERT", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI60002, name: "kDELETE", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI60002, name: "kRIGHT", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI60002, name: "kLEFT", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI60002, name: "kDOWN", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI60002, name: "kUP", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI60002, name: "kPAGE_UP", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI60002, name: "kPAGE_DOWN", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI60002, name: "kHOME", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI60002, name: "kEND", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI60002, name: "kCAPS_LOCK", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI60002, name: "kSCROLL_LOCK", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI60002, name: "kNUM_LOCK", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI60002, name: "kPRINT_SCREEN", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI60002, name: "kPAUSE", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI60002, name: "kF1", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI60002, name: "kF2", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI60002, name: "kF3", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI60002, name: "kF4", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI60002, name: "kF5", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI60002, name: "kF6", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI60002, name: "kF7", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI60002, name: "kF8", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI60002, name: "kF9", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI60002, name: "kF10", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI60002, name: "kF11", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI60002, name: "kF12", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI60002, name: "kF13", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI60002, name: "kF14", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI60002, name: "kF15", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI60002, name: "kF16", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI60002, name: "kF17", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI60002, name: "kF18", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI60002, name: "kF19", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI60002, name: "kF20", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI60002, name: "kF21", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI60002, name: "kF22", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI60002, name: "kF23", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI60002, name: "kF24", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI60002, name: "kF25", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI60002, name: "kKP_0", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI60002, name: "kKP_1", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI60002, name: "kKP_2", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI60002, name: "kKP_3", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI60002, name: "kKP_4", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI60002, name: "kKP_5", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI60002, name: "kKP_6", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI60002, name: "kKP_7", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI60002, name: "kKP_8", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI60002, name: "kKP_9", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI60002, name: "kKP_DECIMAL", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI60002, name: "kKP_DIVIDE", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI60002, name: "kKP_MULTIPLY", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI60002, name: "kKP_SUBTRACT", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI60002, name: "kKP_ADD", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI60002, name: "kKP_ENTER", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI60002, name: "kKP_EQUAL", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI60002, name: "kLEFT_SHIFT", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI60002, name: "kLEFT_CONTROL", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI60002, name: "kLEFT_ALT", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI60002, name: "kLEFT_SUPER", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI60002, name: "kRIGHT_SHIFT", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI60002, name: "kRIGHT_CONTROL", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI60002, name: "kRIGHT_ALT", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI60002, name: "kRIGHT_SUPER", len: 0, sons: null}, 
"120": {kind: 1, offset: 120, typ: NTI60002, name: "kMENU", len: 0, sons: null}}};
NTI60002.node = NNI60002;
var NNI60336 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI53002, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI60002, name: "Field2", sons: null}]};
NTI60336.node = NNI60336;
NTI60333.base = NTI60336;
NTI67002.base = NTI126;
NTI67008.base = NTI118;
var NNI3458 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3458.node = NNI3458;
NTI3458.base = NTI3424;
var NNI30402 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI30402, name: "skNone", len: 0, sons: null}, 
"35632": {kind: 1, offset: 35632, typ: NTI30402, name: "skFragment", len: 0, sons: null}, 
"35633": {kind: 1, offset: 35633, typ: NTI30402, name: "skVertex", len: 0, sons: null}}};
NTI30402.node = NNI30402;
var NNI28078 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI28078.node = NNI28078;
NTI28078.base = NTI3408;
NTI28076.base = NTI28078;
var NNI31402 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "source", len: 0, typ: NTI138, name: "source", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI30402, name: "kind", sons: null}, 
{kind: 1, offset: "s", len: 0, typ: NTI28076, name: "s", sons: null}]};
NTI31402.node = NNI31402;

function cstrToNimstr(c_14603) {
		  var ln = c_14603.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_14603.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  

	
}

function toJSStr(s_14803) {
		    var len = s_14803.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_14803[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_14803[i] < 128)
        asciiPart[i] = fcc(s_14803[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function setConstr() {
		      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_19617, src_19618, ti_19619) {
	var result_20029 = null;

		switch (ti_19619.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(isFatPointer_19601(ti_19619))) {
			result_20029 = src_19618;
			}
			else {
				result_20029 = [src_19618[0], src_19618[1]];
			}
			
			break;
		case 19:
			      if (dest_19617 === null || dest_19617 === undefined) {
        dest_19617 = {};
      }
      else {
        for (var key in dest_19617) { delete dest_19617[key]; }
      }
      for (var key in src_19618) { dest_19617[key] = src_19618[key]; }
      result_20029 = dest_19617;
    
			break;
		case 18:
		case 17:
			if (!((ti_19619.base == null))) {
			result_20029 = nimCopy(dest_19617, src_19618, ti_19619.base);
			}
			else {
			if ((ti_19619.kind == 17)) {
			result_20029 = (dest_19617 === null || dest_19617 === undefined) ? {m_type: ti_19619} : dest_19617;
			}
			else {
				result_20029 = (dest_19617 === null || dest_19617 === undefined) ? {} : dest_19617;
			}
			}
			nimCopyAux(result_20029, src_19618, ti_19619.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_19618 === null) {
        result_20029 = null;
      }
      else {
        if (dest_19617 === null || dest_19617 === undefined) {
          dest_19617 = new Array(src_19618.length);
        }
        else {
          dest_19617.length = src_19618.length;
        }
        result_20029 = dest_19617;
        for (var i = 0; i < src_19618.length; ++i) {
          result_20029[i] = nimCopy(result_20029[i], src_19618[i], ti_19619.base);
        }
      }
    
			break;
		case 28:
			      if (src_19618 !== null) {
        result_20029 = src_19618.slice(0);
      }
    
			break;
		default: 
			result_20029 = src_19618;
			break;
		}

	return result_20029;

}

function makeNimstrLit(c_14403) {
		    var ln = c_14403.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_14403.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    

	
}

function eqStrings(a_17003, b_17004) {
		    if (a_17003 == b_17004) return true;
    if ((!a_17003) || (!b_17004)) return false;
    var alen = a_17003.length;
    if (alen != b_17004.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_17003[i] != b_17004[i]) return false;
    return true;
  

	
}

function arrayConstr(len_20064, value_20065, typ_20066) {
		      var result = new Array(len_20064);
      for (var i = 0; i < len_20064; ++i) result[i] = nimCopy(null, value_20065, typ_20066);
      return result;
    

	
}

function raiseException(e_13806, ename_13807) {
		e_13806.name = ename_13807;
		if ((excHandler == 0)) {
		unhandledException(e_13806);
		}
		
		e_13806.trace = nimCopy(null, rawWriteStackTrace_13628(), NTI138);
		throw e_13806;

	
}

function chckIndx(i_20203, a_20204, b_20205) {
			var Tmp1;

	var result_20206 = 0;

	BeforeRet: do {
			if (!(a_20204 <= i_20203)) Tmp1 = false; else {				Tmp1 = (i_20203 <= b_20205);			}		if (Tmp1) {
		result_20206 = i_20203;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_20206;

}

function addInt(a_17203, b_17204) {
		      var result = a_17203 + b_17204;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    

	
}

function subInt(a_17403, b_17404) {
		      var result = a_17403 - b_17404;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    

	
}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function chckRange(i_20209, a_20210, b_20211) {
			var Tmp1;

	var result_20212 = 0;

	BeforeRet: do {
			if (!(a_20210 <= i_20209)) Tmp1 = false; else {				Tmp1 = (i_20209 <= b_20211);			}		if (Tmp1) {
		result_20212 = i_20209;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_20212;

}
var ConstSet2 = setConstr(5121, 5123, 5125);
var nimvm_5887 = false;
var nim_program_result = 0;
var globalRaiseHook_11405 = [null];
var localRaiseHook_11410 = [null];
var outOfMemHook_11413 = [null];
var objectID_53232 = [0];

function isFatPointer_19601(ti_19603) {
	var result_19604 = false;

	BeforeRet: do {
		result_19604 = !((ConstSet1[ti_19603.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_19604;

}

function nimCopyAux(dest_19622, src_19623, n_19625) {
		switch (n_19625.kind) {
		case 0:
			break;
		case 1:
			      dest_19622[n_19625.offset] = nimCopy(dest_19622[n_19625.offset], src_19623[n_19625.offset], n_19625.typ);
    
			break;
		case 2:
			L1: do {
				var i_20015 = 0;
				var colontmp__20017 = 0;
				colontmp__20017 = (n_19625.len - 1);
				var res_20020 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_20020 <= colontmp__20017)) break L3;
							i_20015 = res_20020;
							nimCopyAux(dest_19622, src_19623, n_19625.sons[i_20015]);
							res_20020 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_19622[n_19625.offset] = nimCopy(dest_19622[n_19625.offset], src_19623[n_19625.offset], n_19625.typ);
      for (var i = 0; i < n_19625.sons.length; ++i) {
        nimCopyAux(dest_19622, src_19623, n_19625.sons[i][1]);
      }
    
			break;
		}

	
}

function add_11429(x_11432, x_11432_Idx, y_11433) {
		        var len = x_11432[0].length-1;
        for (var i = 0; i < y_11433.length; ++i) {
          x_11432[0][len] = y_11433.charCodeAt(i);
          ++len;
        }
        x_11432[0][len] = 0
      

	
}

function auxWriteStackTrace_13404(f_13406) {
					var Tmp3;

	var result_13407 = [null];

		var it_13415 = f_13406;
		var i_13416 = 0;
		var total_13417 = 0;
		var tempFrames_13421 = arrayConstr(64, {Field0: null, Field1: 0}, NTI13409);
		L1: do {
				L2: while (true) {
					if (!!((it_13415 == null))) Tmp3 = false; else {						Tmp3 = (i_13416 <= 63);					}				if (!Tmp3) break L2;
					tempFrames_13421[i_13416].Field0 = it_13415.procname;
					tempFrames_13421[i_13416].Field1 = it_13415.line;
					i_13416 += 1;
					total_13417 += 1;
					it_13415 = it_13415.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_13415 == null))) break L5;
					total_13417 += 1;
					it_13415 = it_13415.prev;
				}
		} while(false);
		result_13407[0] = nimCopy(null, makeNimstrLit(""), NTI138);
		if (!((total_13417 == i_13416))) {
		if (result_13407[0] != null) { result_13407[0] = (result_13407[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_13407[0] = makeNimstrLit("(");};
		if (result_13407[0] != null) { result_13407[0] = (result_13407[0].slice(0, -1)).concat(cstrToNimstr(((total_13417 - i_13416))+"")); } else { result_13407[0] = cstrToNimstr(((total_13417 - i_13416))+"");};
		if (result_13407[0] != null) { result_13407[0] = (result_13407[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_13407[0] = makeNimstrLit(" calls omitted) ...\x0A");};
		}
		
		L6: do {
			var j_13615 = 0;
			var colontmp__13621 = 0;
			colontmp__13621 = (i_13416 - 1);
			var res_13624 = colontmp__13621;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_13624)) break L8;
						j_13615 = res_13624;
						add_11429(result_13407, 0, tempFrames_13421[j_13615].Field0);
						if ((0 < tempFrames_13421[j_13615].Field1)) {
						if (result_13407[0] != null) { result_13407[0] = (result_13407[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_13407[0] = makeNimstrLit(", line: ");};
						if (result_13407[0] != null) { result_13407[0] = (result_13407[0].slice(0, -1)).concat(cstrToNimstr((tempFrames_13421[j_13615].Field1)+"")); } else { result_13407[0] = cstrToNimstr((tempFrames_13421[j_13615].Field1)+"");};
						}
						
						if (result_13407[0] != null) { result_13407[0] = (result_13407[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_13407[0] = makeNimstrLit("\x0A");};
						res_13624 -= 1;
					}
			} while(false);
		} while(false);

	return result_13407[0];

}

function rawWriteStackTrace_13628() {
	var result_13630 = null;

		if (!((framePtr == null))) {
		result_13630 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxWriteStackTrace_13404(framePtr)), NTI138);
		}
		else {
			result_13630 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_13630;

}

function unhandledException(e_13653) {
			var Tmp1;

		var buf_13654 = [makeNimstrLit("")];
			if (!!(eqStrings(e_13653.message, null))) Tmp1 = false; else {				Tmp1 = !((e_13653.message[0] == 0));			}		if (Tmp1) {
		if (buf_13654[0] != null) { buf_13654[0] = (buf_13654[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_13654[0] = makeNimstrLit("Error: unhandled exception: ");};
		if (buf_13654[0] != null) { buf_13654[0] = (buf_13654[0].slice(0, -1)).concat(e_13653.message); } else { buf_13654[0] = e_13653.message;};
		}
		else {
		if (buf_13654[0] != null) { buf_13654[0] = (buf_13654[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_13654[0] = makeNimstrLit("Error: unhandled exception");};
		}
		
		if (buf_13654[0] != null) { buf_13654[0] = (buf_13654[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_13654[0] = makeNimstrLit(" [");};
		add_11429(buf_13654, 0, e_13653.name);
		if (buf_13654[0] != null) { buf_13654[0] = (buf_13654[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_13654[0] = makeNimstrLit("]\x0A");};
		if (buf_13654[0] != null) { buf_13654[0] = (buf_13654[0].slice(0, -1)).concat(rawWriteStackTrace_13628()); } else { buf_13654[0] = rawWriteStackTrace_13628();};
		var cbuf_13801 = toJSStr(buf_13654[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_13801);
  }
  else {
    throw cbuf_13801;
  }
  

	
}

function sysFatal_22221(message_22227) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"lib\\system.nim",line:0};
	framePtr = F;
		F.line = 2703;
		var e_22229 = null;
		F.line = 2704;
		e_22229 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null};
		F.line = 2705;
		e_22229.message = nimCopy(null, message_22227, NTI138);
		F.line = 2706;
		raiseException(e_22229, "AssertionError");
	framePtr = F.prev;

	
}

function raiseAssert_22216(msg_22218) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"lib\\system.nim",line:0};
	framePtr = F;
		F.line = 3586;
		sysFatal_22221(msg_22218);
	framePtr = F.prev;

	
}

function failedAssertImpl_22239(msg_22241) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"lib\\system.nim",line:0};
	framePtr = F;
		F.line = 3594;
		raiseAssert_22216(msg_22241);
	framePtr = F.prev;

	
}

function getContextWebgl_28964(c_28966) {
	var result_28967 = null;

	var F={procname:"webgl.getContextWebgl",prev:framePtr,filename:"C:\\Users\\stisa\\.nimble\\pkgs\\webgl-#head\\webgl.nim",line:0};
	framePtr = F;
		F.line = 428;
		result_28967 = c_28966.getContext("webgl");
		if ((result_28967 === null)) {
		F.line = 429;
		result_28967 = c_28966.getContext("experimental-webgl");
		}
		
		if (!(!((result_28967 === null)))) {
		F.line = 430;
		failedAssertImpl_22239(makeNimstrLit("not isNil(result) "));
		}
		
	framePtr = F.prev;

	return result_28967;

}

function viewport_32202(gl_32204, x_32205, y_32206, w_32207, h_32208) {
	var F={procname:"ngl.viewport",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		F.line = 137;
		gl_32204.viewport(x_32205, y_32206, w_32207, h_32208);
	framePtr = F.prev;

	
}

function new_65422() {
	var result_65427 = null;

	var F={procname:"new.new",prev:framePtr,filename:"lib\\system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 209;
		var r_65601 = null;
		F.line = 212;
		r_65601 = {s: null};
		F.line = 213;
		result_65427 = r_65601;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_65427;

}

function initEventEmitter_65417() {
	var result_65419 = null;

	var F={procname:"event.initEventEmitter",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\event.nim",line:0};
	framePtr = F;
		F.line = 123;
		result_65419 = new_65422();
		F.line = 124;
		result_65419.s = nimCopy(null, [], NTI65624);
	framePtr = F.prev;

	return result_65419;

}

function raiseIndexError() {
		var e_14294 = null;
		e_14294 = {m_type: NTI3454, parent: null, name: null, message: null, trace: null};
		e_14294.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
		e_14294.parent = null;
		raiseException(e_14294, "IndexError");

	
}

function raiseOverflow() {
		var e_14240 = null;
		e_14240 = {m_type: NTI3442, parent: null, name: null, message: null, trace: null};
		e_14240.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_14240.parent = null;
		raiseException(e_14240, "OverflowError");

	
}

function getEventHandler_65255(emitter_65257, event_65258) {
	var result_65259 = 0;

	var F={procname:"event.getEventHandler",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\event.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 95;
			var k_65269 = 0;
			F.line = 1973;
			var colontmp__65271 = 0;
			F.line = 95;
			colontmp__65271 = (emitter_65257.s != null ? (emitter_65257.s.length-1) : -1);
			F.line = 1955;
			var res_65274 = 0;
			L2: do {
				F.line = 1956;
					L3: while (true) {
					if (!(res_65274 <= colontmp__65271)) break L3;
						F.line = 1957;
						k_65269 = res_65274;
						if (eqStrings(emitter_65257.s[chckIndx(k_65269, 0, emitter_65257.s.length-1)-0].Field0, event_65258)) {
						F.line = 96;
						result_65259 = k_65269;
						break BeforeRet;
						}
						
						F.line = 1976;
						res_65274 = addInt(res_65274, 1);
					}
			} while(false);
		} while(false);
		F.line = 97;
		result_65259 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_65259;

}

function emit_65300(emitter_65302, eventhandler_65304, args_65305) {
	var F={procname:"event.emit",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\event.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 113;
			var fn_65402 = null;
			F.line = 3618;
			var colontmp__65404 = null;
			F.line = 113;
			colontmp__65404 = eventhandler_65304.Field1;
			F.line = 3620;
			var i_65407 = 0;
			F.line = 3621;
			var L_65409 = (colontmp__65404 != null ? colontmp__65404.length : 0);
			L2: do {
				F.line = 3622;
					L3: while (true) {
					if (!(i_65407 < L_65409)) break L3;
						F.line = 3623;
						fn_65402 = colontmp__65404[chckIndx(i_65407, 0, colontmp__65404.length-1)-0];
						F.line = 113;
						fn_65402(args_65305);
						F.line = 3624;
						i_65407 = addInt(i_65407, 1);
						if (!(((colontmp__65404 != null ? colontmp__65404.length : 0) == L_65409))) {
						F.line = 3625;
						failedAssertImpl_22239(makeNimstrLit("len(a) == L seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function emit_65410(emitter_65412, event_65413, args_65414) {
	var F={procname:"event.emit",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\event.nim",line:0};
	framePtr = F;
		F.line = 117;
		var i_65415 = getEventHandler_65255(emitter_65412, event_65413);
		if ((0 <= i_65415)) {
		F.line = 119;
		emit_65300(emitter_65412, emitter_65412.s[chckIndx(i_65415, 0, emitter_65412.s.length-1)-0], args_65414);
		}
		
	framePtr = F.prev;

	
}

function hash_53801(x_53803) {
	var result_53804 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"lib\\pure\\hashes.nim",line:0};
	framePtr = F;
		F.line = 109;
		result_53804 = x_53803;
	framePtr = F.prev;

	return result_53804;

}

function isFilled_56464(hcode_56466) {
	var result_56467 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"lib\\pure\\collections\\tableimpl.nim",line:0};
	framePtr = F;
		F.line = 18;
		result_56467 = !((hcode_56466 == 0));
	framePtr = F.prev;

	return result_56467;

}

function nextTry_56601(h_56603, maxHash_56604) {
	var result_56605 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"lib\\pure\\collections\\tableimpl.nim",line:0};
	framePtr = F;
		F.line = 28;
		result_56605 = (addInt(h_56603, 1) & maxHash_56604);
	framePtr = F.prev;

	return result_56605;

}

function rawGet_60603(t_60608, key_60610, hc_60612, hc_60612_Idx) {
						var Tmp3;

	var result_60613 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"lib\\pure\\collections\\tableimpl.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 43;
		hc_60612[hc_60612_Idx] = hash_53801(key_60610);
		if ((hc_60612[hc_60612_Idx] == 0)) {
		F.line = 45;
		hc_60612[hc_60612_Idx] = 314159265;
		}
		
		F.line = 31;
		var h_60615 = (hc_60612[hc_60612_Idx] & (t_60608.data != null ? (t_60608.data.length-1) : -1));
		L1: do {
			F.line = 32;
				L2: while (true) {
				if (!isFilled_56464(t_60608.data[chckIndx(h_60615, 0, t_60608.data.length-1)-0].Field0)) break L2;
						if (!(t_60608.data[chckIndx(h_60615, 0, t_60608.data.length-1)-0].Field0 == hc_60612[hc_60612_Idx])) Tmp3 = false; else {							Tmp3 = (t_60608.data[chckIndx(h_60615, 0, t_60608.data.length-1)-0].Field1 == key_60610);						}					if (Tmp3) {
					F.line = 38;
					result_60613 = h_60615;
					break BeforeRet;
					}
					
					F.line = 39;
					h_60615 = nextTry_56601(h_60615, (t_60608.data != null ? (t_60608.data.length-1) : -1));
				}
		} while(false);
		F.line = 75;
		result_60613 = subInt(-1, h_60615);
	} while (false);
	framePtr = F.prev;

	return result_60613;

}

function X5BX5D__64333(t_64339, key_64341) {
	var result_64342 = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"lib\\pure\\collections\\tables.nim",line:0};
	framePtr = F;
		F.line = 146;
		var hc_64344 = [0];
		F.line = 147;
		var index_64358 = rawGet_60603(t_64339, key_64341, hc_64344, 0);
		if ((0 <= index_64358)) {
		F.line = 148;
		result_64342 = t_64339.data[chckIndx(index_64358, 0, t_64339.data.length-1)-0].Field2;
		}
		else {
			F.line = 151;
			F.line = 2683;
			var e_64606 = null;
			F.line = 2684;
			e_64606 = {m_type: NTI3450, parent: null, name: null, message: null, trace: null};
			F.line = 2685;
			e_64606.message = nimCopy(null, (makeNimstrLit("key not found: ").slice(0,-1)).concat(cstrToNimstr((key_64341)+"")), NTI138);
			F.line = 2686;
			e_64606.parent = null;
			raiseException(e_64606, "KeyError");
		}
		
	framePtr = F.prev;

	return result_64342;

}

function toJSKC_64115(k_64117) {
	var result_64118 = 0;

	var F={procname:"keymap.toJSKC",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\keymap.nim",line:0};
	framePtr = F;
		F.line = 231;
		result_64118 = X5BX5D__64333({data: nimCopy(null, [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 260, Field1: 260, Field2: 55}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 8, Field1: 8, Field2: 54}, {Field0: 9, Field1: 9, Field2: 53}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 13, Field1: 13, Field2: 52}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 16, Field1: 16, Field2: 112}, {Field0: 17, Field1: 17, Field2: 113}, {Field0: 18, Field1: 18, Field2: 114}, {Field0: 19, Field1: 19, Field2: 69}, {Field0: 20, Field1: 20, Field2: 65}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 27, Field1: 27, Field2: 51}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 32, Field1: 32, Field2: 1}, {Field0: 33, Field1: 33, Field2: 61}, {Field0: 34, Field1: 34, Field2: 62}, {Field0: 35, Field1: 35, Field2: 64}, {Field0: 36, Field1: 36, Field2: 63}, {Field0: 37, Field1: 37, Field2: 58}, {Field0: 38, Field1: 38, Field2: 60}, {Field0: 39, Field1: 39, Field2: 57}, {Field0: 40, Field1: 40, Field2: 59}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 44, Field1: 44, Field2: 68}, {Field0: 45, Field1: 45, Field2: 4}, {Field0: 46, Field1: 46, Field2: 56}, {Field0: 47, Field1: 47, Field2: 6}, {Field0: 48, Field1: 48, Field2: 7}, {Field0: 49, Field1: 49, Field2: 8}, {Field0: 50, Field1: 50, Field2: 9}, {Field0: 51, Field1: 51, Field2: 10}, {Field0: 52, Field1: 52, Field2: 11}, {Field0: 53, Field1: 53, Field2: 12}, {Field0: 54, Field1: 54, Field2: 13}, {Field0: 55, Field1: 55, Field2: 14}, {Field0: 56, Field1: 56, Field2: 15}, {Field0: 57, Field1: 57, Field2: 16}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 59, Field1: 59, Field2: 17}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 61, Field1: 61, Field2: 18}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 65, Field1: 65, Field2: 19}, {Field0: 66, Field1: 66, Field2: 20}, {Field0: 67, Field1: 67, Field2: 21}, {Field0: 68, Field1: 68, Field2: 22}, {Field0: 69, Field1: 69, Field2: 23}, {Field0: 70, Field1: 70, Field2: 24}, {Field0: 71, Field1: 71, Field2: 25}, {Field0: 72, Field1: 72, Field2: 26}, {Field0: 73, Field1: 73, Field2: 27}, {Field0: 74, Field1: 74, Field2: 28}, {Field0: 75, Field1: 75, Field2: 29}, {Field0: 76, Field1: 76, Field2: 30}, {Field0: 77, Field1: 77, Field2: 31}, {Field0: 78, Field1: 78, Field2: 32}, {Field0: 79, Field1: 79, Field2: 33}, {Field0: 80, Field1: 80, Field2: 34}, {Field0: 81, Field1: 81, Field2: 35}, {Field0: 82, Field1: 82, Field2: 36}, {Field0: 83, Field1: 83, Field2: 37}, {Field0: 84, Field1: 84, Field2: 38}, {Field0: 85, Field1: 85, Field2: 39}, {Field0: 86, Field1: 86, Field2: 40}, {Field0: 87, Field1: 87, Field2: 41}, {Field0: 88, Field1: 88, Field2: 42}, {Field0: 89, Field1: 89, Field2: 43}, {Field0: 90, Field1: 90, Field2: 44}, {Field0: 91, Field1: 91, Field2: 45}, {Field0: 92, Field1: 92, Field2: 46}, {Field0: 93, Field1: 93, Field2: 47}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 96, Field1: 96, Field2: 95}, {Field0: 97, Field1: 97, Field2: 96}, {Field0: 98, Field1: 98, Field2: 97}, {Field0: 99, Field1: 99, Field2: 98}, {Field0: 100, Field1: 100, Field2: 99}, {Field0: 101, Field1: 101, Field2: 100}, {Field0: 102, Field1: 102, Field2: 101}, {Field0: 103, Field1: 103, Field2: 102}, {Field0: 104, Field1: 104, Field2: 103}, {Field0: 105, Field1: 105, Field2: 104}, {Field0: 106, Field1: 106, Field2: 107}, {Field0: 107, Field1: 107, Field2: 109}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 109, Field1: 109, Field2: 108}, {Field0: 110, Field1: 110, Field2: 105}, {Field0: 111, Field1: 111, Field2: 106}, {Field0: 112, Field1: 112, Field2: 70}, {Field0: 113, Field1: 113, Field2: 71}, {Field0: 114, Field1: 114, Field2: 72}, {Field0: 115, Field1: 115, Field2: 73}, {Field0: 116, Field1: 116, Field2: 74}, {Field0: 117, Field1: 117, Field2: 75}, {Field0: 118, Field1: 118, Field2: 76}, {Field0: 119, Field1: 119, Field2: 77}, {Field0: 120, Field1: 120, Field2: 78}, {Field0: 121, Field1: 121, Field2: 79}, {Field0: 122, Field1: 122, Field2: 80}, {Field0: 123, Field1: 123, Field2: 81}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 144, Field1: 144, Field2: 67}, {Field0: 145, Field1: 145, Field2: 66}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 314159265, Field1: 0, Field2: 0}, {Field0: 161, Field1: 161, Field2: 49}, {Field0: 162, Field1: 162, Field2: 50}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], NTI60333), counter: 96}, k_64117);
	framePtr = F.prev;

	return result_64118;

}

function initDefaultEvents_66008(w_66010) {

		function keyev_66011(e_66014) {
			var F={procname:"initDefaultEvents.keyev",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\window.nim",line:0};
			framePtr = F;
				F.line = 28;
				emit_65410(w_66010.eventLoop, makeNimstrLit("keyEv"), {kind: 0, key: toJSKC_64115(e_66014.keyCode), mods: 0, button: 0, kmods: 0, pos: {Field0: 0.0, Field1: 0.0}, dt: 0.0});
				F.line = 29;
				rawEcho(makeNimstrLit("ha"));
			framePtr = F.prev;

			
		}

	var F={procname:"window.initDefaultEvents",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\window.nim",line:0};
	framePtr = F;
		F.line = 30;
		document.addEventListener("keypress", keyev_66011, true);
	framePtr = F.prev;

	
}

function initWindow_66018(w_66021, h_66023) {
	var result_66024 = {ctx: null, width: 0, height: 0, view: null, eventLoop: null};

	var F={procname:"window.initWindow",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\window.nim",line:0};
	framePtr = F;
		F.line = 33;
		var canvas_66025 = document.getElementById("crow-canvas");
		if ((canvas_66025 === null)) {
		F.line = 35;
		canvas_66025 = document.createElement("CANVAS");
		F.line = 36;
		canvas_66025.setAttribute("ID", "crow-canvas");
		F.line = 38;
		document.body.appendChild(canvas_66025);
		}
		
		F.line = 40;
		canvas_66025.setAttribute("WIDTH", toJSStr(cstrToNimstr((w_66021)+"")));
		F.line = 41;
		canvas_66025.setAttribute("HEIGHT", toJSStr(cstrToNimstr((h_66023)+"")));
		F.line = 43;
		result_66024.ctx = getContextWebgl_28964(canvas_66025);
		F.line = 44;
		result_66024.view = canvas_66025;
		F.line = 45;
		result_66024.width = result_66024.view.clientWidth;
		F.line = 46;
		result_66024.height = result_66024.view.clientHeight;
		F.line = 47;
		viewport_32202(result_66024.ctx, 0, 0, result_66024.ctx.canvas.width, result_66024.ctx.canvas.height);
		F.line = 48;
		result_66024.eventLoop = initEventEmitter_65417();
		F.line = 49;
		initDefaultEvents_66008(result_66024);
	framePtr = F.prev;

	return result_66024;

}
var surface_67001 = [initWindow_66018(640, 480)];
var vertices_67007 = [nimCopy(null, [-5.0000000000000000e-001, 5.0000000000000000e-001, 0.0, -5.0000000000000000e-001, -5.0000000000000000e-001, 0.0, 5.0000000000000000e-001, -5.0000000000000000e-001, 0.0], NTI67002)];
var indices_67010 = [nimCopy(null, [0, 1, 2], NTI67008)];

function createBuffer_33402(gl_33404) {
	var result_33405 = {b: null};

	var F={procname:"ngl.createBuffer",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		F.line = 236;
		result_33405.b = gl_33404.createBuffer();
	framePtr = F.prev;

	return result_33405;

}
var vertex_buffer_67011 = [createBuffer_33402(surface_67001[0].ctx)];

function raiseRangeError() {
		var e_14276 = null;
		e_14276 = {m_type: NTI3458, parent: null, name: null, message: null, trace: null};
		e_14276.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_14276.parent = null;
		raiseException(e_14276, "RangeError");

	
}

function bindBuffer_33601(gl_33603, kind_33604, buffer_33605) {
	var F={procname:"ngl.bindBuffer",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		F.line = 242;
		gl_33603.bindBuffer(chckRange(kind_33604, 34660, 35048), buffer_33605.b);
	framePtr = F.prev;

	
}
bindBuffer_33601(surface_67001[0].ctx, 34962, vertex_buffer_67011[0]);

function bufferData_67014(gl_67018, kind_67020, data_67023, usage_67025) {
	var F={procname:"bufferData.bufferData",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		F.line = 248;
		gl_67018.bufferData(chckRange(kind_67020, 34660, 35048), new Float32Array(data_67023), chckRange(usage_67025, 34660, 35048));
	framePtr = F.prev;

	
}
bufferData_67014(surface_67001[0].ctx, 34962, vertices_67007[0], 35044);
var Index_Buffer_67215 = [createBuffer_33402(surface_67001[0].ctx)];
bindBuffer_33601(surface_67001[0].ctx, 34963, Index_Buffer_67215[0]);

function bufferData_67218(gl_67222, kind_67224, data_67227, usage_67229) {
	var F={procname:"bufferData.bufferData",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		F.line = 248;
		gl_67222.bufferData(chckRange(kind_67224, 34660, 35048), new Uint16Array(data_67227), chckRange(usage_67229, 34660, 35048));
	framePtr = F.prev;

	
}
bufferData_67218(surface_67001[0].ctx, 34963, indices_67010[0], 35044);
var vertCode_67415 = [makeNimstrLit("#version 100\x0Aattribute vec3 coordinates;void main(void) { gl_Position = vec4(coordinates, 1.0);}")];
var fragCode_67416 = [makeNimstrLit("void main(void){gl_FragColor = vec4(0.0, 0.0, 0.0, 1);}")];

function getStatus_29029(gl_29031, what_29032) {
	var result_29033 = false;

	var F={procname:"webgl.getStatus",prev:framePtr,filename:"C:\\Users\\stisa\\.nimble\\pkgs\\webgl-#head\\webgl.nim",line:0};
	framePtr = F;
		F.line = 449;
		result_29033 = gl_29031.getShaderParameter(what_29032, gl_29031.COMPILE_STATUS);
	framePtr = F.prev;

	return result_29033;

}

function createShader_33042(gl_33044, kind_33045, src_33046) {
	var result_33047 = {source: null, kind: 0, s: null};

	var F={procname:"ngl.createShader",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		F.line = 172;
		result_33047.kind = kind_33045;
		F.line = 173;
		result_33047.source = nimCopy(null, src_33046, NTI138);
		F.line = 175;
		result_33047.s = gl_33044.createShader(chckRange(kind_33045, 34921, 36349));
		F.line = 176;
		gl_33044.shaderSource(result_33047.s, toJSStr(src_33046));
		F.line = 177;
		gl_33044.compileShader(result_33047.s);
		if (!(getStatus_29029(gl_33044, result_33047.s))) {
		if (true) {
		F.line = 178;
		raiseAssert_22216((makeNimstrLit("false ").slice(0,-1)).concat(cstrToNimstr(gl_33044.getShaderInfoLog(result_33047.s))));
		}
		
		}
		
	framePtr = F.prev;

	return result_33047;

}

function getStatus_29034(gl_29036, what_29037) {
	var result_29038 = false;

	var F={procname:"webgl.getStatus",prev:framePtr,filename:"C:\\Users\\stisa\\.nimble\\pkgs\\webgl-#head\\webgl.nim",line:0};
	framePtr = F;
		F.line = 451;
		result_29038 = gl_29036.getProgramParameter(what_29037, gl_29036.LINK_STATUS);
	framePtr = F.prev;

	return result_29038;

}

function createProgram_33209(gl_33211, useIt_33212, vertex_src_33213, fragment_src_33214) {
	var result_33215 = {vertex: {source: null, kind: 0, s: null}, fragment: {source: null, kind: 0, s: null}, p: null};

	var F={procname:"ngl.createProgram",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		F.line = 202;
		var vs_33216 = createShader_33042(gl_33211, 35633, vertex_src_33213);
		F.line = 203;
		var fs_33217 = createShader_33042(gl_33211, 35632, fragment_src_33214);
		F.line = 204;
		nimCopy(result_33215.vertex, vs_33216, NTI31402);
		F.line = 205;
		nimCopy(result_33215.fragment, fs_33217, NTI31402);
		F.line = 208;
		var program_33401 = gl_33211.createProgram();
		F.line = 209;
		gl_33211.attachShader(program_33401, vs_33216.s);
		F.line = 210;
		gl_33211.attachShader(program_33401, fs_33217.s);
		F.line = 211;
		gl_33211.linkProgram(program_33401);
		if (!(getStatus_29034(gl_33211, program_33401))) {
		if (true) {
		F.line = 213;
		raiseAssert_22216((makeNimstrLit("false ").slice(0,-1)).concat(cstrToNimstr(gl_33211.getProgramInfoLog(program_33401))));
		}
		
		}
		
		if (useIt_33212) {
		F.line = 214;
		gl_33211.useProgram(program_33401);
		}
		
		F.line = 232;
		result_33215.p = program_33401;
	framePtr = F.prev;

	return result_33215;

}
var shaderProgram_67417 = [createProgram_33209(surface_67001[0].ctx, true, vertCode_67415[0], fragCode_67416[0])];
bindBuffer_33601(surface_67001[0].ctx, 34962, vertex_buffer_67011[0]);
bindBuffer_33601(surface_67001[0].ctx, 34963, Index_Buffer_67215[0]);

function getAttribLocation_34235(gl_34237, program_34238, name_34239) {
	var result_34240 = 0;

	var F={procname:"ngl.getAttribLocation",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		F.line = 284;
		result_34240 = gl_34237.getAttribLocation(program_34238.p, toJSStr(name_34239));
	framePtr = F.prev;

	return result_34240;

}
var coord_67418 = [getAttribLocation_34235(surface_67001[0].ctx, shaderProgram_67417[0], makeNimstrLit("coordinates"))];

function vertexAttribPointer_34601(gl_34603, index_34604, size_34605, typ_34606, normalized_34607, stride_34608, offset_34609) {
	var F={procname:"ngl.vertexAttribPointer",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		F.line = 300;
		gl_34603.vertexAttribPointer(index_34604, size_34605, chckRange(typ_34606, 5120, 5126), normalized_34607, stride_34608, offset_34609);
	framePtr = F.prev;

	
}
vertexAttribPointer_34601(surface_67001[0].ctx, coord_67418[0], 3, 5126, false, 0, 0);

function enableVertexAttribArray_34401(gl_34403, attr_34404) {
	var F={procname:"ngl.enableVertexAttribArray",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		F.line = 293;
		gl_34403.enableVertexAttribArray(attr_34404);
	framePtr = F.prev;

	
}
enableVertexAttribArray_34401(surface_67001[0].ctx, coord_67418[0]);

function clearColor_32601(gl_32603, r_32604, g_32605, b_32606, a_32607) {
	var F={procname:"ngl.clearColor",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		F.line = 149;
		gl_32603.clearColor(r_32604, g_32605, b_32606, a_32607);
	framePtr = F.prev;

	
}
clearColor_32601(surface_67001[0].ctx, 5.0000000000000000e-001, 5.0000000000000000e-001, 5.0000000000000000e-001, 1.0000000000000000e+000);

function requestAnimationFrame_29023(fn_29028) {
	var F={procname:"webgl.requestAnimationFrame",prev:framePtr,filename:"C:\\Users\\stisa\\.nimble\\pkgs\\webgl-#head\\webgl.nim",line:0};
	framePtr = F;
		F.line = 446;
		window.requestAnimationFrame(fn_29028);
	framePtr = F.prev;

	
}

function clear_32808(gl_32810, color_32811, depth_32812) {
	var F={procname:"ngl.clear",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		if ((color_32811 && depth_32812)) {
		F.line = 157;
		gl_32810.clear(16640);
		}
		else {
		if (color_32811) {
		F.line = 159;
		gl_32810.clear(16384);
		}
		else {
		if (depth_32812) {
		F.line = 161;
		gl_32810.clear(256);
		}
		}}
	framePtr = F.prev;

	
}

function drawElements_35014(gl_35016, mode_35017, count_35018, kind_35019, offset_35020) {
	var F={procname:"ngl.drawElements",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\ngl.nim",line:0};
	framePtr = F;
		if (!((ConstSet2[kind_35019] != undefined))) {
		F.line = 328;
		raiseAssert_22216(makeNimstrLit("contains({dkUByte, dkUShort, dkUInt}, kind) "));
		}
		
		F.line = 330;
		gl_35016.drawElements(mode_35017, count_35018, chckRange(kind_35019, 5120, 5126), offset_35020);
	framePtr = F.prev;

	
}

function innerframedraw_67422(now_67421) {
	var F={procname:"ex1.innerframedraw",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\crow\\src\\crow\\core\\window.nim",line:0};
	framePtr = F;
		F.line = 69;
		clear_32808(surface_67001[0].ctx, true, false);
		F.line = 72;
		drawElements_35014(surface_67001[0].ctx, 4, 3, 5123, 0);
	framePtr = F.prev;

	
}
requestAnimationFrame_29023(innerframedraw_67422);
