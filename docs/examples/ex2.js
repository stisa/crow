/* Generated by the Nim Compiler v0.16.0 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI61026 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI64137 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI64136 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI64120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62908 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI62907 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI62891 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62250 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI62249 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI62233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI128 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI62211 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3456 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51063 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI65063 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI65062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI65071 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI65068 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI65057 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI65056 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI65050 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI65044 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI58023 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI65042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI65074 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI58018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI55222 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI55220 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI58016 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI55242 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI55240 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI58012 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI58003 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI55246 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI55244 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI58007 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3444 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3452 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51034 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI51031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51019 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI51018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI51009 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI51436 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3483 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3436 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
var NNI3436 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3436.node = NNI3436;
NTI3483.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3483, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3436.base = NTI3424;
NTI3440.base = NTI3436;
var NNI12409 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI12409.node = NNI12409;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3438.base = NTI3436;
NTI51018.base = NTI51019;
var NNI51009 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI51018, name: "Field1", sons: null}]};
NTI51009.node = NNI51009;
NTI51436.base = NTI51009;
NTI51034.base = NTI51009;
var NNI51031 = {kind: 1, offset: "s", len: 0, typ: NTI51034, name: "s", sons: null};
NTI51031.node = NNI51031;
var NNI3452 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3452.node = NNI3452;
NTI3452.base = NTI3424;
var NNI3444 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3444.node = NNI3444;
NTI3444.base = NTI3424;
var NNI3448 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3448.node = NNI3448;
var NNI3446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3446.node = NNI3446;
NTI3446.base = NTI3424;
NTI3448.base = NTI3446;
var NNI55246 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI55246.node = NNI55246;
NTI55246.base = NTI3408;
NTI55244.base = NTI55246;
var NNI58003 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: [{kind: 1, offset: 0, typ: NTI58003, name: "Fragment", len: 0, sons: null}, 
{kind: 1, offset: 1, typ: NTI58003, name: "Vertex", len: 0, sons: null}]};
NTI58003.node = NNI58003;
var NNI58007 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "source", len: 0, typ: NTI138, name: "source", sons: null}, 
{kind: 1, offset: "s", len: 0, typ: NTI55244, name: "s", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI58003, name: "kind", sons: null}]};
NTI58007.node = NNI58007;
var NNI55242 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI55242.node = NNI55242;
NTI55242.base = NTI3408;
NTI55240.base = NTI55242;
var NNI55222 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI55222.node = NNI55222;
NTI55222.base = NTI3408;
NTI55220.base = NTI55222;
NTI58016.base = NTI55220;
NTI58018.base = NTI114;
var NNI58012 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "p", len: 0, typ: NTI55240, name: "p", sons: null}, 
{kind: 1, offset: "vertex", len: 0, typ: NTI58007, name: "vertex", sons: null}, 
{kind: 1, offset: "fragment", len: 0, typ: NTI58007, name: "fragment", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI58016, name: "colors", sons: null}, 
{kind: 1, offset: "attributes", len: 0, typ: NTI58018, name: "attributes", sons: null}]};
NTI58012.node = NNI58012;
var NNI65074 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "sides", len: 0, typ: NTI104, name: "sides", sons: null}, 
{kind: 1, offset: "bcradius", len: 0, typ: NTI124, name: "bcradius", sons: null}, 
{kind: 1, offset: "filled", len: 0, typ: NTI130, name: "filled", sons: null}]};
NTI65074.node = NNI65074;
var NNI58023 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI124, name: "Field3", sons: null}]};
NTI58023.node = NNI58023;
var NNI65044 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI65044.node = NNI65044;
var NNI65050 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI65050.node = NNI65050;
var NNI65042 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "color", len: 0, typ: NTI58023, name: "color", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI65044, name: "pos", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI124, name: "scale", sons: null}, 
{kind: 1, offset: "rot", len: 0, typ: NTI124, name: "rot", sons: null}, 
{kind: 1, offset: "origin", len: 0, typ: NTI65050, name: "origin", sons: null}, 
{kind: 1, offset: "centered", len: 0, typ: NTI130, name: "centered", sons: null}]};
NTI65042.node = NNI65042;
NTI65042.base = NTI3408;
NTI65074.base = NTI65042;
var NNI65057 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI65057.node = NNI65057;
var NNI65056 = {kind: 1, offset: "size", len: 0, typ: NTI65057, name: "size", sons: null};
NTI65056.node = NNI65056;
NTI65056.base = NTI65042;
var NNI65068 = {kind: 1, offset: "radius", len: 0, typ: NTI124, name: "radius", sons: null};
NTI65068.node = NNI65068;
NTI65068.base = NTI65042;
var NNI65071 = {kind: 1, offset: "radius", len: 0, typ: NTI124, name: "radius", sons: null};
NTI65071.node = NNI65071;
NTI65071.base = NTI65042;
var NNI65063 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI65063.node = NNI65063;
var NNI65062 = {kind: 1, offset: "size", len: 0, typ: NTI65063, name: "size", sons: null};
NTI65062.node = NNI65062;
NTI65062.base = NTI65042;
NTI51063.base = NTI51019;
var NNI3456 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3456.node = NNI3456;
NTI3456.base = NTI3424;
NTI62211.base = NTI128;
NTI62250.base = NTI124;
NTI62249.base = NTI62250;
var NNI62233 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI62249, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI62233.node = NNI62233;
NTI62908.base = NTI124;
NTI62907.base = NTI62908;
var NNI62891 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI62907, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI62891.node = NNI62891;
NTI64137.base = NTI124;
NTI64136.base = NTI64137;
var NNI64120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI64136, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI64120.node = NNI64120;
NTI61026.base = NTI124;
function makeNimstrLit(c_13403) {

    var ln = c_13403.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_13403.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    }
function SetConstr() {

      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    }
function nimCopy(dest_18618, src_18619, ti_18620) {

var result_19029 = null;
switch (ti_18620.kind) {
case 21: case 22: case 23: case 5: if (!(isfatpointer_18601(ti_18620))) {
result_19029 = src_18619;
}
else {
result_19029 = [src_18619[0], src_18619[1]];}


break;
case 19:       if (dest_18618 === null || dest_18618 === undefined) {
        dest_18618 = {};
      }
      else {
        for (var key in dest_18618) { delete dest_18618[key]; }
      }
      for (var key in src_18619) { dest_18618[key] = src_18619[key]; }
      result_19029 = dest_18618;
    
break;
case 18: case 17: if (!((ti_18620.base == null))) {
result_19029 = nimCopy(dest_18618, src_18619, ti_18620.base);
}
else {
if ((ti_18620.kind == 17)) {
result_19029 = (dest_18618 === null || dest_18618 === undefined) ? {m_type: ti_18620} : dest_18618;}
else {
result_19029 = (dest_18618 === null || dest_18618 === undefined) ? {} : dest_18618;}
}
nimCopyAux(result_19029, src_18619, ti_18620.node);

break;
case 24: case 4: case 27: case 16:       if (src_18619 === null) {
        result_19029 = null;
      }
      else {
        if (dest_18618 === null || dest_18618 === undefined) {
          dest_18618 = new Array(src_18619.length);
        }
        else {
          dest_18618.length = src_18619.length;
        }
        result_19029 = dest_18618;
        for (var i = 0; i < src_18619.length; ++i) {
          result_19029[i] = nimCopy(result_19029[i], src_18619[i], ti_18620.base);
        }
      }
    
break;
case 28:       if (src_18619 !== null) {
        result_19029 = src_18619.slice(0);
      }
    
break;
default: 
result_19029 = src_18619;
break;
}
return result_19029;
}
function eqStrings(a_16003, b_16004) {

    if (a_16003 == b_16004) return true;
    if ((!a_16003) || (!b_16004)) return false;
    var alen = a_16003.length;
    if (alen != b_16004.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16003[i] != b_16004[i]) return false;
    return true;
  }
function arrayConstr(len_19203, value_19204, typ_19205) {

      var result = new Array(len_19203);
      for (var i = 0; i < len_19203; ++i) result[i] = nimCopy(null, value_19204, typ_19205);
      return result;
    }
function cstrToNimstr(c_13603) {

  var ln = c_13603.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_13603.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function toJSStr(s_13803) {

    var len = s_13803.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_13803[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_13803[i] < 128)
        asciiPart[i] = fcc(s_13803[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  }
function raiseException(e_12806, ename_12807) {

e_12806.name = ename_12807;
if ((excHandler == 0)) {
unhandledException(e_12806);
}

e_12806.trace = nimCopy(null, rawwritestacktrace_12628(), NTI138);
throw e_12806;}
function chckIndx(i_19209, a_19210, b_19211) {

var Tmp1;
var result_19212 = 0;
BeforeRet: do {
if (!(a_19210 <= i_19209)) Tmp1 = false; else {Tmp1 = (i_19209 <= b_19211); }if (Tmp1) {
result_19212 = i_19209;
break BeforeRet;
}
else {
raiseIndexError();
}

} while (false); 
return result_19212;
}
function addInt(a_16256, b_16257) {

      var result = a_16256 + b_16257;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function subInt(a_16403, b_16404) {

      var result = a_16403 - b_16404;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function mulInt(a_16603, b_16604) {

      var result = a_16603 * b_16604;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function chckRange(i_19215, a_19216, b_19217) {

var Tmp1;
var result_19218 = 0;
BeforeRet: do {
if (!(a_19216 <= i_19215)) Tmp1 = false; else {Tmp1 = (i_19215 <= b_19217); }if (Tmp1) {
result_19218 = i_19215;
break BeforeRet;
}
else {
raiseRangeError();
}

} while (false); 
return result_19218;
}
function negInt(a_18203) {

var result_18204 = 0;
result_18204 = (a_18203 * -1);
return result_18204;
}
function divInt(a_16803, b_16804) {

      if (b_16804 == 0) raiseDivByZero();
      if (b_16804 == -1 && a_16803 == 2147483647) raiseOverflow();
      return Math.floor(a_16803 / b_16804);
    }
var nimvm_5887 = false;
var nim_program_result = 0;
var globalraisehook_10414 = [null];
var localraisehook_10419 = [null];
var outofmemhook_10422 = [null];
function isfatpointer_18601(ti_18603) {

var result_18604 = false;
BeforeRet: do {
result_18604 = !((SetConstr(17, 16, 4, 18, 27, 19, 23, 22, 21)[ti_18603.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_18604;
}
function nimCopyAux(dest_18623, src_18624, n_18626) {

switch (n_18626.kind) {
case 0: 
break;
case 1:       dest_18623[n_18626.offset] = nimCopy(dest_18623[n_18626.offset], src_18624[n_18626.offset], n_18626.typ);
    
break;
case 2: L1: do {
var i_19015 = 0;
var HEX3Atmp_19017 = 0;
HEX3Atmp_19017 = (n_18626.len - 1);
var res_19020 = 0;
L2: do {
L3: while (true) {
if (!(res_19020 <= HEX3Atmp_19017)) break L3;
i_19015 = res_19020;
nimCopyAux(dest_18623, src_18624, n_18626.sons[i_19015]);
res_19020 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_18623[n_18626.offset] = nimCopy(dest_18623[n_18626.offset], src_18624[n_18626.offset], n_18626.typ);
      for (var i = 0; i < n_18626.sons.length; ++i) {
        nimCopyAux(dest_18623, src_18624, n_18626.sons[i][1]);
      }
    
break;
}
}
function add_10438(x_10441, x_10441_Idx, y_10442) {

        var len = x_10441[0].length-1;
        for (var i = 0; i < y_10442.length; ++i) {
          x_10441[0][len] = y_10442.charCodeAt(i);
          ++len;
        }
        x_10441[0][len] = 0
      }
function auxwritestacktrace_12404(f_12406) {

var Tmp3;
var result_12407 = [null];
var it_12415 = f_12406;
var i_12416 = 0;
var total_12417 = 0;
var tempframes_12421 = arrayConstr(64, {Field0: null, Field1: 0}, NTI12409);
L1: do {
L2: while (true) {
if (!!((it_12415 == null))) Tmp3 = false; else {Tmp3 = (i_12416 <= 63); }if (!Tmp3) break L2;
tempframes_12421[i_12416].Field0 = it_12415.procname;
tempframes_12421[i_12416].Field1 = it_12415.line;
i_12416 += 1;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
L4: do {
L5: while (true) {
if (!!((it_12415 == null))) break L5;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
result_12407[0] = nimCopy(null, makeNimstrLit(""), NTI138);
if (!((total_12417 == i_12416))) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_12407[0] = makeNimstrLit("(");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr(((total_12417 - i_12416))+"")); } else { result_12407[0] = cstrToNimstr(((total_12417 - i_12416))+"");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_12407[0] = makeNimstrLit(" calls omitted) ...\x0A");};
}

L6: do {
var j_12615 = 0;
var HEX3Atmp_12621 = 0;
HEX3Atmp_12621 = (i_12416 - 1);
var res_12624 = HEX3Atmp_12621;
L7: do {
L8: while (true) {
if (!(0 <= res_12624)) break L8;
j_12615 = res_12624;
add_10438(result_12407, 0, tempframes_12421[j_12615].Field0);
if ((0 < tempframes_12421[j_12615].Field1)) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_12407[0] = makeNimstrLit(", line: ");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr((tempframes_12421[j_12615].Field1)+"")); } else { result_12407[0] = cstrToNimstr((tempframes_12421[j_12615].Field1)+"");};
}

if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_12407[0] = makeNimstrLit("\x0A");};
res_12624 -= 1;
}
} while(false);
} while(false);
return result_12407[0];
}
function rawwritestacktrace_12628() {

var result_12630 = null;
if (!((framePtr == null))) {
result_12630 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxwritestacktrace_12404(framePtr)), NTI138);
}
else {
result_12630 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
}

return result_12630;
}
function unhandledException(e_12654) {

var Tmp1;
var buf_12655 = /**/[makeNimstrLit("")];
if (!!(eqStrings(e_12654.message, null))) Tmp1 = false; else {Tmp1 = !((e_12654.message[0] == 0)); }if (Tmp1) {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception: ");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(e_12654.message); } else { buf_12655[0] = e_12654.message;};
}
else {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception");};
}

if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_12655[0] = makeNimstrLit(" [");};
add_10438(buf_12655, 0, e_12654.name);
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_12655[0] = makeNimstrLit("]\x0A");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(rawwritestacktrace_12628()); } else { buf_12655[0] = rawwritestacktrace_12628();};
var cbuf_12801 = toJSStr(buf_12655[0]);
framePtr = null;
  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_12801);
  }
  else {
    throw cbuf_12801;
  }
  }
function raiseOverflow() {

var e_13236 = null;
e_13236 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_13236.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
raiseException(e_13236, "OverflowError");
}
function raiseDivByZero() {

var e_13252 = null;
e_13252 = {m_type: NTI3438, parent: null, name: null, message: null, trace: null};
e_13252.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
raiseException(e_13252, "DivByZeroError");
}
var objectid_42233 = /**/[0];
function initeventemitter_51418() {

var result_51420 = {s: null};
var F={procname:"events.initEventEmitter",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
F.line = 120;
result_51420.s = nimCopy(null, [], NTI51436);
framePtr = F.prev;
return result_51420;
}
function raiseIndexError() {

var e_13284 = null;
e_13284 = {m_type: NTI3452, parent: null, name: null, message: null, trace: null};
e_13284.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
raiseException(e_13284, "IndexError");
}
function geteventhandler_51250(emitter_51253, event_51254) {

var result_51255 = 0;
var F={procname:"events.getEventHandler",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
BeforeRet: do {
L1: do {
F.line = 92;
var k_51265 = 0;
F.line = 1926;
var HEX3Atmp_51267 = 0;
F.line = 92;
HEX3Atmp_51267 = (emitter_51253.s != null ? (emitter_51253.s.length-1) : -1);
F.line = 1908;
var res_51270 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_51270 <= HEX3Atmp_51267)) break L3;
F.line = 1910;
k_51265 = res_51270;
if (eqStrings(emitter_51253.s[chckIndx(k_51265, 0, emitter_51253.s.length)-0].Field0, event_51254)) {
F.line = 93;
result_51255 = k_51265;
break BeforeRet;
}

res_51270 = addInt(res_51270, 1);
}
} while(false);
} while(false);
F.line = 94;
result_51255 = -1;
break BeforeRet;
} while (false); 
framePtr = F.prev;
return result_51255;
}
function sysfatal_21221(message_21227) {

var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 2578;
var e_21229 = null;
e_21229 = {m_type: NTI3444, parent: null, name: null, message: null, trace: null};
F.line = 2580;
e_21229.message = nimCopy(null, message_21227, NTI138);
F.line = 2581;
raiseException(e_21229, "AssertionError");
framePtr = F.prev;
}
function raiseassert_21216(msg_21218) {

var F={procname:"system.raiseAssert",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
sysfatal_21221(msg_21218);
framePtr = F.prev;
}
function failedassertimpl_21239(msg_21241) {

var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
raiseassert_21216(msg_21241);
framePtr = F.prev;
}
function emit_51297(emitter_51300, eventhandler_51302, args_51303) {

var F={procname:"events.emit",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
L1: do {
F.line = 110;
var fn_51402 = null;
F.line = 3495;
var HEX3Atmp_51404 = null;
F.line = 110;
HEX3Atmp_51404 = eventhandler_51302.Field1;
F.line = 3497;
var i_51407 = 0;
F.line = 3498;
var L_51409 = (HEX3Atmp_51404 != null ? HEX3Atmp_51404.length : 0);
L2: do {
F.line = 3499;
L3: while (true) {
if (!(i_51407 < L_51409)) break L3;
F.line = 3500;
fn_51402 = HEX3Atmp_51404[chckIndx(i_51407, 0, HEX3Atmp_51404.length)-0];
fn_51402(args_51303);
i_51407 = addInt(i_51407, 1);
if (!(((HEX3Atmp_51404 != null ? HEX3Atmp_51404.length : 0) == L_51409))) {
failedassertimpl_21239(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
framePtr = F.prev;
}
function emit_51410(emitter_51413, event_51414, args_51415) {

var F={procname:"events.emit",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
F.line = 114;
var i_51416 = geteventhandler_51250(emitter_51413, event_51414);
if ((0 <= i_51416)) {
emit_51297(emitter_51413, emitter_51413.s[chckIndx(i_51416, 0, emitter_51413.s.length)-0], args_51415);
}

framePtr = F.prev;
}
function hash_42801(x_42803) {

var result_42804 = 0;
var F={procname:"hashes.hash",prev:framePtr,filename:"lib/pure/hashes.nim",line:0};
framePtr = F;
F.line = 109;
result_42804 = x_42803;
framePtr = F.prev;
return result_42804;
}
function isfilled_45465(hcode_45467) {

var result_45468 = false;
var F={procname:"tables.isFilled",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
F.line = 18;
result_45468 = !((hcode_45467 == 0));
framePtr = F.prev;
return result_45468;
}
function nexttry_45601(h_45603, maxhash_45604) {

var result_45605 = 0;
var F={procname:"tables.nextTry",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
F.line = 28;
result_45605 = (addInt(h_45603, 1) & maxhash_45604);
framePtr = F.prev;
return result_45605;
}
function rawget_49460(t_49465, key_49467, hc_49469, hc_49469_Idx) {

var Tmp3;
var result_49470 = 0;
var F={procname:"rawGet.rawGet",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 43;
hc_49469[hc_49469_Idx] = hash_42801(key_49467);
if ((hc_49469[hc_49469_Idx] == 0)) {
F.line = 45;
hc_49469[hc_49469_Idx] = 314159265;
}

F.line = 31;
var h_49472 = (hc_49469[hc_49469_Idx] & (t_49465.data != null ? (t_49465.data.length-1) : -1));
L1: do {
F.line = 32;
L2: while (true) {
if (!isfilled_45465(t_49465.data[chckIndx(h_49472, 0, t_49465.data.length)-0].Field0)) break L2;
if (!(t_49465.data[chckIndx(h_49472, 0, t_49465.data.length)-0].Field0 == hc_49469[hc_49469_Idx])) Tmp3 = false; else {Tmp3 = (t_49465.data[chckIndx(h_49472, 0, t_49465.data.length)-0].Field1 == key_49467); }if (Tmp3) {
F.line = 38;
result_49470 = h_49472;
break BeforeRet;
}

F.line = 39;
h_49472 = nexttry_45601(h_49472, (t_49465.data != null ? (t_49465.data.length-1) : -1));
}
} while(false);
F.line = 75;
result_49470 = subInt(-1, h_49472);
} while (false); 
framePtr = F.prev;
return result_49470;
}
function HEX5BHEX5D_49630(t_49636, key_49638) {

var result_49639 = 0;
var F={procname:"[].[]",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
framePtr = F;
F.line = 146;
var hc_49641 = [0];
F.line = 147;
var index_49643 = rawget_49460(t_49636, key_49638, hc_49641, 0);
if ((0 <= index_49643)) {
F.line = 148;
result_49639 = t_49636.data[chckIndx(index_49643, 0, t_49636.data.length)-0].Field2;
}
else {
F.line = 151;
F.line = 2559;
var e_49803 = null;
e_49803 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null};
F.line = 2561;
e_49803.message = nimCopy(null, (makeNimstrLit("key not found: ").slice(0,-1)).concat(cstrToNimstr((key_49638)+"")), NTI138);
raiseException(e_49803, "KeyError");
}

framePtr = F.prev;
return result_49639;
}
function tojskc_49625(k_49627) {

var result_49628 = 0;
var F={procname:"keymap.toJSKC",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/keymap.nim",line:0};
framePtr = F;
F.line = 231;
result_49628 = HEX5BHEX5D_49630({data: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 260, Field1: 260, Field2: 55}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 8, Field1: 8, Field2: 54}, {Field0: 9, Field1: 9, Field2: 53}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 13, Field1: 13, Field2: 52}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 16, Field1: 16, Field2: 112}, {Field0: 17, Field1: 17, Field2: 113}, {Field0: 18, Field1: 18, Field2: 114}, {Field0: 19, Field1: 19, Field2: 69}, {Field0: 20, Field1: 20, Field2: 65}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 27, Field1: 27, Field2: 51}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 32, Field1: 32, Field2: 1}, {Field0: 33, Field1: 33, Field2: 61}, {Field0: 34, Field1: 34, Field2: 62}, {Field0: 35, Field1: 35, Field2: 64}, {Field0: 36, Field1: 36, Field2: 63}, {Field0: 37, Field1: 37, Field2: 58}, {Field0: 38, Field1: 38, Field2: 60}, {Field0: 39, Field1: 39, Field2: 57}, {Field0: 40, Field1: 40, Field2: 59}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 44, Field1: 44, Field2: 68}, {Field0: 45, Field1: 45, Field2: 4}, {Field0: 46, Field1: 46, Field2: 56}, {Field0: 47, Field1: 47, Field2: 6}, {Field0: 48, Field1: 48, Field2: 7}, {Field0: 49, Field1: 49, Field2: 8}, {Field0: 50, Field1: 50, Field2: 9}, {Field0: 51, Field1: 51, Field2: 10}, {Field0: 52, Field1: 52, Field2: 11}, {Field0: 53, Field1: 53, Field2: 12}, {Field0: 54, Field1: 54, Field2: 13}, {Field0: 55, Field1: 55, Field2: 14}, {Field0: 56, Field1: 56, Field2: 15}, {Field0: 57, Field1: 57, Field2: 16}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 59, Field1: 59, Field2: 17}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 61, Field1: 61, Field2: 18}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 65, Field1: 65, Field2: 19}, {Field0: 66, Field1: 66, Field2: 20}, {Field0: 67, Field1: 67, Field2: 21}, {Field0: 68, Field1: 68, Field2: 22}, {Field0: 69, Field1: 69, Field2: 23}, {Field0: 70, Field1: 70, Field2: 24}, {Field0: 71, Field1: 71, Field2: 25}, {Field0: 72, Field1: 72, Field2: 26}, {Field0: 73, Field1: 73, Field2: 27}, {Field0: 74, Field1: 74, Field2: 28}, {Field0: 75, Field1: 75, Field2: 29}, {Field0: 76, Field1: 76, Field2: 30}, {Field0: 77, Field1: 77, Field2: 31}, {Field0: 78, Field1: 78, Field2: 32}, {Field0: 79, Field1: 79, Field2: 33}, {Field0: 80, Field1: 80, Field2: 34}, {Field0: 81, Field1: 81, Field2: 35}, {Field0: 82, Field1: 82, Field2: 36}, {Field0: 83, Field1: 83, Field2: 37}, {Field0: 84, Field1: 84, Field2: 38}, {Field0: 85, Field1: 85, Field2: 39}, {Field0: 86, Field1: 86, Field2: 40}, {Field0: 87, Field1: 87, Field2: 41}, {Field0: 88, Field1: 88, Field2: 42}, {Field0: 89, Field1: 89, Field2: 43}, {Field0: 90, Field1: 90, Field2: 44}, {Field0: 91, Field1: 91, Field2: 45}, {Field0: 92, Field1: 92, Field2: 46}, {Field0: 93, Field1: 93, Field2: 47}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 96, Field1: 96, Field2: 95}, {Field0: 97, Field1: 97, Field2: 96}, {Field0: 98, Field1: 98, Field2: 97}, {Field0: 99, Field1: 99, Field2: 98}, {Field0: 100, Field1: 100, Field2: 99}, {Field0: 101, Field1: 101, Field2: 100}, {Field0: 102, Field1: 102, Field2: 101}, {Field0: 103, Field1: 103, Field2: 102}, {Field0: 104, Field1: 104, Field2: 103}, {Field0: 105, Field1: 105, Field2: 104}, {Field0: 106, Field1: 106, Field2: 107}, {Field0: 107, Field1: 107, Field2: 109}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 109, Field1: 109, Field2: 108}, {Field0: 110, Field1: 110, Field2: 105}, {Field0: 111, Field1: 111, Field2: 106}, {Field0: 112, Field1: 112, Field2: 70}, {Field0: 113, Field1: 113, Field2: 71}, {Field0: 114, Field1: 114, Field2: 72}, {Field0: 115, Field1: 115, Field2: 73}, {Field0: 116, Field1: 116, Field2: 74}, {Field0: 117, Field1: 117, Field2: 75}, {Field0: 118, Field1: 118, Field2: 76}, {Field0: 119, Field1: 119, Field2: 77}, {Field0: 120, Field1: 120, Field2: 78}, {Field0: 121, Field1: 121, Field2: 79}, {Field0: 122, Field1: 122, Field2: 80}, {Field0: 123, Field1: 123, Field2: 81}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 144, Field1: 144, Field2: 67}, {Field0: 145, Field1: 145, Field2: 66}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 314159265, Field1: 0, Field2: 0}, {Field0: 161, Field1: 161, Field2: 49}, {Field0: 162, Field1: 162, Field2: 50}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], counter: 96}, k_49627);
framePtr = F.prev;
return result_49628;
}
function initevents_53201() {

function keyev_53204(e_53207) {

var F={procname:"initEvents.keyev",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
emit_51410(result_53203[0], makeNimstrLit("keyEv"), {kind: 0, key: tojskc_49625(e_53207.keyCode), mods: 0, button: 0, kmods: 0, dt: 0.0});
framePtr = F.prev;
}
function mouseev_53211(e_53214) {

var F={procname:"initEvents.mouseev",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
emit_51410(result_53203[0], makeNimstrLit("mouseEv"), {kind: 1, button: 0, key: 0, mods: 0, kmods: 0, dt: 0.0});
framePtr = F.prev;
}
var result_53203 = [{s: null}];
var F={procname:"events.initEvents",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
F.line = 144;
nimCopy(result_53203[0], initeventemitter_51418(), NTI51031);
document.addEventListener("keypress", keyev_53204, true);
document.addEventListener("click", mouseev_53211, true);
framePtr = F.prev;
return result_53203[0];
}
var evq_68001 = /**/[initevents_53201()];
function getcontextwebgl_56113(c_56115) {

var result_56116 = null;
var F={procname:"webgl.getContextWebGL",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 318;
result_56116 = c_56115.getContext('webgl') || c_56115.getContext('experimental-webgl');framePtr = F.prev;
return result_56116;
}
function initwindow_57001() {

var result_57014 = {ctx: null, width: 0, height: 0};
var F={procname:"windows.initWindow",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/windows.nim",line:0};
framePtr = F;
F.line = 15;
var canvas_57015 = document.getElementById("niwe-canvas");
F.line = 17;
result_57014.ctx = getcontextwebgl_56113(canvas_57015);
F.line = 18;
result_57014.width = canvas_57015.width;
F.line = 19;
result_57014.height = canvas_57015.height;
F.line = 20;
console.log(result_57014.width,result_57014.height);framePtr = F.prev;
return result_57014;
}
var w_68002 = /**/[initwindow_57001()];
function resize_56133(canvas_56135) {

var Tmp1;
var F={procname:"webgl.resize",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
if (!((canvas_56135.width == canvas_56135.clientWidth))) Tmp1 = true; else {Tmp1 = !((canvas_56135.height == canvas_56135.clientHeight)); }if (Tmp1) {
F.line = 332;
canvas_56135.width = canvas_56135.clientWidth;
F.line = 333;
canvas_56135.height = canvas_56135.clientHeight;
}

framePtr = F.prev;
}
function getstatus_56123(gl_56125, what_56126) {

var result_56127 = false;
var F={procname:"webgl.getStatus",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 323;
result_56127 = gl_56125.getShaderParameter(what_56126, gl_56125.COMPILE_STATUS);framePtr = F.prev;
return result_56127;
}
function shader_61057(gl_61059, typ_61060, src_61061) {

var result_61062 = {source: null, s: null, kind: 0};
var F={procname:"gl.shader",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
if ((typ_61060 == 1)) {
F.line = 55;
result_61062.s = gl_61059.createShader(35633);
}
else {
if ((typ_61060 == 0)) {
F.line = 57;
result_61062.s = gl_61059.createShader(35632);
}
else {
console.log("Unknown Shader Type");
}
}
gl_61059.shaderSource(result_61062.s, toJSStr(src_61061));
gl_61059.compileShader(result_61062.s);
if (!(getstatus_56123(gl_61059, result_61062.s))) {
console.log(gl_61059.getShaderInfoLog(result_61062.s));
}

F.line = 62;
result_61062.kind = typ_61060;
F.line = 63;
result_61062.source = nimCopy(null, src_61061, NTI138);
framePtr = F.prev;
return result_61062;
}
function getstatus_56128(gl_56130, what_56131) {

var result_56132 = false;
var F={procname:"webgl.getStatus",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 325;
result_56132 = gl_56130.getProgramParameter(what_56131, gl_56130.LINK_STATUS);framePtr = F.prev;
return result_56132;
}
function program_61087(gl_61089, useit_61090, vertexsrc_61091, fragmentsrc_61092) {

var result_61093 = {p: null, vertex: {source: null, s: null, kind: 0}, fragment: {source: null, s: null, kind: 0}, colors: null, attributes: null};
var F={procname:"gl.program",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 68;
var program_61094 = gl_61089.createProgram();
F.line = 69;
var vs_61095 = shader_61057(gl_61089, 1, vertexsrc_61091);
F.line = 70;
var fs_61096 = shader_61057(gl_61089, 0, fragmentsrc_61092);
gl_61089.attachShader(program_61094, vs_61095.s);
gl_61089.attachShader(program_61094, fs_61096.s);
gl_61089.linkProgram(program_61094);
F.line = 75;
nimCopy(result_61093.vertex, vs_61095, NTI58007);
F.line = 76;
nimCopy(result_61093.fragment, fs_61096, NTI58007);
if (!(getstatus_56128(gl_61089, program_61094))) {
console.log(gl_61089.getProgramInfoLog(program_61094));
F.line = 80;
break BeforeRet;
}

if (useit_61090) {
gl_61089.useProgram(program_61094);
}

F.line = 82;
result_61093.p = program_61094;
} while (false); 
framePtr = F.prev;
return result_61093;
}
function clearwith_61053(gl_61055, color_61056) {

var F={procname:"gl.clearWith",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
gl_61055.clearColor(color_61056.Field0, color_61056.Field1, color_61056.Field2, color_61056.Field3);
gl_61055.clear(16384);
framePtr = F.prev;
}
function initrenderer_65009(gl_65011, clear_65012) {

var result_65013 = {context: null, program: {p: null, vertex: {source: null, s: null, kind: 0}, fragment: {source: null, s: null, kind: 0}, colors: null, attributes: null}, buff: null};
var F={procname:"renderer.initRenderer",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
F.line = 35;
result_65013.context = gl_65011;
resize_56133(result_65013.context.canvas);
F.line = 37;
nimCopy(result_65013.program, program_61087(result_65013.context, true, makeNimstrLit("attribute vec4 aPosition;\x0Auniform mat4 uMatrix;\x0Avoid main() {\x0A  gl_Position = uMatrix*aPosition;\x0A}\x0A"), makeNimstrLit("#ifdef GL_ES\x0A  precision highp float;\x0A#endif\x0A\x0Auniform vec4 uColor;\x0Avoid main() {\x0A  gl_FragColor = uColor;\x0A}\x0A")), NTI58012);
clearwith_61053(result_65013.context, clear_65012);
F.line = 39;
result_65013.buff = result_65013.context.createBuffer();
gl_65011.viewport(0, 0, gl_65011.drawingBufferWidth, gl_65011.drawingBufferHeight);
framePtr = F.prev;
return result_65013;
}
var en_68003 = /**/[initrenderer_65009(w_68002[0].ctx, {Field0: 1.0000000000000000e+00, Field1: 1.0000000000000000e+00, Field2: 1.0000000000000000e+00, Field3: 1.0000000000000000e+00})];
var speed_68005 = /**/[{Field0: 0.0, Field1: 0.0}];
var accel_68007 = /**/[{Field0: 2.0000000000000000e+00, Field1: 2.0000000000000000e+00}];
function polygon_65116(x_65118, y_65119, sides_65120, boundingcircleradius_65121, filled_65122, color_65123) {

var result_65124 = {m_type: NTI65074, sides: 0, bcradius: 0.0, filled: false, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"renderer.polygon",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
if (!((3 <= sides_65120))) {
raiseassert_21216(makeNimstrLit("\x0A  3 <= sides "));
}

F.line = 131;
nimCopy(result_65124.color, color_65123, NTI58023);
F.line = 132;
nimCopy(result_65124.pos, {Field0: x_65118, Field1: y_65119}, NTI65044);
F.line = 133;
result_65124.sides = sides_65120;
F.line = 134;
result_65124.bcradius = boundingcircleradius_65121;
F.line = 135;
result_65124.filled = filled_65122;
F.line = 136;
result_65124.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_65124;
}
function rect_65078(x_65080, y_65081, w_65082, h_65083, color_65084, centered_65085) {

var result_65086 = {m_type: NTI65056, size: {Field0: 0.0, Field1: 0.0}, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"renderer.rect",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
F.line = 95;
nimCopy(result_65086.color, color_65084, NTI58023);
F.line = 96;
nimCopy(result_65086.pos, {Field0: x_65080, Field1: y_65081}, NTI65044);
F.line = 97;
nimCopy(result_65086.size, {Field0: w_65082, Field1: h_65083}, NTI65057);
F.line = 99;
result_65086.scale = 1.0000000000000000e+00;
F.line = 100;
result_65086.centered = centered_65085;
framePtr = F.prev;
return result_65086;
}
function circle_65100(x_65102, y_65103, r_65104, color_65105) {

var result_65106 = {m_type: NTI65068, radius: 0.0, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"renderer.circle",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
F.line = 111;
nimCopy(result_65106.color, color_65105, NTI58023);
F.line = 112;
nimCopy(result_65106.pos, {Field0: x_65102, Field1: y_65103}, NTI65044);
F.line = 113;
result_65106.radius = r_65104;
F.line = 114;
result_65106.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_65106;
}
function disk_65108(x_65110, y_65111, r_65112, color_65113) {

var result_65114 = {m_type: NTI65071, radius: 0.0, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"renderer.disk",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
F.line = 117;
nimCopy(result_65114.color, color_65113, NTI58023);
F.line = 118;
nimCopy(result_65114.pos, {Field0: x_65110, Field1: y_65111}, NTI65044);
F.line = 119;
result_65114.radius = r_65112;
F.line = 120;
result_65114.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_65114;
}
function box_65089(x_65091, y_65092, w_65093, h_65094, color_65095, centered_65096) {

var result_65097 = {m_type: NTI65062, size: {Field0: 0.0, Field1: 0.0}, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false};
var F={procname:"renderer.box",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
F.line = 103;
nimCopy(result_65097.color, color_65095, NTI58023);
F.line = 104;
nimCopy(result_65097.pos, {Field0: x_65091, Field1: y_65092}, NTI65044);
F.line = 106;
nimCopy(result_65097.size, {Field0: w_65093, Field1: h_65094}, NTI65063);
F.line = 107;
result_65097.scale = 1.0000000000000000e+00;
F.line = 108;
result_65097.centered = centered_65096;
framePtr = F.prev;
return result_65097;
}
var p_68010 = /**/[polygon_65116(1.0000000000000000e+02, 1.0000000000000000e+02, 5, 1.0000000000000000e+01, true, {Field0: 0.0, Field1: 1.0000000000000000e+00, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var r_68013 = /**/[rect_65078(2.0000000000000000e+02, 2.0000000000000000e+02, 1.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00}, true)];
var c_68014 = /**/[circle_65100(5.0000000000000000e+01, 5.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var d_68017 = /**/[disk_65108(1.5000000000000000e+02, 1.5000000000000000e+02, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var b_68020 = /**/[box_65089(2.5000000000000000e+02, 2.5000000000000000e+02, 1.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00}, true)];
function initeventhandler_51044(name_51046) {

var result_51047 = {Field0: null, Field1: null};
var F={procname:"events.initEventHandler",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
F.line = 68;
result_51047.Field1 = nimCopy(null, [], NTI51063);
F.line = 69;
result_51047.Field0 = nimCopy(null, name_51046, NTI138);
framePtr = F.prev;
return result_51047;
}
function addhandler_51064(handler_51067, fn_51071) {

var F={procname:"events.addHandler",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
if (handler_51067.Field1 != null) { handler_51067.Field1.push(fn_51071); } else { handler_51067.Field1 = [fn_51071]; };
framePtr = F.prev;
}
function on_51274(emitter_51277, event_51278, fn_51282) {

var F={procname:"events.on",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
F.line = 99;
var i_51283 = geteventhandler_51250(emitter_51277, event_51278);
if ((i_51283 < 0)) {
F.line = 101;
var eh_51284 = /**/[initeventhandler_51044(event_51278)];
addhandler_51064(eh_51284[0], fn_51282);
if (emitter_51277.s != null) { emitter_51277.s.push(eh_51284[0]); } else { emitter_51277.s = [eh_51284[0]]; };
}
else {
addhandler_51064(emitter_51277.s[chckIndx(i_51283, 0, emitter_51277.s.length)-0], fn_51282);
}

framePtr = F.prev;
}
function HEX2BHEX3D_39704(x_39709, x_39709_Idx, y_39711) {

var F={procname:"+=.+=",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 3392;
x_39709[x_39709_Idx] = (x_39709[x_39709_Idx] + y_39711);
framePtr = F.prev;
}
function HEX2BHEX3D_67341(lf_67347, rg_67351) {

var F={procname:"renderer.+=",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
HEX2BHEX3D_39704(lf_67347, "Field0", rg_67351["Field0"]);
HEX2BHEX3D_39704(lf_67347, "Field1", rg_67351["Field1"]);
framePtr = F.prev;
}
function HEX3Aanonymous_68032(e_68034) {

var F={procname:"ex2.:anonymous",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
HEX2BHEX3D_67341(speed_68005[0], accel_68007[0]);
framePtr = F.prev;
}
on_51274(evq_68001[0], makeNimstrLit("mouseEv"), HEX3Aanonymous_68032);
function HEX3Aanonymous_68037(e_68039) {

var F={procname:"ex2.:anonymous",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
HEX2BHEX3D_67341(p_68010[0].pos, speed_68005[0]);
framePtr = F.prev;
}
on_51274(evq_68001[0], makeNimstrLit("update"), HEX3Aanonymous_68037);
function extractprogram_61041(program_61043) {

var result_61044 = null;
var F={procname:"gl.extractProgram",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
F.line = 38;
result_61044 = program_61043.p;
framePtr = F.prev;
return result_61044;
}
function HEX5BHEX5DHEX3D_63412(m_63449, i_63451, j_63453, val_63455) {

var F={procname:"[]=.[]=",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((i_63451 < 4))) {
failedassertimpl_21239(makeNimstrLit("i < N Row index out of bounds"));
}

if (!((j_63453 < 4))) {
failedassertimpl_21239(makeNimstrLit("j < M Column index out of bounds"));
}

F.line = 32;
m_63449.data[chckIndx(addInt(mulInt(i_63451, 4), j_63453), 0, m_63449.data.length)-0] = val_63455;
framePtr = F.prev;
}
function low_66602(v_66606) {

var result_66607 = 0;
var F={procname:"low.low",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 84;
result_66607 = 0;
framePtr = F.prev;
return result_66607;
}
function high_66616(v_66620) {

var result_66621 = 0;
var F={procname:"high.high",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 85;
result_66621 = 3;
framePtr = F.prev;
return result_66621;
}
function HEX5BHEX5D_66640(v_66646, i_66648) {

var result_66649 = 0.0;
var F={procname:"[].[]",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 49;
result_66649 = v_66646.data[chckIndx(i_66648, 0, v_66646.data.length)-0];
framePtr = F.prev;
return result_66649;
}
function HEX5BHEX5D_66651(v_66657, i_66659) {

var result_66660 = 0.0;
var F={procname:"[].[]",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 49;
result_66660 = v_66657.data[chckIndx(i_66659, 0, v_66657.data.length)-0];
framePtr = F.prev;
return result_66660;
}
function dot_66417(v_66454, w_66489) {

var result_66490 = [0.0];
var F={procname:"dot.dot",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
L1: do {
F.line = 121;
var i_66638 = 0;
F.line = 1926;
var HEX3Atmp_66672 = 0;
F.line = 1926;
var HEX3Atmp_66673 = 0;
F.line = 121;
HEX3Atmp_66672 = low_66602(v_66454);
F.line = 121;
HEX3Atmp_66673 = high_66616(v_66454);
F.line = 1908;
var res_66676 = HEX3Atmp_66672;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_66676 <= HEX3Atmp_66673)) break L3;
F.line = 1910;
i_66638 = res_66676;
HEX2BHEX3D_39704(result_66490, 0, (HEX5BHEX5D_66640(v_66454, i_66638) * HEX5BHEX5D_66651(w_66489, i_66638)));
res_66676 = addInt(res_66676, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_66490[0];
}
function row_65622(m_65658, r_65660) {

var result_65694 = {data: null, p: [null, 0]};
var F={procname:"row.row",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((r_65660 < 4))) {
failedassertimpl_21239(makeNimstrLit("r < N The matrix has less rows than the requested row index"));
}

result_65694.data = new Float64Array(4);
L1: do {
F.line = 94;
var i_66010 = 0;
F.line = 3689;
var i_66014 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_66014 < 4)) break L3;
F.line = 3691;
i_66010 = i_66014;
F.line = 94;
result_65694.data[chckIndx(i_66010, 0, result_65694.data.length)-0] = m_65658.data[chckIndx(addInt(mulInt(r_65660, 4), i_66010), 0, m_65658.data.length)-0];
i_66014 = addInt(i_66014, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_65694;
}
function col_66017(m_66053, c_66055) {

var result_66089 = {data: null, p: [null, 0]};
var F={procname:"col.col",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((c_66055 < 4))) {
failedassertimpl_21239(makeNimstrLit("c < M The matrix has less cols than the requested col index"));
}

result_66089.data = new Float64Array(4);
L1: do {
F.line = 107;
var i_66410 = 0;
F.line = 3689;
var i_66414 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_66414 < 4)) break L3;
F.line = 3691;
i_66410 = i_66414;
F.line = 107;
result_66089.data[chckIndx(i_66410, 0, result_66089.data.length)-0] = m_66053.data[chckIndx(addInt(mulInt(i_66410, 4), c_66055), 0, m_66053.data.length)-0];
i_66414 = addInt(i_66414, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_66089;
}
function matmul_65138(m_65175, w_65208) {

var result_65240 = [{data: null}];
var F={procname:"matMul.matMul",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
result_65240[0].data = new Float64Array(16);
L1: do {
F.line = 128;
var r_65610 = 0;
F.line = 3689;
var i_66734 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_66734 < 4)) break L3;
F.line = 3691;
r_65610 = i_66734;
L4: do {
F.line = 129;
var c_65620 = 0;
F.line = 3689;
var i_66730 = 0;
L5: do {
F.line = 3690;
L6: while (true) {
if (!(i_66730 < 4)) break L6;
F.line = 3691;
c_65620 = i_66730;
HEX5BHEX5DHEX3D_63412(result_65240[0], r_65610, c_65620, dot_66417(row_65622(m_65175, r_65610), col_66017(w_65208, c_65620)));
i_66730 = addInt(i_66730, 1);
}
} while(false);
} while(false);
i_66734 = addInt(i_66734, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_65240[0];
}
function raiseRangeError() {

var e_13268 = null;
e_13268 = {m_type: NTI3456, parent: null, name: null, message: null, trace: null};
e_13268.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
raiseException(e_13268, "RangeError");
}
function tomatrix_62204(arr_62224) {

var result_62262 = {data: null};
var F={procname:"toMatrix.toMatrix",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
result_62262.data = new Float64Array(16);
if (!(true)) {
failedassertimpl_21239(makeNimstrLit("\x0A  true "));
}

if (false) {
L1: do {
F.line = 63;
var i_62814 = 0;
F.line = 1908;
var res_62818 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_62818 <= 15)) break L3;
F.line = 1910;
i_62814 = chckRange(res_62818, 0, 15);
F.line = 63;
result_62262.data[chckIndx(i_62814, 0, result_62262.data.length)-0] = arr_62224[chckIndx(i_62814, 0, arr_62224.length)-0];
res_62818 = addInt(res_62818, 1);
}
} while(false);
} while(false);
}
else {
F.line = 65;
nimCopy(result_62262.data, arr_62224, NTI62211);
}

framePtr = F.prev;
return result_62262;
}
function translation_62876(x_62882, y_62884, z_62886) {

var Tmp1;
var result_62920 = {data: null};
var F={procname:"translation.translation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
if (!true) Tmp1 = false; else {Tmp1 = true; }if (!(Tmp1)) {
raiseassert_21216(makeNimstrLit("\x0A  true and true be careful with implicit conversions from int to float"));
}

F.line = 24;
var resarr_62923 = new Float64Array(16);
F.line = 25;
resarr_62923[0] = 1.0000000000000000e+00;
F.line = 26;
resarr_62923[5] = 1.0000000000000000e+00;
F.line = 27;
resarr_62923[10] = 1.0000000000000000e+00;
F.line = 33;
resarr_62923[12] = x_62882;
F.line = 34;
resarr_62923[13] = y_62884;
F.line = 35;
resarr_62923[14] = z_62886;
F.line = 36;
resarr_62923[15] = 1.0000000000000000e+00;
F.line = 38;
nimCopy(result_62920, tomatrix_62204(resarr_62923), NTI62233);
framePtr = F.prev;
return result_62920;
}
function translation_62865(x_62867, y_62868, z_62869) {

var result_62873 = {data: null};
var F={procname:"graphic.translation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
F.line = 42;
nimCopy(result_62873, translation_62876(x_62867, y_62868, z_62869), NTI62891);
framePtr = F.prev;
return result_62873;
}
function HEX2F_20407(x_20409, y_20410) {

var result_20411 = 0.0;
var F={procname:"system./",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 3241;
result_20411 = (x_20409 / y_20410);
framePtr = F.prev;
return result_20411;
}
function scaling_64107(w_64113, h_64115) {

var Tmp1;
var result_64149 = {data: null};
var F={procname:"scaling.scaling",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
if (!true) Tmp1 = false; else {Tmp1 = true; }if (!(Tmp1)) {
raiseassert_21216(makeNimstrLit("\x0A  true and true be careful with implicit conversions from int to float"));
}

F.line = 69;
var resarr_64152 = new Float64Array(16);
F.line = 70;
resarr_64152[0] = (1.0000000000000000e+00 / w_64113);
F.line = 71;
resarr_64152[5] = (1.0000000000000000e+00 / h_64115);
F.line = 72;
resarr_64152[10] = 0.0;
F.line = 74;
resarr_64152[10] = 1.0000000000000000e+00;
F.line = 75;
resarr_64152[15] = 1.0000000000000000e+00;
F.line = 77;
nimCopy(result_64149, tomatrix_62204(resarr_64152), NTI62233);
framePtr = F.prev;
return result_64149;
}
function scaling_64097(w_64099, h_64100) {

var result_64104 = {data: null};
var F={procname:"graphic.scaling",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
F.line = 81;
nimCopy(result_64104, scaling_64107(w_64099, h_64100), NTI64120);
framePtr = F.prev;
return result_64104;
}
function tof32a_61002(m_61038) {

var result_61039 = null;
var F={procname:"gl.toF32A",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
F.line = 36;
var am_61040 = nimCopy(null, m_61038.data, NTI61026);
F.line = 37;
result_61039 = new Float32Array(am_61040);
framePtr = F.prev;
return result_61039;
}
function setmatrixunif_65126(eng_65128, rend_65129, uniform_65130) {

var F={procname:"renderer.setMatrixUnif",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
F.line = 139;
var w_65131 = eng_65128.context.drawingBufferWidth;
F.line = 140;
var h_65132 = eng_65128.context.drawingBufferHeight;
F.line = 142;
var umatloc_65133 = eng_65128.context.getUniformLocation(extractprogram_61041(eng_65128.program), toJSStr(uniform_65130));
F.line = 144;
var mat_66950 = matmul_65138(matmul_65138(matmul_65138(translation_62865(rend_65129.pos.Field0, rend_65129.pos.Field1, 0.0), translation_62865(rend_65129.origin.Field0, rend_65129.origin.Field1, 0.0)), translation_62865(HEX2F_20407(negInt(w_65131), 2), HEX2F_20407(negInt(h_65132), 2), 0.0)), scaling_64097(HEX2F_20407(w_65131, 2), HEX2F_20407(h_65132, 2)));
eng_65128.context.uniformMatrix4fv(umatloc_65133, false, tof32a_61002(mat_66950));
framePtr = F.prev;
}
function bufferdata_55929(gl_55931, target_55932, data_55933, usage_55934) {

var F={procname:"webgl.bufferData",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 240;
gl_55931.bufferData(target_55932,data_55933,usage_55934);framePtr = F.prev;
}
function tofloat32array_56098(a_56101) {

var result_56102 = null;
var F={procname:"webgl.toFloat32Array",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 304;
result_56102 = new Float32Array(a_56101);framePtr = F.prev;
return result_56102;
}
function uploadvertices_61133(gl_61135, buff_61136, vertices_61138, drawmode_61139) {

var F={procname:"gl.uploadVertices",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
gl_61135.bindBuffer(34962, buff_61136);
bufferdata_55929(gl_61135, 34962, tofloat32array_56098(vertices_61138), drawmode_61139);
gl_61135.bindBuffer(34962, buff_61136);
framePtr = F.prev;
}
function bindcolor_61106(gl_61108, program_61109, colorname_61110, color_61111) {

var F={procname:"gl.bindColor",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
F.line = 94;
var uloc_61112 = gl_61108.getUniformLocation(extractprogram_61041(program_61109), toJSStr(colorname_61110));
gl_61108.uniform4fv(uloc_61112, tofloat32array_56098([color_61111.Field0, color_61111.Field1, color_61111.Field2, color_61111.Field3]));
framePtr = F.prev;
}
function enableattribute_61126(gl_61128, program_61129, attribname_61130, itemsize_61131) {

var F={procname:"gl.enableAttribute",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
F.line = 99;
var aloc_61132 = gl_61128.getAttribLocation(extractprogram_61041(program_61129), toJSStr(attribname_61130));
gl_61128.enableVertexAttribArray(aloc_61132);
gl_61128.vertexAttribPointer(aloc_61132, itemsize_61131, 5126, false, 0, 0);
framePtr = F.prev;
}
function drawtriangles_61140(gl_61142, buff_61143, p_61144, vertices_61146, color_61147, drawmode_61148) {

var F={procname:"gl.drawTriangles",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
uploadvertices_61133(gl_61142, buff_61143, vertices_61146, drawmode_61148);
F.line = 116;
var numvertices_61157 = divInt((vertices_61146 != null ? vertices_61146.length : 0), 4);
bindcolor_61106(gl_61142, p_61144, makeNimstrLit("uColor"), color_61147);
enableattribute_61126(gl_61142, p_61144, makeNimstrLit("aPosition"), 4);
gl_61142.drawArrays(4, 0, numvertices_61157);
gl_61142.flush();
framePtr = F.prev;
}
function drawtriangles_65020(eng_65022, vertices_65024, color_65025, drawmode_65026) {

var F={procname:"renderer.drawTriangles",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
drawtriangles_61140(eng_65022.context, eng_65022.buff, eng_65022.program, vertices_65024, color_65025, drawmode_65026);
framePtr = F.prev;
}
function draw_66991(eng_66993, rect_66994) {

var F={procname:"renderer.draw",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
setmatrixunif_65126(eng_66993, rect_66994, makeNimstrLit("uMatrix"));
if (rect_66994.centered) {
F.line = 179;
var hw_66996 = (rect_66994.size.Field0 / 2.0000000000000000e+00);
F.line = 180;
var hh_66998 = (rect_66994.size.Field1 / 2.0000000000000000e+00);
drawtriangles_65020(eng_66993, [-(hw_66996), -(hh_66998), 0.0, (1.0000000000000000e+00 / rect_66994.scale), hw_66996, -(hh_66998), 0.0, (1.0000000000000000e+00 / rect_66994.scale), -(hw_66996), hh_66998, 0.0, (1.0000000000000000e+00 / rect_66994.scale), -(hw_66996), hh_66998, 0.0, (1.0000000000000000e+00 / rect_66994.scale), hw_66996, hh_66998, 0.0, (1.0000000000000000e+00 / rect_66994.scale), hw_66996, -(hh_66998), 0.0, (1.0000000000000000e+00 / rect_66994.scale)], rect_66994.color, 35044);
}
else {
drawtriangles_65020(eng_66993, [0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_66994.scale), rect_66994.size.Field0, 0.0, 0.0, (1.0000000000000000e+00 / rect_66994.scale), rect_66994.size.Field0, rect_66994.size.Field1, 0.0, (1.0000000000000000e+00 / rect_66994.scale), rect_66994.size.Field0, rect_66994.size.Field1, 0.0, (1.0000000000000000e+00 / rect_66994.scale), 0.0, rect_66994.size.Field1, 0.0, (1.0000000000000000e+00 / rect_66994.scale), 0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_66994.scale)], rect_66994.color, 35044);
}

framePtr = F.prev;
}
function newseq_67046(len_67050) {

var result_67052 = null;
var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
result_67052 = new Array(len_67050); for (var i=0;i<len_67050;++i) {result_67052[i]=0.0;}framePtr = F.prev;
return result_67052;
}
function drawlineloop_61176(gl_61178, buff_61179, p_61180, vertices_61182, color_61183, drawmode_61184) {

var F={procname:"gl.drawLineLoop",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
uploadvertices_61133(gl_61178, buff_61179, vertices_61182, drawmode_61184);
F.line = 135;
var numvertices_61193 = divInt((vertices_61182 != null ? vertices_61182.length : 0), 4);
bindcolor_61106(gl_61178, p_61180, makeNimstrLit("uColor"), color_61183);
enableattribute_61126(gl_61178, p_61180, makeNimstrLit("aPosition"), 4);
gl_61178.drawArrays(2, 0, numvertices_61193);
gl_61178.flush();
framePtr = F.prev;
}
function drawlineloop_65034(eng_65036, vertices_65038, color_65039, drawmode_65040) {

var F={procname:"renderer.drawLineLoop",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
drawlineloop_61176(eng_65036.context, eng_65036.buff, eng_65036.program, vertices_65038, color_65039, drawmode_65040);
framePtr = F.prev;
}
function draw_67111(eng_67113, circle_67114, roughness_67115) {

var F={procname:"renderer.draw",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
setmatrixunif_65126(eng_67113, circle_67114, makeNimstrLit("uMatrix"));
F.line = 223;
var verts_67144 = newseq_67046(chckRange(mulInt(roughness_67115, 4), 0, 2147483647));
L1: do {
F.line = 226;
var i_67164 = 0;
F.line = 1918;
var HEX3Atmp_67179 = 0;
F.line = 226;
HEX3Atmp_67179 = subInt((verts_67144 != null ? verts_67144.length : 0), 1);
F.line = 1908;
var res_67182 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_67182 <= HEX3Atmp_67179)) break L3;
F.line = 1910;
i_67164 = res_67182;
F.line = 227;
verts_67144[chckIndx(i_67164, 0, verts_67144.length)-0] = (circle_67114.radius * Math.cos(((i_67164 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * roughness_67115))));
F.line = 228;
verts_67144[chckIndx(addInt(i_67164, 1), 0, verts_67144.length)-0] = (circle_67114.radius * Math.sin(((i_67164 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * roughness_67115))));
F.line = 229;
verts_67144[chckIndx(addInt(i_67164, 2), 0, verts_67144.length)-0] = 0.0;
F.line = 230;
verts_67144[chckIndx(addInt(i_67164, 3), 0, verts_67144.length)-0] = (1.0000000000000000e+00 / circle_67114.scale);
res_67182 = addInt(res_67182, 4);
}
} while(false);
} while(false);
drawlineloop_65034(eng_67113, verts_67144, circle_67114.color, 35044);
framePtr = F.prev;
}
function drawtrianglefan_61158(gl_61160, buff_61161, p_61162, vertices_61164, color_61165, drawmode_61166) {

var F={procname:"gl.drawTriangleFan",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
uploadvertices_61133(gl_61160, buff_61161, vertices_61164, drawmode_61166);
F.line = 125;
var numvertices_61175 = divInt((vertices_61164 != null ? vertices_61164.length : 0), 4);
bindcolor_61106(gl_61160, p_61162, makeNimstrLit("uColor"), color_61165);
enableattribute_61126(gl_61160, p_61162, makeNimstrLit("aPosition"), 4);
gl_61160.drawArrays(6, 0, numvertices_61175);
gl_61160.flush();
framePtr = F.prev;
}
function drawtrianglefan_65027(eng_65029, vertices_65031, color_65032, drawmode_65033) {

var F={procname:"renderer.drawTriangleFan",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
drawtrianglefan_61158(eng_65029.context, eng_65029.buff, eng_65029.program, vertices_65031, color_65032, drawmode_65033);
framePtr = F.prev;
}
function draw_67028(eng_67030, circle_67031, roughness_67032) {

var F={procname:"renderer.draw",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
setmatrixunif_65126(eng_67030, circle_67031, makeNimstrLit("uMatrix"));
F.line = 207;
var verts_67071 = newseq_67046(chckRange(addInt(4, mulInt(mulInt(roughness_67032, 4), 2)), 0, 2147483647));
F.line = 210;
verts_67071[3] = (1.0000000000000000e+00 / circle_67031.scale);
L1: do {
F.line = 212;
var i_67092 = 0;
F.line = 1918;
var HEX3Atmp_67104 = 0;
F.line = 212;
HEX3Atmp_67104 = subInt((verts_67071 != null ? verts_67071.length : 0), 1);
F.line = 1908;
var res_67107 = 4;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_67107 <= HEX3Atmp_67104)) break L3;
F.line = 1910;
i_67092 = res_67107;
F.line = 213;
verts_67071[chckIndx(i_67092, 0, verts_67071.length)-0] = (circle_67031.radius * Math.cos((((HEX2F_20407(i_67092, 4) * 2.0000000000000000e+00) * 3.1415926535897931e+00) / roughness_67032)));
F.line = 214;
verts_67071[chckIndx(addInt(i_67092, 1), 0, verts_67071.length)-0] = (circle_67031.radius * Math.sin((((HEX2F_20407(i_67092, 4) * 2.0000000000000000e+00) * 3.1415926535897931e+00) / roughness_67032)));
F.line = 215;
verts_67071[chckIndx(addInt(i_67092, 2), 0, verts_67071.length)-0] = 0.0;
F.line = 216;
verts_67071[chckIndx(addInt(i_67092, 3), 0, verts_67071.length)-0] = (1.0000000000000000e+00 / circle_67031.scale);
res_67107 = addInt(res_67107, 4);
}
} while(false);
} while(false);
drawtrianglefan_65027(eng_67030, verts_67071, circle_67031.color, 35044);
framePtr = F.prev;
}
function draw_67186(eng_67188, pol_67189) {

var F={procname:"renderer.draw",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
setmatrixunif_65126(eng_67188, pol_67189, makeNimstrLit("uMatrix"));
if (pol_67189.filled) {
F.line = 240;
var verts_67218 = newseq_67046(chckRange(addInt(8, mulInt(pol_67189.sides, 4)), 0, 2147483647));
F.line = 243;
verts_67218[3] = (1.0000000000000000e+00 / pol_67189.scale);
L1: do {
F.line = 246;
var i_67239 = 0;
F.line = 1918;
var HEX3Atmp_67307 = 0;
F.line = 246;
HEX3Atmp_67307 = subInt((verts_67218 != null ? verts_67218.length : 0), 1);
F.line = 1908;
var res_67310 = 4;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_67310 <= HEX3Atmp_67307)) break L3;
F.line = 1910;
i_67239 = res_67310;
F.line = 247;
verts_67218[chckIndx(i_67239, 0, verts_67218.length)-0] = (pol_67189.bcradius * Math.cos(((i_67239 * 3.1415926535897931e+00) / (pol_67189.sides * 2.0000000000000000e+00))));
F.line = 249;
verts_67218[chckIndx(addInt(i_67239, 1), 0, verts_67218.length)-0] = (pol_67189.bcradius * Math.sin(((i_67239 * 3.1415926535897931e+00) / (pol_67189.sides * 2.0000000000000000e+00))));
F.line = 251;
verts_67218[chckIndx(addInt(i_67239, 2), 0, verts_67218.length)-0] = 0.0;
F.line = 252;
verts_67218[chckIndx(addInt(i_67239, 3), 0, verts_67218.length)-0] = (1.0000000000000000e+00 / pol_67189.scale);
res_67310 = addInt(res_67310, 4);
}
} while(false);
} while(false);
drawtrianglefan_65027(eng_67188, verts_67218, pol_67189.color, 35044);
}
else {
F.line = 257;
var verts_67271 = newseq_67046(chckRange(mulInt(pol_67189.sides, 4), 0, 2147483647));
L4: do {
F.line = 260;
var i_67291 = 0;
F.line = 1918;
var HEX3Atmp_67323 = 0;
F.line = 260;
HEX3Atmp_67323 = subInt((verts_67271 != null ? verts_67271.length : 0), 1);
F.line = 1908;
var res_67326 = 0;
L5: do {
F.line = 1909;
L6: while (true) {
if (!(res_67326 <= HEX3Atmp_67323)) break L6;
F.line = 1910;
i_67291 = res_67326;
F.line = 261;
verts_67271[chckIndx(i_67291, 0, verts_67271.length)-0] = (pol_67189.bcradius * Math.cos(((i_67291 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * pol_67189.sides))));
F.line = 262;
verts_67271[chckIndx(addInt(i_67291, 1), 0, verts_67271.length)-0] = (pol_67189.bcradius * Math.sin(((i_67291 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * pol_67189.sides))));
F.line = 263;
verts_67271[chckIndx(addInt(i_67291, 2), 0, verts_67271.length)-0] = 0.0;
F.line = 264;
verts_67271[chckIndx(addInt(i_67291, 3), 0, verts_67271.length)-0] = (1.0000000000000000e+00 / pol_67189.scale);
res_67326 = addInt(res_67326, 4);
}
} while(false);
} while(false);
drawlineloop_65034(eng_67188, verts_67271, pol_67189.color, 35044);
}

framePtr = F.prev;
}
function draw_66954(eng_66956, rect_66957) {

var F={procname:"renderer.draw",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
setmatrixunif_65126(eng_66956, rect_66957, makeNimstrLit("uMatrix"));
if (rect_66957.centered) {
F.line = 155;
var hw_66959 = (rect_66957.size.Field0 / 2.0000000000000000e+00);
F.line = 156;
var hh_66961 = (rect_66957.size.Field1 / 2.0000000000000000e+00);
drawlineloop_65034(eng_66956, [-(hw_66959), -(hh_66961), 0.0, (1.0000000000000000e+00 / rect_66957.scale), hw_66959, -(hh_66961), 0.0, (1.0000000000000000e+00 / rect_66957.scale), hw_66959, hh_66961, 0.0, (1.0000000000000000e+00 / rect_66957.scale), -(hw_66959), hh_66961, 0.0, (1.0000000000000000e+00 / rect_66957.scale)], rect_66957.color, 35044);
}
else {
drawlineloop_65034(eng_66956, [0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_66957.scale), rect_66957.size.Field0, 0.0, 0.0, (1.0000000000000000e+00 / rect_66957.scale), rect_66957.size.Field0, rect_66957.size.Field1, 0.0, (1.0000000000000000e+00 / rect_66957.scale), 0.0, rect_66957.size.Field1, 0.0, (1.0000000000000000e+00 / rect_66957.scale)], rect_66957.color, 35044);
}

framePtr = F.prev;
}
function requestanimationframe_56117(fn_56122) {

var F={procname:"webgl.requestAnimationFrame",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 320;
window.requestAnimationFrame(fn_56122);framePtr = F.prev;
}
function innerframedraw_68047(now_68045) {

var F={procname:"ex2.innerframedraw",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
F.line = 279;
dt_68046[0] = (now_68045 - lastt_68043[0]);
emit_51410(evq_68001[0], makeNimstrLit("update"), {dt: dt_68046[0], kind: 0, key: 0, mods: 0, button: 0, kmods: 0});
resize_56133(en_68003[0].context.canvas);
en_68003[0].context.viewport(0, 0, en_68003[0].context.drawingBufferWidth, en_68003[0].context.drawingBufferHeight);
draw_66991(en_68003[0], b_68020[0]);
draw_67111(en_68003[0], c_68014[0], 32);
draw_67028(en_68003[0], d_68017[0], 32);
draw_67186(en_68003[0], p_68010[0]);
draw_66954(en_68003[0], r_68013[0]);
F.line = 281;
lastt_68043[0] = now_68045;
requestanimationframe_56117(innerframedraw_68047);
framePtr = F.prev;
}
var lastt_68043 = /**/[0.0];
var dt_68046 = /**/[0.0];
innerframedraw_68047(0.0);
