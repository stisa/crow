/* Generated by the Nim Compiler v0.16.0 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI70046 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI73137 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI73136 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI73120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71908 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI71907 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI71891 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI72147 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI72146 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI72130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71250 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI71249 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI71233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI128 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI71211 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3456 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI72189 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI72188 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI72172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51068 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI75010 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI75008 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI75006 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI75005 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI74027 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI74024 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI74011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI74005 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI66002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI74003 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI74019 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI74018 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI70017 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI55213 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI55211 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI70015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI55233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI55231 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI70011 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI70002 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI55237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI55235 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI70006 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3444 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3452 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI51036 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51024 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI51023 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI51010 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI51436 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3483 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3436 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
var NNI3436 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3436.node = NNI3436;
NTI3483.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3483, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3436.base = NTI3424;
NTI3440.base = NTI3436;
var NNI12409 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI12409.node = NNI12409;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3438.base = NTI3436;
NTI51023.base = NTI51024;
var NNI51010 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI51023, name: "Field1", sons: null}]};
NTI51010.node = NNI51010;
NTI51436.base = NTI51010;
NTI51039.base = NTI51010;
var NNI51036 = {kind: 1, offset: "s", len: 0, typ: NTI51039, name: "s", sons: null};
NTI51036.node = NNI51036;
var NNI3452 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3452.node = NNI3452;
NTI3452.base = NTI3424;
var NNI3444 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3444.node = NNI3444;
NTI3444.base = NTI3424;
var NNI3448 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3448.node = NNI3448;
var NNI3446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3446.node = NNI3446;
NTI3446.base = NTI3424;
NTI3448.base = NTI3446;
var NNI55237 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI55237.node = NNI55237;
NTI55237.base = NTI3408;
NTI55235.base = NTI55237;
var NNI70002 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: [{kind: 1, offset: 0, typ: NTI70002, name: "Fragment", len: 0, sons: null}, 
{kind: 1, offset: 1, typ: NTI70002, name: "Vertex", len: 0, sons: null}]};
NTI70002.node = NNI70002;
var NNI70006 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "source", len: 0, typ: NTI138, name: "source", sons: null}, 
{kind: 1, offset: "s", len: 0, typ: NTI55235, name: "s", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI70002, name: "kind", sons: null}]};
NTI70006.node = NNI70006;
var NNI55233 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI55233.node = NNI55233;
NTI55233.base = NTI3408;
NTI55231.base = NTI55233;
var NNI55213 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI55213.node = NNI55213;
NTI55213.base = NTI3408;
NTI55211.base = NTI55213;
NTI70015.base = NTI55211;
NTI70017.base = NTI114;
var NNI70011 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "p", len: 0, typ: NTI55231, name: "p", sons: null}, 
{kind: 1, offset: "vertex", len: 0, typ: NTI70006, name: "vertex", sons: null}, 
{kind: 1, offset: "fragment", len: 0, typ: NTI70006, name: "fragment", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI70015, name: "colors", sons: null}, 
{kind: 1, offset: "attributes", len: 0, typ: NTI70017, name: "attributes", sons: null}]};
NTI70011.node = NNI70011;
var NNI74019 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI74019.node = NNI74019;
var NNI74018 = {kind: 1, offset: "size", len: 0, typ: NTI74019, name: "size", sons: null};
NTI74018.node = NNI74018;
var NNI66002 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI124, name: "Field3", sons: null}]};
NTI66002.node = NNI66002;
var NNI74005 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI74005.node = NNI74005;
var NNI74011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI74011.node = NNI74011;
var NNI74003 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "color", len: 0, typ: NTI66002, name: "color", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI74005, name: "pos", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI124, name: "scale", sons: null}, 
{kind: 1, offset: "rot", len: 0, typ: NTI124, name: "rot", sons: null}, 
{kind: 1, offset: "origin", len: 0, typ: NTI74011, name: "origin", sons: null}, 
{kind: 1, offset: "centered", len: 0, typ: NTI130, name: "centered", sons: null}, 
{kind: 1, offset: "filled", len: 0, typ: NTI130, name: "filled", sons: null}]};
NTI74003.node = NNI74003;
NTI74003.base = NTI3408;
NTI74018.base = NTI74003;
var NNI74024 = {kind: 1, offset: "radius", len: 0, typ: NTI124, name: "radius", sons: null};
NTI74024.node = NNI74024;
NTI74024.base = NTI74003;
var NNI74027 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "sides", len: 0, typ: NTI104, name: "sides", sons: null}, 
{kind: 1, offset: "bcradius", len: 0, typ: NTI124, name: "bcradius", sons: null}]};
NTI74027.node = NNI74027;
NTI74027.base = NTI74003;
NTI75006.base = NTI74018;
NTI75008.base = NTI74024;
NTI75010.base = NTI74027;
var NNI75005 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI75006, name: "r", sons: null}, 
{kind: 1, offset: "c", len: 0, typ: NTI75008, name: "c", sons: null}, 
{kind: 1, offset: "p", len: 0, typ: NTI75010, name: "p", sons: null}]};
NTI75005.node = NNI75005;
NTI51068.base = NTI51024;
NTI72189.base = NTI124;
NTI72188.base = NTI72189;
var NNI72172 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI72188, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI72172.node = NNI72172;
var NNI3456 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3456.node = NNI3456;
NTI3456.base = NTI3424;
NTI71211.base = NTI128;
NTI71250.base = NTI124;
NTI71249.base = NTI71250;
var NNI71233 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI71249, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI71233.node = NNI71233;
NTI72147.base = NTI124;
NTI72146.base = NTI72147;
var NNI72130 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI72146, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI72130.node = NNI72130;
NTI71908.base = NTI124;
NTI71907.base = NTI71908;
var NNI71891 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI71907, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI71891.node = NNI71891;
NTI73137.base = NTI124;
NTI73136.base = NTI73137;
var NNI73120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI73136, name: "data", sons: null}, 
{kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]};
NTI73120.node = NNI73120;
NTI70046.base = NTI124;
function makeNimstrLit(c_13403) {

    var ln = c_13403.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_13403.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    }
function SetConstr() {

      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    }
function nimCopy(dest_18618, src_18619, ti_18620) {

var result_19029 = null;
switch (ti_18620.kind) {
case 21: case 22: case 23: case 5: if (!(isfatpointer_18601(ti_18620))) {
result_19029 = src_18619;
}
else {
result_19029 = [src_18619[0], src_18619[1]];}


break;
case 19:       if (dest_18618 === null || dest_18618 === undefined) {
        dest_18618 = {};
      }
      else {
        for (var key in dest_18618) { delete dest_18618[key]; }
      }
      for (var key in src_18619) { dest_18618[key] = src_18619[key]; }
      result_19029 = dest_18618;
    
break;
case 18: case 17: if (!((ti_18620.base == null))) {
result_19029 = nimCopy(dest_18618, src_18619, ti_18620.base);
}
else {
if ((ti_18620.kind == 17)) {
result_19029 = (dest_18618 === null || dest_18618 === undefined) ? {m_type: ti_18620} : dest_18618;}
else {
result_19029 = (dest_18618 === null || dest_18618 === undefined) ? {} : dest_18618;}
}
nimCopyAux(result_19029, src_18619, ti_18620.node);

break;
case 24: case 4: case 27: case 16:       if (src_18619 === null) {
        result_19029 = null;
      }
      else {
        if (dest_18618 === null || dest_18618 === undefined) {
          dest_18618 = new Array(src_18619.length);
        }
        else {
          dest_18618.length = src_18619.length;
        }
        result_19029 = dest_18618;
        for (var i = 0; i < src_18619.length; ++i) {
          result_19029[i] = nimCopy(result_19029[i], src_18619[i], ti_18620.base);
        }
      }
    
break;
case 28:       if (src_18619 !== null) {
        result_19029 = src_18619.slice(0);
      }
    
break;
default: 
result_19029 = src_18619;
break;
}
return result_19029;
}
function eqStrings(a_16003, b_16004) {

    if (a_16003 == b_16004) return true;
    if ((!a_16003) || (!b_16004)) return false;
    var alen = a_16003.length;
    if (alen != b_16004.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16003[i] != b_16004[i]) return false;
    return true;
  }
function arrayConstr(len_19203, value_19204, typ_19205) {

      var result = new Array(len_19203);
      for (var i = 0; i < len_19203; ++i) result[i] = nimCopy(null, value_19204, typ_19205);
      return result;
    }
function cstrToNimstr(c_13603) {

  var ln = c_13603.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_13603.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function toJSStr(s_13803) {

    var len = s_13803.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_13803[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_13803[i] < 128)
        asciiPart[i] = fcc(s_13803[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  }
function raiseException(e_12806, ename_12807) {

e_12806.name = ename_12807;
if ((excHandler == 0)) {
unhandledException(e_12806);
}

e_12806.trace = nimCopy(null, rawwritestacktrace_12628(), NTI138);
throw e_12806;}
function chckIndx(i_19209, a_19210, b_19211) {

var Tmp1;
var result_19212 = 0;
BeforeRet: do {
if (!(a_19210 <= i_19209)) Tmp1 = false; else {Tmp1 = (i_19209 <= b_19211); }if (Tmp1) {
result_19212 = i_19209;
break BeforeRet;
}
else {
raiseIndexError();
}

} while (false); 
return result_19212;
}
function addInt(a_16256, b_16257) {

      var result = a_16256 + b_16257;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function subInt(a_16403, b_16404) {

      var result = a_16403 - b_16404;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function mulInt(a_16603, b_16604) {

      var result = a_16603 * b_16604;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function chckRange(i_19215, a_19216, b_19217) {

var Tmp1;
var result_19218 = 0;
BeforeRet: do {
if (!(a_19216 <= i_19215)) Tmp1 = false; else {Tmp1 = (i_19215 <= b_19217); }if (Tmp1) {
result_19218 = i_19215;
break BeforeRet;
}
else {
raiseRangeError();
}

} while (false); 
return result_19218;
}
function negInt(a_18203) {

var result_18204 = 0;
result_18204 = (a_18203 * -1);
return result_18204;
}
function divInt(a_16803, b_16804) {

      if (b_16804 == 0) raiseDivByZero();
      if (b_16804 == -1 && a_16803 == 2147483647) raiseOverflow();
      return Math.floor(a_16803 / b_16804);
    }
var nimvm_5887 = false;
var nim_program_result = 0;
var globalraisehook_10414 = [null];
var localraisehook_10419 = [null];
var outofmemhook_10422 = [null];
function isfatpointer_18601(ti_18603) {

var result_18604 = false;
BeforeRet: do {
result_18604 = !((SetConstr(17, 16, 4, 18, 27, 19, 23, 22, 21)[ti_18603.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_18604;
}
function nimCopyAux(dest_18623, src_18624, n_18626) {

switch (n_18626.kind) {
case 0: 
break;
case 1:       dest_18623[n_18626.offset] = nimCopy(dest_18623[n_18626.offset], src_18624[n_18626.offset], n_18626.typ);
    
break;
case 2: L1: do {
var i_19015 = 0;
var HEX3Atmp_19017 = 0;
HEX3Atmp_19017 = (n_18626.len - 1);
var res_19020 = 0;
L2: do {
L3: while (true) {
if (!(res_19020 <= HEX3Atmp_19017)) break L3;
i_19015 = res_19020;
nimCopyAux(dest_18623, src_18624, n_18626.sons[i_19015]);
res_19020 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_18623[n_18626.offset] = nimCopy(dest_18623[n_18626.offset], src_18624[n_18626.offset], n_18626.typ);
      for (var i = 0; i < n_18626.sons.length; ++i) {
        nimCopyAux(dest_18623, src_18624, n_18626.sons[i][1]);
      }
    
break;
}
}
function add_10438(x_10441, x_10441_Idx, y_10442) {

        var len = x_10441[0].length-1;
        for (var i = 0; i < y_10442.length; ++i) {
          x_10441[0][len] = y_10442.charCodeAt(i);
          ++len;
        }
        x_10441[0][len] = 0
      }
function auxwritestacktrace_12404(f_12406) {

var Tmp3;
var result_12407 = [null];
var it_12415 = f_12406;
var i_12416 = 0;
var total_12417 = 0;
var tempframes_12421 = arrayConstr(64, {Field0: null, Field1: 0}, NTI12409);
L1: do {
L2: while (true) {
if (!!((it_12415 == null))) Tmp3 = false; else {Tmp3 = (i_12416 <= 63); }if (!Tmp3) break L2;
tempframes_12421[i_12416].Field0 = it_12415.procname;
tempframes_12421[i_12416].Field1 = it_12415.line;
i_12416 += 1;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
L4: do {
L5: while (true) {
if (!!((it_12415 == null))) break L5;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
result_12407[0] = nimCopy(null, makeNimstrLit(""), NTI138);
if (!((total_12417 == i_12416))) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_12407[0] = makeNimstrLit("(");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr(((total_12417 - i_12416))+"")); } else { result_12407[0] = cstrToNimstr(((total_12417 - i_12416))+"");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_12407[0] = makeNimstrLit(" calls omitted) ...\x0A");};
}

L6: do {
var j_12615 = 0;
var HEX3Atmp_12621 = 0;
HEX3Atmp_12621 = (i_12416 - 1);
var res_12624 = HEX3Atmp_12621;
L7: do {
L8: while (true) {
if (!(0 <= res_12624)) break L8;
j_12615 = res_12624;
add_10438(result_12407, 0, tempframes_12421[j_12615].Field0);
if ((0 < tempframes_12421[j_12615].Field1)) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_12407[0] = makeNimstrLit(", line: ");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr((tempframes_12421[j_12615].Field1)+"")); } else { result_12407[0] = cstrToNimstr((tempframes_12421[j_12615].Field1)+"");};
}

if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_12407[0] = makeNimstrLit("\x0A");};
res_12624 -= 1;
}
} while(false);
} while(false);
return result_12407[0];
}
function rawwritestacktrace_12628() {

var result_12630 = null;
if (!((framePtr == null))) {
result_12630 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxwritestacktrace_12404(framePtr)), NTI138);
}
else {
result_12630 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
}

return result_12630;
}
function unhandledException(e_12654) {

var Tmp1;
var buf_12655 = /**/[makeNimstrLit("")];
if (!!(eqStrings(e_12654.message, null))) Tmp1 = false; else {Tmp1 = !((e_12654.message[0] == 0)); }if (Tmp1) {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception: ");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(e_12654.message); } else { buf_12655[0] = e_12654.message;};
}
else {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception");};
}

if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_12655[0] = makeNimstrLit(" [");};
add_10438(buf_12655, 0, e_12654.name);
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_12655[0] = makeNimstrLit("]\x0A");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(rawwritestacktrace_12628()); } else { buf_12655[0] = rawwritestacktrace_12628();};
var cbuf_12801 = toJSStr(buf_12655[0]);
framePtr = null;
  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_12801);
  }
  else {
    throw cbuf_12801;
  }
  }
function raiseOverflow() {

var e_13236 = null;
e_13236 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_13236.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
raiseException(e_13236, "OverflowError");
}
function raiseDivByZero() {

var e_13252 = null;
e_13252 = {m_type: NTI3438, parent: null, name: null, message: null, trace: null};
e_13252.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
raiseException(e_13252, "DivByZeroError");
}
var objectid_42233 = /**/[0];
var state_59605 = /**/[{a0: 1773455756, a1: 4275166512}];
function gettime_62040() {

var result_62413 = null;
var F={procname:"times.getTime",prev:framePtr,filename:"lib/pure/times.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 586;
result_62413 = new Date();
break BeforeRet;
} while (false); 
framePtr = F.prev;
return result_62413;
}
var startmilsecs_62448 = /**/[gettime_62040()];
function initeventemitter_51418() {

var result_51420 = {s: null};
var F={procname:"events.initEventEmitter",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
F.line = 123;
result_51420.s = nimCopy(null, [], NTI51436);
framePtr = F.prev;
return result_51420;
}
function raiseIndexError() {

var e_13284 = null;
e_13284 = {m_type: NTI3452, parent: null, name: null, message: null, trace: null};
e_13284.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
raiseException(e_13284, "IndexError");
}
function geteventhandler_51255(emitter_51258, event_51259) {

var result_51260 = 0;
var F={procname:"events.getEventHandler",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
BeforeRet: do {
L1: do {
F.line = 95;
var k_51270 = 0;
F.line = 1926;
var HEX3Atmp_51272 = 0;
F.line = 95;
HEX3Atmp_51272 = (emitter_51258.s != null ? (emitter_51258.s.length-1) : -1);
F.line = 1908;
var res_51275 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_51275 <= HEX3Atmp_51272)) break L3;
F.line = 1910;
k_51270 = res_51275;
if (eqStrings(emitter_51258.s[chckIndx(k_51270, 0, emitter_51258.s.length)-0].Field0, event_51259)) {
F.line = 96;
result_51260 = k_51270;
break BeforeRet;
}

res_51275 = addInt(res_51275, 1);
}
} while(false);
} while(false);
F.line = 97;
result_51260 = -1;
break BeforeRet;
} while (false); 
framePtr = F.prev;
return result_51260;
}
function sysfatal_21221(message_21227) {

var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 2578;
var e_21229 = null;
e_21229 = {m_type: NTI3444, parent: null, name: null, message: null, trace: null};
F.line = 2580;
e_21229.message = nimCopy(null, message_21227, NTI138);
F.line = 2581;
raiseException(e_21229, "AssertionError");
framePtr = F.prev;
}
function raiseassert_21216(msg_21218) {

var F={procname:"system.raiseAssert",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
sysfatal_21221(msg_21218);
framePtr = F.prev;
}
function failedassertimpl_21239(msg_21241) {

var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
raiseassert_21216(msg_21241);
framePtr = F.prev;
}
function emit_51302(emitter_51305, eventhandler_51307, args_51308) {

var F={procname:"events.emit",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
L1: do {
F.line = 113;
var fn_51402 = null;
F.line = 3495;
var HEX3Atmp_51404 = null;
F.line = 113;
HEX3Atmp_51404 = eventhandler_51307.Field1;
F.line = 3497;
var i_51407 = 0;
F.line = 3498;
var L_51409 = (HEX3Atmp_51404 != null ? HEX3Atmp_51404.length : 0);
L2: do {
F.line = 3499;
L3: while (true) {
if (!(i_51407 < L_51409)) break L3;
F.line = 3500;
fn_51402 = HEX3Atmp_51404[chckIndx(i_51407, 0, HEX3Atmp_51404.length)-0];
fn_51402(args_51308);
i_51407 = addInt(i_51407, 1);
if (!(((HEX3Atmp_51404 != null ? HEX3Atmp_51404.length : 0) == L_51409))) {
failedassertimpl_21239(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
framePtr = F.prev;
}
function emit_51410(emitter_51413, event_51414, args_51415) {

var F={procname:"events.emit",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
F.line = 117;
var i_51416 = geteventhandler_51255(emitter_51413, event_51414);
if ((0 <= i_51416)) {
emit_51302(emitter_51413, emitter_51413.s[chckIndx(i_51416, 0, emitter_51413.s.length)-0], args_51415);
}

framePtr = F.prev;
}
function hash_42801(x_42803) {

var result_42804 = 0;
var F={procname:"hashes.hash",prev:framePtr,filename:"lib/pure/hashes.nim",line:0};
framePtr = F;
F.line = 109;
result_42804 = x_42803;
framePtr = F.prev;
return result_42804;
}
function isfilled_45465(hcode_45467) {

var result_45468 = false;
var F={procname:"tables.isFilled",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
F.line = 18;
result_45468 = !((hcode_45467 == 0));
framePtr = F.prev;
return result_45468;
}
function nexttry_45601(h_45603, maxhash_45604) {

var result_45605 = 0;
var F={procname:"tables.nextTry",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
F.line = 28;
result_45605 = (addInt(h_45603, 1) & maxhash_45604);
framePtr = F.prev;
return result_45605;
}
function rawget_49460(t_49465, key_49467, hc_49469, hc_49469_Idx) {

var Tmp3;
var result_49470 = 0;
var F={procname:"rawGet.rawGet",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 43;
hc_49469[hc_49469_Idx] = hash_42801(key_49467);
if ((hc_49469[hc_49469_Idx] == 0)) {
F.line = 45;
hc_49469[hc_49469_Idx] = 314159265;
}

F.line = 31;
var h_49472 = (hc_49469[hc_49469_Idx] & (t_49465.data != null ? (t_49465.data.length-1) : -1));
L1: do {
F.line = 32;
L2: while (true) {
if (!isfilled_45465(t_49465.data[chckIndx(h_49472, 0, t_49465.data.length)-0].Field0)) break L2;
if (!(t_49465.data[chckIndx(h_49472, 0, t_49465.data.length)-0].Field0 == hc_49469[hc_49469_Idx])) Tmp3 = false; else {Tmp3 = (t_49465.data[chckIndx(h_49472, 0, t_49465.data.length)-0].Field1 == key_49467); }if (Tmp3) {
F.line = 38;
result_49470 = h_49472;
break BeforeRet;
}

F.line = 39;
h_49472 = nexttry_45601(h_49472, (t_49465.data != null ? (t_49465.data.length-1) : -1));
}
} while(false);
F.line = 75;
result_49470 = subInt(-1, h_49472);
} while (false); 
framePtr = F.prev;
return result_49470;
}
function HEX5BHEX5D_49630(t_49636, key_49638) {

var result_49639 = 0;
var F={procname:"[].[]",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
framePtr = F;
F.line = 146;
var hc_49641 = [0];
F.line = 147;
var index_49643 = rawget_49460(t_49636, key_49638, hc_49641, 0);
if ((0 <= index_49643)) {
F.line = 148;
result_49639 = t_49636.data[chckIndx(index_49643, 0, t_49636.data.length)-0].Field2;
}
else {
F.line = 151;
F.line = 2559;
var e_49803 = null;
e_49803 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null};
F.line = 2561;
e_49803.message = nimCopy(null, (makeNimstrLit("key not found: ").slice(0,-1)).concat(cstrToNimstr((key_49638)+"")), NTI138);
raiseException(e_49803, "KeyError");
}

framePtr = F.prev;
return result_49639;
}
function tojskc_49625(k_49627) {

var result_49628 = 0;
var F={procname:"keymap.toJSKC",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/keymap.nim",line:0};
framePtr = F;
F.line = 231;
result_49628 = HEX5BHEX5D_49630({data: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 260, Field1: 260, Field2: 55}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 8, Field1: 8, Field2: 54}, {Field0: 9, Field1: 9, Field2: 53}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 13, Field1: 13, Field2: 52}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 16, Field1: 16, Field2: 112}, {Field0: 17, Field1: 17, Field2: 113}, {Field0: 18, Field1: 18, Field2: 114}, {Field0: 19, Field1: 19, Field2: 69}, {Field0: 20, Field1: 20, Field2: 65}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 27, Field1: 27, Field2: 51}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 32, Field1: 32, Field2: 1}, {Field0: 33, Field1: 33, Field2: 61}, {Field0: 34, Field1: 34, Field2: 62}, {Field0: 35, Field1: 35, Field2: 64}, {Field0: 36, Field1: 36, Field2: 63}, {Field0: 37, Field1: 37, Field2: 58}, {Field0: 38, Field1: 38, Field2: 60}, {Field0: 39, Field1: 39, Field2: 57}, {Field0: 40, Field1: 40, Field2: 59}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 44, Field1: 44, Field2: 68}, {Field0: 45, Field1: 45, Field2: 4}, {Field0: 46, Field1: 46, Field2: 56}, {Field0: 47, Field1: 47, Field2: 6}, {Field0: 48, Field1: 48, Field2: 7}, {Field0: 49, Field1: 49, Field2: 8}, {Field0: 50, Field1: 50, Field2: 9}, {Field0: 51, Field1: 51, Field2: 10}, {Field0: 52, Field1: 52, Field2: 11}, {Field0: 53, Field1: 53, Field2: 12}, {Field0: 54, Field1: 54, Field2: 13}, {Field0: 55, Field1: 55, Field2: 14}, {Field0: 56, Field1: 56, Field2: 15}, {Field0: 57, Field1: 57, Field2: 16}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 59, Field1: 59, Field2: 17}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 61, Field1: 61, Field2: 18}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 65, Field1: 65, Field2: 19}, {Field0: 66, Field1: 66, Field2: 20}, {Field0: 67, Field1: 67, Field2: 21}, {Field0: 68, Field1: 68, Field2: 22}, {Field0: 69, Field1: 69, Field2: 23}, {Field0: 70, Field1: 70, Field2: 24}, {Field0: 71, Field1: 71, Field2: 25}, {Field0: 72, Field1: 72, Field2: 26}, {Field0: 73, Field1: 73, Field2: 27}, {Field0: 74, Field1: 74, Field2: 28}, {Field0: 75, Field1: 75, Field2: 29}, {Field0: 76, Field1: 76, Field2: 30}, {Field0: 77, Field1: 77, Field2: 31}, {Field0: 78, Field1: 78, Field2: 32}, {Field0: 79, Field1: 79, Field2: 33}, {Field0: 80, Field1: 80, Field2: 34}, {Field0: 81, Field1: 81, Field2: 35}, {Field0: 82, Field1: 82, Field2: 36}, {Field0: 83, Field1: 83, Field2: 37}, {Field0: 84, Field1: 84, Field2: 38}, {Field0: 85, Field1: 85, Field2: 39}, {Field0: 86, Field1: 86, Field2: 40}, {Field0: 87, Field1: 87, Field2: 41}, {Field0: 88, Field1: 88, Field2: 42}, {Field0: 89, Field1: 89, Field2: 43}, {Field0: 90, Field1: 90, Field2: 44}, {Field0: 91, Field1: 91, Field2: 45}, {Field0: 92, Field1: 92, Field2: 46}, {Field0: 93, Field1: 93, Field2: 47}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 96, Field1: 96, Field2: 95}, {Field0: 97, Field1: 97, Field2: 96}, {Field0: 98, Field1: 98, Field2: 97}, {Field0: 99, Field1: 99, Field2: 98}, {Field0: 100, Field1: 100, Field2: 99}, {Field0: 101, Field1: 101, Field2: 100}, {Field0: 102, Field1: 102, Field2: 101}, {Field0: 103, Field1: 103, Field2: 102}, {Field0: 104, Field1: 104, Field2: 103}, {Field0: 105, Field1: 105, Field2: 104}, {Field0: 106, Field1: 106, Field2: 107}, {Field0: 107, Field1: 107, Field2: 109}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 109, Field1: 109, Field2: 108}, {Field0: 110, Field1: 110, Field2: 105}, {Field0: 111, Field1: 111, Field2: 106}, {Field0: 112, Field1: 112, Field2: 70}, {Field0: 113, Field1: 113, Field2: 71}, {Field0: 114, Field1: 114, Field2: 72}, {Field0: 115, Field1: 115, Field2: 73}, {Field0: 116, Field1: 116, Field2: 74}, {Field0: 117, Field1: 117, Field2: 75}, {Field0: 118, Field1: 118, Field2: 76}, {Field0: 119, Field1: 119, Field2: 77}, {Field0: 120, Field1: 120, Field2: 78}, {Field0: 121, Field1: 121, Field2: 79}, {Field0: 122, Field1: 122, Field2: 80}, {Field0: 123, Field1: 123, Field2: 81}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 144, Field1: 144, Field2: 67}, {Field0: 145, Field1: 145, Field2: 66}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 314159265, Field1: 0, Field2: 0}, {Field0: 161, Field1: 161, Field2: 49}, {Field0: 162, Field1: 162, Field2: 50}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], counter: 96}, k_49627);
framePtr = F.prev;
return result_49628;
}
function initevents_53201() {

function keyev_53204(e_53207) {

var F={procname:"initEvents.keyev",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
emit_51410(result_53203[0], makeNimstrLit("keyEv"), {kind: 0, key: tojskc_49625(e_53207.keyCode), mods: 0, button: 0, kmods: 0, pos: {Field0: 0.0, Field1: 0.0}, dt: 0.0});
framePtr = F.prev;
}
var result_53203 = [{s: null}];
var F={procname:"events.initEvents",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
F.line = 147;
nimCopy(result_53203[0], initeventemitter_51418(), NTI51036);
document.addEventListener("keypress", keyev_53204, true);
framePtr = F.prev;
return result_53203[0];
}
var evq_85001 = /**/[initevents_53201()];
function getcontextwebgl_56122(c_56124) {

var result_56125 = null;
var F={procname:"webgl.getContextWebGL",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 329;
result_56125 = c_56124.getContext('webgl') || c_56124.getContext('experimental-webgl');framePtr = F.prev;
return result_56125;
}
function initwindow_57206(w_57208, h_57209) {

var Tmp1;
var result_57210 = {ctx: null, width: 0, height: 0};
var F={procname:"windows.initWindow",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/windows.nim",line:0};
framePtr = F;
F.line = 18;
var canvas_57211 = document.getElementById("niwe-canvas");
if (!((w_57208 == -1))) Tmp1 = true; else {Tmp1 = !((h_57209 == -1)); }if (Tmp1) {
F.line = 20;
canvas_57211.width = w_57208;
F.line = 21;
canvas_57211.height = h_57209;
}

F.line = 23;
result_57210.ctx = getcontextwebgl_56122(canvas_57211);
F.line = 24;
result_57210.width = canvas_57211.width;
F.line = 25;
result_57210.height = canvas_57211.height;
F.line = 26;
console.log(result_57210.width,result_57210.height);framePtr = F.prev;
return result_57210;
}
var w_85002 = /**/[initwindow_57206(-1, -1)];
function resize_56142(canvas_56144) {

var Tmp1;
var F={procname:"webgl.resize",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
if (!((canvas_56144.width == canvas_56144.clientWidth))) Tmp1 = true; else {Tmp1 = !((canvas_56144.height == canvas_56144.clientHeight)); }if (Tmp1) {
F.line = 343;
canvas_56144.width = canvas_56144.clientWidth;
F.line = 344;
canvas_56144.height = canvas_56144.clientHeight;
}

framePtr = F.prev;
}
function getstatus_56132(gl_56134, what_56135) {

var result_56136 = false;
var F={procname:"webgl.getStatus",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 334;
result_56136 = gl_56134.getShaderParameter(what_56135, gl_56134.COMPILE_STATUS);framePtr = F.prev;
return result_56136;
}
function shader_70077(gl_70079, typ_70080, src_70081) {

var result_70082 = {source: null, s: null, kind: 0};
var F={procname:"gl.shader",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
if ((typ_70080 == 1)) {
F.line = 43;
result_70082.s = gl_70079.createShader(35633);
}
else {
if ((typ_70080 == 0)) {
F.line = 45;
result_70082.s = gl_70079.createShader(35632);
}
else {
console.log("Unknown Shader Type");
}
}
gl_70079.shaderSource(result_70082.s, toJSStr(src_70081));
gl_70079.compileShader(result_70082.s);
if (!(getstatus_56132(gl_70079, result_70082.s))) {
console.log(gl_70079.getShaderInfoLog(result_70082.s));
}

F.line = 50;
result_70082.kind = typ_70080;
F.line = 51;
result_70082.source = nimCopy(null, src_70081, NTI138);
framePtr = F.prev;
return result_70082;
}
function getstatus_56137(gl_56139, what_56140) {

var result_56141 = false;
var F={procname:"webgl.getStatus",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 336;
result_56141 = gl_56139.getProgramParameter(what_56140, gl_56139.LINK_STATUS);framePtr = F.prev;
return result_56141;
}
function program_70107(gl_70109, useit_70110, vertexsrc_70111, fragmentsrc_70112) {

var result_70113 = {p: null, vertex: {source: null, s: null, kind: 0}, fragment: {source: null, s: null, kind: 0}, colors: null, attributes: null};
var F={procname:"gl.program",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 56;
var program_70114 = gl_70109.createProgram();
F.line = 57;
var vs_70115 = shader_70077(gl_70109, 1, vertexsrc_70111);
F.line = 58;
var fs_70116 = shader_70077(gl_70109, 0, fragmentsrc_70112);
gl_70109.attachShader(program_70114, vs_70115.s);
gl_70109.attachShader(program_70114, fs_70116.s);
gl_70109.linkProgram(program_70114);
F.line = 63;
nimCopy(result_70113.vertex, vs_70115, NTI70006);
F.line = 64;
nimCopy(result_70113.fragment, fs_70116, NTI70006);
if (!(getstatus_56137(gl_70109, program_70114))) {
console.log(gl_70109.getProgramInfoLog(program_70114));
F.line = 68;
break BeforeRet;
}

if (useit_70110) {
gl_70109.useProgram(program_70114);
}

F.line = 70;
result_70113.p = program_70114;
} while (false); 
framePtr = F.prev;
return result_70113;
}
function clearwith_70073(gl_70075, color_70076) {

var F={procname:"gl.clearWith",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
gl_70075.clearColor(color_70076.Field0, color_70076.Field1, color_70076.Field2, color_70076.Field3);
gl_70075.clear(16384);
framePtr = F.prev;
}
function newseq_75028(len_75032) {

var result_75034 = null;
var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
result_75034 = new Array(len_75032); for (var i=0;i<len_75032;++i) {result_75034[i]={m_type: NTI74018, size: {Field0: 0.0, Field1: 0.0}, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false, filled: false};}framePtr = F.prev;
return result_75034;
}
function newseq_75066(len_75070) {

var result_75072 = null;
var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
result_75072 = new Array(len_75070); for (var i=0;i<len_75070;++i) {result_75072[i]={m_type: NTI74024, radius: 0.0, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false, filled: false};}framePtr = F.prev;
return result_75072;
}
function newseq_75104(len_75108) {

var result_75110 = null;
var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
result_75110 = new Array(len_75108); for (var i=0;i<len_75108;++i) {result_75110[i]={m_type: NTI74027, sides: 0, bcradius: 0.0, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false, filled: false};}framePtr = F.prev;
return result_75110;
}
function batcher_75012() {

var result_75014 = {r: null, c: null, p: null};
var F={procname:"renderer.batcher",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
F.line = 34;
nimCopy(result_75014, {r: newseq_75028(0), c: newseq_75066(0), p: newseq_75104(0)}, NTI75005);
framePtr = F.prev;
return result_75014;
}
function initrenderer_75149(gl_75151, clear_75152) {

var result_75153 = {context: null, program: {p: null, vertex: {source: null, s: null, kind: 0}, fragment: {source: null, s: null, kind: 0}, colors: null, attributes: null}, buff: null, b: {r: null, c: null, p: null}};
var F={procname:"renderer.initRenderer",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
F.line = 56;
result_75153.context = gl_75151;
resize_56142(result_75153.context.canvas);
F.line = 58;
nimCopy(result_75153.program, program_70107(result_75153.context, true, makeNimstrLit("attribute vec4 aPosition;\x0Auniform mat4 uMatrix;\x0Avoid main() {\x0A  gl_Position = uMatrix*aPosition;\x0A}\x0A"), makeNimstrLit("#ifdef GL_ES\x0A  precision highp float;\x0A#endif\x0A\x0Auniform vec4 uColor;\x0Avoid main() {\x0A  gl_FragColor = uColor;\x0A}\x0A")), NTI70011);
clearwith_70073(result_75153.context, clear_75152);
F.line = 60;
result_75153.buff = result_75153.context.createBuffer();
gl_75151.viewport(0, 0, gl_75151.drawingBufferWidth, gl_75151.drawingBufferHeight);
F.line = 62;
nimCopy(result_75153.b, batcher_75012(), NTI75005);
framePtr = F.prev;
return result_75153;
}
var en_85003 = /**/[initrenderer_75149(w_85002[0].ctx, {Field0: 1.0000000000000000e+00, Field1: 1.0000000000000000e+00, Field2: 1.0000000000000000e+00, Field3: 1.0000000000000000e+00})];
var speed_85005 = /**/[{Field0: 0.0, Field1: 0.0}];
var accel_85007 = /**/[{Field0: 2.0000000000000000e+00, Field1: 2.0000000000000000e+00}];
function polygon_74074(x_74076, y_74077, sides_74078, boundingcircleradius_74079, filled_74080, color_74081) {

var result_74082 = {m_type: NTI74027, sides: 0, bcradius: 0.0, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false, filled: false};
var F={procname:"primitives.polygon",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/primitives.nim",line:0};
framePtr = F;
if (!((3 <= sides_74078))) {
raiseassert_21216(makeNimstrLit("\x0A  3 <= sides "));
}

F.line = 72;
nimCopy(result_74082.color, color_74081, NTI66002);
F.line = 73;
nimCopy(result_74082.pos, {Field0: x_74076, Field1: y_74077}, NTI74005);
F.line = 74;
result_74082.sides = sides_74078;
F.line = 75;
result_74082.bcradius = boundingcircleradius_74079;
F.line = 76;
result_74082.filled = filled_74080;
F.line = 77;
result_74082.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_74082;
}
function rect_74036(x_74038, y_74039, w_74040, h_74041, color_74042, centered_74043) {

var result_74044 = {m_type: NTI74018, size: {Field0: 0.0, Field1: 0.0}, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false, filled: false};
var F={procname:"primitives.rect",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/primitives.nim",line:0};
framePtr = F;
F.line = 34;
nimCopy(result_74044.color, color_74042, NTI66002);
F.line = 35;
nimCopy(result_74044.pos, {Field0: x_74038, Field1: y_74039}, NTI74005);
F.line = 36;
nimCopy(result_74044.size, {Field0: w_74040, Field1: h_74041}, NTI74019);
F.line = 38;
result_74044.scale = 1.0000000000000000e+00;
F.line = 39;
result_74044.centered = centered_74043;
framePtr = F.prev;
return result_74044;
}
function circle_74058(x_74060, y_74061, r_74062, color_74063) {

var result_74064 = {m_type: NTI74024, radius: 0.0, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false, filled: false};
var F={procname:"primitives.circle",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/primitives.nim",line:0};
framePtr = F;
F.line = 51;
nimCopy(result_74064.color, color_74063, NTI66002);
F.line = 52;
nimCopy(result_74064.pos, {Field0: x_74060, Field1: y_74061}, NTI74005);
F.line = 53;
result_74064.radius = r_74062;
F.line = 54;
result_74064.scale = 1.0000000000000000e+00;
framePtr = F.prev;
return result_74064;
}
function disk_74066(x_74068, y_74069, r_74070, color_74071) {

var result_74072 = {m_type: NTI74024, radius: 0.0, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false, filled: false};
var F={procname:"primitives.disk",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/primitives.nim",line:0};
framePtr = F;
F.line = 57;
nimCopy(result_74072.color, color_74071, NTI66002);
F.line = 58;
nimCopy(result_74072.pos, {Field0: x_74068, Field1: y_74069}, NTI74005);
F.line = 59;
result_74072.radius = r_74070;
F.line = 60;
result_74072.scale = 1.0000000000000000e+00;
F.line = 61;
result_74072.filled = true;
framePtr = F.prev;
return result_74072;
}
function box_74047(x_74049, y_74050, w_74051, h_74052, color_74053, centered_74054) {

var result_74055 = {m_type: NTI74018, size: {Field0: 0.0, Field1: 0.0}, color: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, pos: {Field0: 0.0, Field1: 0.0}, scale: 0.0, rot: 0.0, origin: {Field0: 0.0, Field1: 0.0}, centered: false, filled: false};
var F={procname:"primitives.box",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/primitives.nim",line:0};
framePtr = F;
F.line = 42;
nimCopy(result_74055.color, color_74053, NTI66002);
F.line = 43;
nimCopy(result_74055.pos, {Field0: x_74049, Field1: y_74050}, NTI74005);
F.line = 45;
nimCopy(result_74055.size, {Field0: w_74051, Field1: h_74052}, NTI74019);
F.line = 46;
result_74055.scale = 1.0000000000000000e+00;
F.line = 47;
result_74055.centered = centered_74054;
F.line = 48;
result_74055.filled = true;
framePtr = F.prev;
return result_74055;
}
var p_85010 = /**/[polygon_74074(1.0000000000000000e+02, 1.0000000000000000e+02, 5, 1.0000000000000000e+01, true, {Field0: 0.0, Field1: 1.0000000000000000e+00, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var r_85013 = /**/[rect_74036(2.0000000000000000e+02, 2.0000000000000000e+02, 1.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00}, true)];
var c_85014 = /**/[circle_74058(5.0000000000000000e+01, 5.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var d_85017 = /**/[disk_74066(1.5000000000000000e+02, 1.5000000000000000e+02, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00})];
var b_85020 = /**/[box_74047(2.5000000000000000e+02, 2.5000000000000000e+02, 1.0000000000000000e+01, 1.0000000000000000e+01, {Field0: 1.0000000000000000e+00, Field1: 0.0, Field2: 0.0, Field3: 1.0000000000000000e+00}, true)];
function initeventhandler_51049(name_51051) {

var result_51052 = {Field0: null, Field1: null};
var F={procname:"events.initEventHandler",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
F.line = 71;
result_51052.Field1 = nimCopy(null, [], NTI51068);
F.line = 72;
result_51052.Field0 = nimCopy(null, name_51051, NTI138);
framePtr = F.prev;
return result_51052;
}
function addhandler_51069(handler_51072, fn_51076) {

var F={procname:"events.addHandler",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
if (handler_51072.Field1 != null) { handler_51072.Field1.push(fn_51076); } else { handler_51072.Field1 = [fn_51076]; };
framePtr = F.prev;
}
function on_51279(emitter_51282, event_51283, fn_51287) {

var F={procname:"events.on",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/events.nim",line:0};
framePtr = F;
F.line = 102;
var i_51288 = geteventhandler_51255(emitter_51282, event_51283);
if ((i_51288 < 0)) {
F.line = 104;
var eh_51289 = /**/[initeventhandler_51049(event_51283)];
addhandler_51069(eh_51289[0], fn_51287);
if (emitter_51282.s != null) { emitter_51282.s.push(eh_51289[0]); } else { emitter_51282.s = [eh_51289[0]]; };
}
else {
addhandler_51069(emitter_51282.s[chckIndx(i_51288, 0, emitter_51282.s.length)-0], fn_51287);
}

framePtr = F.prev;
}
function HEX2BHEX3D_39704(x_39709, x_39709_Idx, y_39711) {

var F={procname:"+=.+=",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 3392;
x_39709[x_39709_Idx] = (x_39709[x_39709_Idx] + y_39711);
framePtr = F.prev;
}
function HEX2BHEX3D_84053(lf_84059, rg_84063) {

var F={procname:"renderer.+=",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
HEX2BHEX3D_39704(lf_84059, "Field0", rg_84063["Field0"]);
HEX2BHEX3D_39704(lf_84059, "Field1", rg_84063["Field1"]);
framePtr = F.prev;
}
function HEX3Aanonymous_85032(e_85034) {

var F={procname:"ex2.:anonymous",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
HEX2BHEX3D_84053(speed_85005[0], accel_85007[0]);
framePtr = F.prev;
}
on_51279(evq_85001[0], makeNimstrLit("mouseEv"), HEX3Aanonymous_85032);
function HEX3Aanonymous_85037(e_85039) {

var F={procname:"ex2.:anonymous",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
HEX2BHEX3D_84053(p_85010[0].pos, speed_85005[0]);
framePtr = F.prev;
}
on_51279(evq_85001[0], makeNimstrLit("update"), HEX3Aanonymous_85037);
function extractprogram_70061(program_70063) {

var result_70064 = null;
var F={procname:"gl.extractProgram",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
F.line = 26;
result_70064 = program_70063.p;
framePtr = F.prev;
return result_70064;
}
function HEX5BHEX5DHEX3D_72412(m_72449, i_72451, j_72453, val_72455) {

var F={procname:"[]=.[]=",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((i_72451 < 4))) {
failedassertimpl_21239(makeNimstrLit("i < N Row index out of bounds"));
}

if (!((j_72453 < 4))) {
failedassertimpl_21239(makeNimstrLit("j < M Column index out of bounds"));
}

F.line = 32;
m_72449.data[chckIndx(addInt(mulInt(i_72451, 4), j_72453), 0, m_72449.data.length)-0] = val_72455;
framePtr = F.prev;
}
function low_76602(v_76606) {

var result_76607 = 0;
var F={procname:"low.low",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 84;
result_76607 = 0;
framePtr = F.prev;
return result_76607;
}
function high_76616(v_76620) {

var result_76621 = 0;
var F={procname:"high.high",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 85;
result_76621 = 3;
framePtr = F.prev;
return result_76621;
}
function HEX5BHEX5D_76640(v_76646, i_76648) {

var result_76649 = 0.0;
var F={procname:"[].[]",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 49;
result_76649 = v_76646.data[chckIndx(i_76648, 0, v_76646.data.length)-0];
framePtr = F.prev;
return result_76649;
}
function HEX5BHEX5D_76651(v_76657, i_76659) {

var result_76660 = 0.0;
var F={procname:"[].[]",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
F.line = 49;
result_76660 = v_76657.data[chckIndx(i_76659, 0, v_76657.data.length)-0];
framePtr = F.prev;
return result_76660;
}
function dot_76417(v_76454, w_76489) {

var result_76490 = [0.0];
var F={procname:"dot.dot",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/vector.nim",line:0};
framePtr = F;
L1: do {
F.line = 121;
var i_76638 = 0;
F.line = 1926;
var HEX3Atmp_76672 = 0;
F.line = 1926;
var HEX3Atmp_76673 = 0;
F.line = 121;
HEX3Atmp_76672 = low_76602(v_76454);
F.line = 121;
HEX3Atmp_76673 = high_76616(v_76454);
F.line = 1908;
var res_76676 = HEX3Atmp_76672;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_76676 <= HEX3Atmp_76673)) break L3;
F.line = 1910;
i_76638 = res_76676;
HEX2BHEX3D_39704(result_76490, 0, (HEX5BHEX5D_76640(v_76454, i_76638) * HEX5BHEX5D_76651(w_76489, i_76638)));
res_76676 = addInt(res_76676, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_76490[0];
}
function row_75622(m_75658, r_75660) {

var result_75694 = {data: null, p: [null, 0]};
var F={procname:"row.row",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((r_75660 < 4))) {
failedassertimpl_21239(makeNimstrLit("r < N The matrix has less rows than the requested row index"));
}

result_75694.data = new Float64Array(4);
L1: do {
F.line = 94;
var i_76010 = 0;
F.line = 3689;
var i_76014 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_76014 < 4)) break L3;
F.line = 3691;
i_76010 = i_76014;
F.line = 94;
result_75694.data[chckIndx(i_76010, 0, result_75694.data.length)-0] = m_75658.data[chckIndx(addInt(mulInt(r_75660, 4), i_76010), 0, m_75658.data.length)-0];
i_76014 = addInt(i_76014, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_75694;
}
function col_76017(m_76053, c_76055) {

var result_76089 = {data: null, p: [null, 0]};
var F={procname:"col.col",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
if (!((c_76055 < 4))) {
failedassertimpl_21239(makeNimstrLit("c < M The matrix has less cols than the requested col index"));
}

result_76089.data = new Float64Array(4);
L1: do {
F.line = 107;
var i_76410 = 0;
F.line = 3689;
var i_76414 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_76414 < 4)) break L3;
F.line = 3691;
i_76410 = i_76414;
F.line = 107;
result_76089.data[chckIndx(i_76410, 0, result_76089.data.length)-0] = m_76053.data[chckIndx(addInt(mulInt(i_76410, 4), c_76055), 0, m_76053.data.length)-0];
i_76414 = addInt(i_76414, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_76089;
}
function matmul_75193(m_75230, w_75263) {

var result_75295 = [{data: null}];
var F={procname:"matMul.matMul",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
result_75295[0].data = new Float64Array(16);
L1: do {
F.line = 128;
var r_75610 = 0;
F.line = 3689;
var i_76734 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_76734 < 4)) break L3;
F.line = 3691;
r_75610 = i_76734;
L4: do {
F.line = 129;
var c_75620 = 0;
F.line = 3689;
var i_76730 = 0;
L5: do {
F.line = 3690;
L6: while (true) {
if (!(i_76730 < 4)) break L6;
F.line = 3691;
c_75620 = i_76730;
HEX5BHEX5DHEX3D_72412(result_75295[0], r_75610, c_75620, dot_76417(row_75622(m_75230, r_75610), col_76017(w_75263, c_75620)));
i_76730 = addInt(i_76730, 1);
}
} while(false);
} while(false);
i_76734 = addInt(i_76734, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_75295[0];
}
function identity_72163() {

var result_72201 = [{data: null}];
var F={procname:"identity.identity",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
result_72201[0].data = new Float64Array(16);
L1: do {
F.line = 85;
var i_72410 = 0;
F.line = 3689;
var i_72806 = 0;
L2: do {
F.line = 3690;
L3: while (true) {
if (!(i_72806 < 4)) break L3;
F.line = 3691;
i_72410 = i_72806;
HEX5BHEX5DHEX3D_72412(result_72201[0], i_72410, i_72410, 1.0000000000000000e+00);
i_72806 = addInt(i_72806, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_72201[0];
}
function degtorad_72824(d_72828) {

var result_72829 = 0.0;
result_72829 = (d_72828 * 1.7453292519943295e-02);
return result_72829;
}
function raiseRangeError() {

var e_13268 = null;
e_13268 = {m_type: NTI3456, parent: null, name: null, message: null, trace: null};
e_13268.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
raiseException(e_13268, "RangeError");
}
function tomatrix_71204(arr_71224) {

var result_71262 = {data: null};
var F={procname:"toMatrix.toMatrix",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/matrix.nim",line:0};
framePtr = F;
result_71262.data = new Float64Array(16);
if (!(true)) {
failedassertimpl_21239(makeNimstrLit("\x0A  true "));
}

if (false) {
L1: do {
F.line = 63;
var i_71814 = 0;
F.line = 1908;
var res_71818 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_71818 <= 15)) break L3;
F.line = 1910;
i_71814 = chckRange(res_71818, 0, 15);
F.line = 63;
result_71262.data[chckIndx(i_71814, 0, result_71262.data.length)-0] = arr_71224[chckIndx(i_71814, 0, arr_71224.length)-0];
res_71818 = addInt(res_71818, 1);
}
} while(false);
} while(false);
}
else {
F.line = 65;
nimCopy(result_71262.data, arr_71224, NTI71211);
}

framePtr = F.prev;
return result_71262;
}
function rotation_72117(phi_72123, theta_72125) {

var result_72159 = {data: null};
var F={procname:"rotation.rotation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
BeforeRet: do {
if ((phi_72123 == 0.0)) {
F.line = 46;
nimCopy(result_72159, identity_72163(), NTI72172);
break BeforeRet;
}

if (false) {
raiseassert_21216(makeNimstrLit("true "));
}

F.line = 49;
var resarr_72822 = new Float64Array(16);
F.line = 50;
var ra_72831 = degtorad_72824(phi_72123);
F.line = 51;
var s_72832 = Math.sin(ra_72831);
F.line = 52;
var c_72833 = Math.cos(ra_72831);
F.line = 54;
resarr_72822[0] = c_72833;
F.line = 55;
resarr_72822[1] = s_72832;
F.line = 56;
resarr_72822[4] = -(s_72832);
F.line = 57;
resarr_72822[5] = c_72833;
F.line = 58;
resarr_72822[10] = 1.0000000000000000e+00;
F.line = 59;
resarr_72822[15] = 1.0000000000000000e+00;
F.line = 61;
nimCopy(result_72159, tomatrix_71204(resarr_72822), NTI71233);
} while (false); 
framePtr = F.prev;
return result_72159;
}
function rotation_72107(phi_72109, theta_72110) {

var result_72114 = {data: null};
var F={procname:"graphic.rotation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
F.line = 64;
nimCopy(result_72114, rotation_72117(phi_72109, theta_72110), NTI72130);
framePtr = F.prev;
return result_72114;
}
function translation_71876(x_71882, y_71884, z_71886) {

var Tmp1;
var result_71920 = {data: null};
var F={procname:"translation.translation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
if (!true) Tmp1 = false; else {Tmp1 = true; }if (!(Tmp1)) {
raiseassert_21216(makeNimstrLit("\x0A  true and true be careful with implicit conversions from int to float"));
}

F.line = 24;
var resarr_71923 = new Float64Array(16);
F.line = 25;
resarr_71923[0] = 1.0000000000000000e+00;
F.line = 26;
resarr_71923[5] = 1.0000000000000000e+00;
F.line = 27;
resarr_71923[10] = 1.0000000000000000e+00;
F.line = 33;
resarr_71923[12] = x_71882;
F.line = 34;
resarr_71923[13] = y_71884;
F.line = 35;
resarr_71923[14] = z_71886;
F.line = 36;
resarr_71923[15] = 1.0000000000000000e+00;
F.line = 38;
nimCopy(result_71920, tomatrix_71204(resarr_71923), NTI71233);
framePtr = F.prev;
return result_71920;
}
function translation_71865(x_71867, y_71868, z_71869) {

var result_71873 = {data: null};
var F={procname:"graphic.translation",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
F.line = 42;
nimCopy(result_71873, translation_71876(x_71867, y_71868, z_71869), NTI71891);
framePtr = F.prev;
return result_71873;
}
function HEX2F_20407(x_20409, y_20410) {

var result_20411 = 0.0;
var F={procname:"system./",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 3241;
result_20411 = (x_20409 / y_20410);
framePtr = F.prev;
return result_20411;
}
function scaling_73107(w_73113, h_73115) {

var Tmp1;
var result_73149 = {data: null};
var F={procname:"scaling.scaling",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
if (!true) Tmp1 = false; else {Tmp1 = true; }if (!(Tmp1)) {
raiseassert_21216(makeNimstrLit("\x0A  true and true be careful with implicit conversions from int to float"));
}

F.line = 69;
var resarr_73152 = new Float64Array(16);
F.line = 70;
resarr_73152[0] = (1.0000000000000000e+00 / w_73113);
F.line = 71;
resarr_73152[5] = (1.0000000000000000e+00 / h_73115);
F.line = 72;
resarr_73152[10] = 0.0;
F.line = 74;
resarr_73152[10] = 1.0000000000000000e+00;
F.line = 75;
resarr_73152[15] = 1.0000000000000000e+00;
F.line = 77;
nimCopy(result_73149, tomatrix_71204(resarr_73152), NTI71233);
framePtr = F.prev;
return result_73149;
}
function scaling_73097(w_73099, h_73100) {

var result_73104 = {data: null};
var F={procname:"graphic.scaling",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/snail/snail/graphic.nim",line:0};
framePtr = F;
F.line = 81;
nimCopy(result_73104, scaling_73107(w_73099, h_73100), NTI73120);
framePtr = F.prev;
return result_73104;
}
function tof32a_70022(m_70058) {

var result_70059 = null;
var F={procname:"gl.toF32A",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
F.line = 24;
var am_70060 = nimCopy(null, m_70058.data, NTI70046);
F.line = 25;
result_70059 = new Float32Array(am_70060);
framePtr = F.prev;
return result_70059;
}
function setmatrixunif_75181(eng_75183, rend_75184, uniform_75185) {

var F={procname:"renderer.setMatrixUnif",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
F.line = 81;
var w_75186 = eng_75183.context.drawingBufferWidth;
F.line = 82;
var h_75187 = eng_75183.context.drawingBufferHeight;
F.line = 84;
var umatloc_75188 = eng_75183.context.getUniformLocation(extractprogram_70061(eng_75183.program), toJSStr(uniform_75185));
F.line = 86;
var mat_77057 = matmul_75193(matmul_75193(matmul_75193(matmul_75193(rotation_72107(rend_75184.rot, 0.0), translation_71865(rend_75184.pos.Field0, rend_75184.pos.Field1, 0.0)), translation_71865(rend_75184.origin.Field0, rend_75184.origin.Field1, 0.0)), translation_71865(HEX2F_20407(negInt(w_75186), 2), HEX2F_20407(negInt(h_75187), 2), 0.0)), scaling_73097(HEX2F_20407(w_75186, 2), HEX2F_20407(negInt(h_75187), 2)));
eng_75183.context.uniformMatrix4fv(umatloc_75188, false, tof32a_70022(mat_77057));
framePtr = F.prev;
}
function bufferdata_55938(gl_55940, target_55941, data_55942, usage_55943) {

var F={procname:"webgl.bufferData",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 251;
gl_55940.bufferData(target_55941,data_55942,usage_55943);framePtr = F.prev;
}
function tofloat32array_56107(a_56110) {

var result_56111 = null;
var F={procname:"webgl.toFloat32Array",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 315;
result_56111 = new Float32Array(a_56110);framePtr = F.prev;
return result_56111;
}
function uploadvertices_70153(gl_70155, buff_70156, vertices_70158, drawmode_70159) {

var F={procname:"gl.uploadVertices",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
gl_70155.bindBuffer(34962, buff_70156);
bufferdata_55938(gl_70155, 34962, tofloat32array_56107(vertices_70158), drawmode_70159);
gl_70155.bindBuffer(34962, buff_70156);
framePtr = F.prev;
}
function bindcolor_70126(gl_70128, program_70129, colorname_70130, color_70131) {

var F={procname:"gl.bindColor",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
F.line = 82;
var uloc_70132 = gl_70128.getUniformLocation(extractprogram_70061(program_70129), toJSStr(colorname_70130));
gl_70128.uniform4fv(uloc_70132, tofloat32array_56107([color_70131.Field0, color_70131.Field1, color_70131.Field2, color_70131.Field3]));
framePtr = F.prev;
}
function enableattribute_70146(gl_70148, program_70149, attribname_70150, itemsize_70151) {

var F={procname:"gl.enableAttribute",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
F.line = 87;
var aloc_70152 = gl_70148.getAttribLocation(extractprogram_70061(program_70149), toJSStr(attribname_70150));
gl_70148.enableVertexAttribArray(aloc_70152);
gl_70148.vertexAttribPointer(aloc_70152, itemsize_70151, 5126, false, 0, 0);
framePtr = F.prev;
}
function drawtriangles_70160(gl_70162, buff_70163, p_70164, vertices_70166, color_70167, drawmode_70168) {

var F={procname:"gl.drawTriangles",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
uploadvertices_70153(gl_70162, buff_70163, vertices_70166, drawmode_70168);
F.line = 104;
var numvertices_70177 = divInt((vertices_70166 != null ? vertices_70166.length : 0), 4);
bindcolor_70126(gl_70162, p_70164, makeNimstrLit("uColor"), color_70167);
enableattribute_70146(gl_70162, p_70164, makeNimstrLit("aPosition"), 4);
gl_70162.drawArrays(4, 0, numvertices_70177);
gl_70162.flush();
framePtr = F.prev;
}
function drawtriangles_75160(eng_75162, vertices_75164, color_75165, drawmode_75166) {

var F={procname:"renderer.drawTriangles",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
drawtriangles_70160(eng_75162.context, eng_75162.buff, eng_75162.program, vertices_75164, color_75165, drawmode_75166);
framePtr = F.prev;
}
function drawb_77099(eng_77101, rect_77102) {

var F={procname:"renderer.drawB",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
setmatrixunif_75181(eng_77101, rect_77102, makeNimstrLit("uMatrix"));
if (rect_77102.centered) {
F.line = 123;
var hw_77104 = (rect_77102.size.Field0 / 2.0000000000000000e+00);
F.line = 124;
var hh_77106 = (rect_77102.size.Field1 / 2.0000000000000000e+00);
drawtriangles_75160(eng_77101, [-(hw_77104), -(hh_77106), 0.0, (1.0000000000000000e+00 / rect_77102.scale), hw_77104, -(hh_77106), 0.0, (1.0000000000000000e+00 / rect_77102.scale), -(hw_77104), hh_77106, 0.0, (1.0000000000000000e+00 / rect_77102.scale), -(hw_77104), hh_77106, 0.0, (1.0000000000000000e+00 / rect_77102.scale), hw_77104, hh_77106, 0.0, (1.0000000000000000e+00 / rect_77102.scale), hw_77104, -(hh_77106), 0.0, (1.0000000000000000e+00 / rect_77102.scale)], rect_77102.color, 35048);
}
else {
drawtriangles_75160(eng_77101, [0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_77102.scale), rect_77102.size.Field0, 0.0, 0.0, (1.0000000000000000e+00 / rect_77102.scale), rect_77102.size.Field0, rect_77102.size.Field1, 0.0, (1.0000000000000000e+00 / rect_77102.scale), rect_77102.size.Field0, rect_77102.size.Field1, 0.0, (1.0000000000000000e+00 / rect_77102.scale), 0.0, rect_77102.size.Field1, 0.0, (1.0000000000000000e+00 / rect_77102.scale), 0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_77102.scale)], rect_77102.color, 35048);
}

framePtr = F.prev;
}
function drawlineloop_70196(gl_70198, buff_70199, p_70200, vertices_70202, color_70203, drawmode_70204) {

var F={procname:"gl.drawLineLoop",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
uploadvertices_70153(gl_70198, buff_70199, vertices_70202, drawmode_70204);
F.line = 123;
var numvertices_70213 = divInt((vertices_70202 != null ? vertices_70202.length : 0), 4);
bindcolor_70126(gl_70198, p_70200, makeNimstrLit("uColor"), color_70203);
enableattribute_70146(gl_70198, p_70200, makeNimstrLit("aPosition"), 4);
gl_70198.drawArrays(2, 0, numvertices_70213);
gl_70198.flush();
framePtr = F.prev;
}
function drawlineloop_75174(eng_75176, vertices_75178, color_75179, drawmode_75180) {

var F={procname:"renderer.drawLineLoop",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
drawlineloop_70196(eng_75176.context, eng_75176.buff, eng_75176.program, vertices_75178, color_75179, drawmode_75180);
framePtr = F.prev;
}
function drawr_77062(eng_77064, rect_77065) {

var F={procname:"renderer.drawR",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
setmatrixunif_75181(eng_77064, rect_77065, makeNimstrLit("uMatrix"));
if (rect_77065.centered) {
F.line = 99;
var hw_77067 = (rect_77065.size.Field0 / 2.0000000000000000e+00);
F.line = 100;
var hh_77069 = (rect_77065.size.Field1 / 2.0000000000000000e+00);
drawlineloop_75174(eng_77064, [-(hw_77067), -(hh_77069), 0.0, (1.0000000000000000e+00 / rect_77065.scale), hw_77067, -(hh_77069), 0.0, (1.0000000000000000e+00 / rect_77065.scale), hw_77067, hh_77069, 0.0, (1.0000000000000000e+00 / rect_77065.scale), -(hw_77067), hh_77069, 0.0, (1.0000000000000000e+00 / rect_77065.scale)], rect_77065.color, 35044);
}
else {
drawlineloop_75174(eng_77064, [0.0, 0.0, 0.0, (1.0000000000000000e+00 / rect_77065.scale), rect_77065.size.Field0, 0.0, 0.0, (1.0000000000000000e+00 / rect_77065.scale), rect_77065.size.Field0, rect_77065.size.Field1, 0.0, (1.0000000000000000e+00 / rect_77065.scale), 0.0, rect_77065.size.Field1, 0.0, (1.0000000000000000e+00 / rect_77065.scale)], rect_77065.color, 35044);
}

framePtr = F.prev;
}
function draw_77438(r_77440, rect_77441) {

var F={procname:"renderer.draw",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
if (rect_77441.filled) {
drawb_77099(r_77440, rect_77441);
}
else {
drawr_77062(r_77440, rect_77441);
}

framePtr = F.prev;
}
function newseq_77154(len_77158) {

var result_77160 = null;
var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
result_77160 = new Array(len_77158); for (var i=0;i<len_77158;++i) {result_77160[i]=0.0;}framePtr = F.prev;
return result_77160;
}
function drawtrianglefan_70178(gl_70180, buff_70181, p_70182, vertices_70184, color_70185, drawmode_70186) {

var F={procname:"gl.drawTriangleFan",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/gl.nim",line:0};
framePtr = F;
uploadvertices_70153(gl_70180, buff_70181, vertices_70184, drawmode_70186);
F.line = 113;
var numvertices_70195 = divInt((vertices_70184 != null ? vertices_70184.length : 0), 4);
bindcolor_70126(gl_70180, p_70182, makeNimstrLit("uColor"), color_70185);
enableattribute_70146(gl_70180, p_70182, makeNimstrLit("aPosition"), 4);
gl_70180.drawArrays(6, 0, numvertices_70195);
gl_70180.flush();
framePtr = F.prev;
}
function drawtrianglefan_75167(eng_75169, vertices_75171, color_75172, drawmode_75173) {

var F={procname:"renderer.drawTriangleFan",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
drawtrianglefan_70178(eng_75169.context, eng_75169.buff, eng_75169.program, vertices_75171, color_75172, drawmode_75173);
framePtr = F.prev;
}
function drawd_77136(eng_77138, circle_77139, roughness_77140) {

var F={procname:"renderer.drawD",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
setmatrixunif_75181(eng_77138, circle_77139, makeNimstrLit("uMatrix"));
F.line = 152;
var verts_77179 = newseq_77154(chckRange(addInt(4, mulInt(mulInt(roughness_77140, 4), 2)), 0, 2147483647));
F.line = 155;
verts_77179[3] = (1.0000000000000000e+00 / circle_77139.scale);
L1: do {
F.line = 157;
var i_77200 = 0;
F.line = 1918;
var HEX3Atmp_77212 = 0;
F.line = 157;
HEX3Atmp_77212 = subInt((verts_77179 != null ? verts_77179.length : 0), 1);
F.line = 1908;
var res_77215 = 4;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_77215 <= HEX3Atmp_77212)) break L3;
F.line = 1910;
i_77200 = res_77215;
F.line = 158;
verts_77179[chckIndx(i_77200, 0, verts_77179.length)-0] = (circle_77139.radius * Math.cos((((HEX2F_20407(i_77200, 4) * 2.0000000000000000e+00) * 3.1415926535897931e+00) / roughness_77140)));
F.line = 159;
verts_77179[chckIndx(addInt(i_77200, 1), 0, verts_77179.length)-0] = (circle_77139.radius * Math.sin((((HEX2F_20407(i_77200, 4) * 2.0000000000000000e+00) * 3.1415926535897931e+00) / roughness_77140)));
F.line = 160;
verts_77179[chckIndx(addInt(i_77200, 2), 0, verts_77179.length)-0] = 0.0;
F.line = 161;
verts_77179[chckIndx(addInt(i_77200, 3), 0, verts_77179.length)-0] = (1.0000000000000000e+00 / circle_77139.scale);
res_77215 = addInt(res_77215, 4);
}
} while(false);
} while(false);
drawtrianglefan_75167(eng_77138, verts_77179, circle_77139.color, 35048);
framePtr = F.prev;
}
function drawc_77219(eng_77221, circle_77222, roughness_77223) {

var F={procname:"renderer.drawC",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
setmatrixunif_75181(eng_77221, circle_77222, makeNimstrLit("uMatrix"));
F.line = 168;
var verts_77252 = newseq_77154(chckRange(mulInt(roughness_77223, 4), 0, 2147483647));
L1: do {
F.line = 171;
var i_77272 = 0;
F.line = 1918;
var HEX3Atmp_77287 = 0;
F.line = 171;
HEX3Atmp_77287 = subInt((verts_77252 != null ? verts_77252.length : 0), 1);
F.line = 1908;
var res_77290 = 0;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_77290 <= HEX3Atmp_77287)) break L3;
F.line = 1910;
i_77272 = res_77290;
F.line = 172;
verts_77252[chckIndx(i_77272, 0, verts_77252.length)-0] = (circle_77222.radius * Math.cos(((i_77272 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * roughness_77223))));
F.line = 173;
verts_77252[chckIndx(addInt(i_77272, 1), 0, verts_77252.length)-0] = (circle_77222.radius * Math.sin(((i_77272 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * roughness_77223))));
F.line = 174;
verts_77252[chckIndx(addInt(i_77272, 2), 0, verts_77252.length)-0] = 0.0;
F.line = 175;
verts_77252[chckIndx(addInt(i_77272, 3), 0, verts_77252.length)-0] = (1.0000000000000000e+00 / circle_77222.scale);
res_77290 = addInt(res_77290, 4);
}
} while(false);
} while(false);
drawlineloop_75174(eng_77221, verts_77252, circle_77222.color, 35044);
framePtr = F.prev;
}
function draw_77442(r_77444, circle_77445, roughness_77446) {

var F={procname:"renderer.draw",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
if (circle_77445.filled) {
drawd_77136(r_77444, circle_77445, roughness_77446);
}
else {
drawc_77219(r_77444, circle_77445, roughness_77446);
}

framePtr = F.prev;
}
function draw_77294(eng_77296, pol_77297) {

var F={procname:"renderer.draw",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
setmatrixunif_75181(eng_77296, pol_77297, makeNimstrLit("uMatrix"));
if (pol_77297.filled) {
F.line = 185;
var verts_77326 = newseq_77154(chckRange(addInt(8, mulInt(pol_77297.sides, 4)), 0, 2147483647));
F.line = 188;
verts_77326[3] = (1.0000000000000000e+00 / pol_77297.scale);
L1: do {
F.line = 191;
var i_77347 = 0;
F.line = 1918;
var HEX3Atmp_77415 = 0;
F.line = 191;
HEX3Atmp_77415 = subInt((verts_77326 != null ? verts_77326.length : 0), 1);
F.line = 1908;
var res_77418 = 4;
L2: do {
F.line = 1909;
L3: while (true) {
if (!(res_77418 <= HEX3Atmp_77415)) break L3;
F.line = 1910;
i_77347 = res_77418;
F.line = 192;
verts_77326[chckIndx(i_77347, 0, verts_77326.length)-0] = (pol_77297.bcradius * Math.cos(((i_77347 * 3.1415926535897931e+00) / (pol_77297.sides * 2.0000000000000000e+00))));
F.line = 194;
verts_77326[chckIndx(addInt(i_77347, 1), 0, verts_77326.length)-0] = (pol_77297.bcradius * Math.sin(((i_77347 * 3.1415926535897931e+00) / (pol_77297.sides * 2.0000000000000000e+00))));
F.line = 196;
verts_77326[chckIndx(addInt(i_77347, 2), 0, verts_77326.length)-0] = 0.0;
F.line = 197;
verts_77326[chckIndx(addInt(i_77347, 3), 0, verts_77326.length)-0] = (1.0000000000000000e+00 / pol_77297.scale);
res_77418 = addInt(res_77418, 4);
}
} while(false);
} while(false);
drawtrianglefan_75167(eng_77296, verts_77326, pol_77297.color, 35048);
}
else {
F.line = 202;
var verts_77379 = newseq_77154(chckRange(mulInt(pol_77297.sides, 4), 0, 2147483647));
L4: do {
F.line = 205;
var i_77399 = 0;
F.line = 1918;
var HEX3Atmp_77431 = 0;
F.line = 205;
HEX3Atmp_77431 = subInt((verts_77379 != null ? verts_77379.length : 0), 1);
F.line = 1908;
var res_77434 = 0;
L5: do {
F.line = 1909;
L6: while (true) {
if (!(res_77434 <= HEX3Atmp_77431)) break L6;
F.line = 1910;
i_77399 = res_77434;
F.line = 206;
verts_77379[chckIndx(i_77399, 0, verts_77379.length)-0] = (pol_77297.bcradius * Math.cos(((i_77399 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * pol_77297.sides))));
F.line = 207;
verts_77379[chckIndx(addInt(i_77399, 1), 0, verts_77379.length)-0] = (pol_77297.bcradius * Math.sin(((i_77399 * 3.1415926535897931e+00) / (2.0000000000000000e+00 * pol_77297.sides))));
F.line = 208;
verts_77379[chckIndx(addInt(i_77399, 2), 0, verts_77379.length)-0] = 0.0;
F.line = 209;
verts_77379[chckIndx(addInt(i_77399, 3), 0, verts_77379.length)-0] = (1.0000000000000000e+00 / pol_77297.scale);
res_77434 = addInt(res_77434, 4);
}
} while(false);
} while(false);
drawlineloop_75174(eng_77296, verts_77379, pol_77297.color, 35044);
}

framePtr = F.prev;
}
function requestanimationframe_56126(fn_56131) {

var F={procname:"webgl.requestAnimationFrame",prev:framePtr,filename:"/data/data/com.termux/files/home/.nimble/pkgs/webgl/webgl.nim",line:0};
framePtr = F;
F.line = 331;
window.requestAnimationFrame(fn_56131);framePtr = F.prev;
}
function innerframedraw_85047(now_85045) {

var F={procname:"ex2.innerframedraw",prev:framePtr,filename:"/data/data/com.termux/files/home/proj/niwe/niwe/renderer.nim",line:0};
framePtr = F;
F.line = 248;
dt_85046[0] = (now_85045 - lastt_85043[0]);
emit_51410(evq_85001[0], makeNimstrLit("update"), {dt: dt_85046[0], kind: 0, key: 0, mods: 0, button: 0, kmods: 0, pos: {Field0: 0.0, Field1: 0.0}});
resize_56142(en_85003[0].context.canvas);
en_85003[0].context.viewport(0, 0, en_85003[0].context.drawingBufferWidth, en_85003[0].context.drawingBufferHeight);
draw_77438(en_85003[0], b_85020[0]);
draw_77442(en_85003[0], c_85014[0], 32);
draw_77442(en_85003[0], d_85017[0], 32);
draw_77294(en_85003[0], p_85010[0]);
draw_77438(en_85003[0], r_85013[0]);
F.line = 250;
lastt_85043[0] = now_85045;
requestanimationframe_56126(innerframedraw_85047);
framePtr = F.prev;
}
var lastt_85043 = /**/[0.0];
var dt_85046 = /**/[0.0];
innerframedraw_85047(0.0);
